@using PQT.Domain.Entities
@using Resources
@model System.Collections.Generic.IEnumerable<PQT.Domain.Entities.Event>

@{
    ViewBag.Title = "Events For Operation";
}

<section>
    <div class="section-header">
        <h2 class="text-primary">@ViewBag.Title</h2>
    </div>
    <div class="card" style="margin-bottom: 350px">
        <div class="card-body">
            <table class="table" id="table">
                <thead>
                    <tr>
                        <th>@Resource.Code</th>
                        <th>Status</th>
                        <th>@Resource.Name</th>
                        <th>Color</th>
                        <th>Event First Day</th>
                        <th>Event Last Day</th>
                        <th>Date Of Confirmation</th>
                        <th>Total Delegates</th>
                        <th>Location</th>
                        <th>Hotel Venue</th>
                        <th></th>
                    </tr>
                </thead>
            </table>
        </div>
    </div>
</section>


@Html.Script(
    @<script>

        var $Table = $('#table').dataTable({
            "processing": true, // for show progress bar
            "serverSide": true, // for process server side
            "filter": true, // this is for disable filter (search box)
            "orderMulti": false, // for disable multiple column at once
            "stateSave": false,
            "ajax": {
                "url": "@Url.Action("AjaxGetEventAlls")",
                "type": "POST",
                "datatype": "json",
                "data": function(d) {
                }
            },
            "columns": [
                { "data": "EventCode", "name": "EventCode", "orderable": true },
                { "data": "EventStatusDisplay", "name": "EventStatusDisplay", "orderable": true },
                { "data": "EventName", "name": "EventName", "orderable": true },
                { "data": "ID", "name": "ID", "orderable": false },
                { "data": "StartDate", "name": "StartDate", "orderable": true },
                { "data": "EndDate", "name": "EndDate", "orderable": true },
                { "data": "DateOfConfirmation", "name": "DateOfConfirmation", "orderable": true },
                { "data": "TotalDelegates", "name": "TotalDelegates", "orderable": true },
                { "data": "Location", "name": "Location", "orderable": true },
                { "data": "HotelVenue", "name": "HotelVenue", "orderable": true },
                { "data": "ID", "name": "ID", "orderable": false },
            ],
            "iDisplayLength": 50,
            "aaSorting": [[0, "desc"]],
            "fnRowCallback": function(nRow, aData, iDisplayIndex, iDisplayIndexFull) {
                $(nRow).find('td:eq(0)').html('<a href="@Url.Action("Detail")/' +
                    aData["ID"] +
                    '">' +
                    aData["EventCode"] +
                    '</a>');
                $(nRow).find('td:eq(3)').html('<span class="EventColor" style="cursor: default;display: inline-block;width: 30px;height: 30px;background:' + aData["BackgroundColor"] + ';border:1px solid #c3c3c3;border-radius: 50%;">&nbsp;</span>');

                $(nRow).find('td:eq(7)').css("text-align", "center");
                var dropdowns = '<li><a href="@Url.Action("Detail")/' + aData["ID"] + '"><i class="fa fa-eye"> Detail</i></a></li>';
                
                if ('@CurrentUser.HasPermission("Operation", "Edit")' == 'True') {
                    dropdowns += '<li class="divider"></li><li><a href="@Url.Action("Edit")/' + aData["ID"] + '"><i class="md md-edit text-info"> Edit</i></a></li>';
                }
                $(nRow).find('td:eq(10)').html('<div class="dropdown"><a class="btn dropdown-toggle btn-default btn-mini btn btn-flat prepend-icon" data-toggle="dropdown" href="#"><i class="fa fa-navicon"></i> <span class="caret"></span></a><ul class="pull-right dropdown-menu">' +
                    dropdowns +
                    '</ul></div>');
                $(nRow).attr("data-id", ["ID"]);
            },
            initComplete: function () {
                var _table = this;
                _table.parent().find('input[type="search"]').unbind();
                var timeOutTyping;
                _table.parent().find('input[type="search"]').bind('keyup', function (e) {
                    clearTimeout(timeOutTyping);
                    timeOutTyping = setTimeout(function () {
                        _table.fnFilter(_table.parent().find('input[type="search"]').eq(0).val());
                    }, 600);
                });
            },
        });

    </script>)