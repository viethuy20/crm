@using PQT.Domain.Entities
@using PQT.Domain.Enum
@using Resources
@model IEnumerable<ReportCall>

@{
    ViewBag.Title = "Report Call";
}
<style>
    .table tr td {
        vertical-align: middle !important;
    }

    #recruitmentTable td, #recruitmentTable td {
        white-space: nowrap;
    }

    .table td,
    .table th {
        white-space: nowrap !important;
    }
</style>
<section >
    <div class="section-header">
        <h2 class="text-primary">@ViewBag.Title</h2>
    </div>
    <div class="card" >
        <div class="card-body">
            <table class="table" id="recruitmentTable">
                <thead>
                    <tr>
                        <th>Created Date</th>
                        <th>Sales</th>
                        <th>Company Name</th>
                        <th>Direct Line</th>
                        <th>Job Title</th>
                        <th>Salutation</th>
                        <th>First Name</th>
                        <th>Last Name</th>
                        <th>Mobile Phone1</th>
                        <th>Mobile Phone2</th>
                        <th>Mobile Phone3</th>
                        <th>Work Email</th>
                        <th>Work Email1</th>
                        <th>Personal Email</th>
                        <th></th>
                    </tr>
                </thead>
            </table>
        </div>
    </div>
</section>


@Html.Script(
    @<script>

         var fixedColumn = 0;
        var $Table = $('#recruitmentTable').dataTable({
            "processing": true, // for show progress bar
            "serverSide": true, // for process server side
            "filter": true, // this is for disable filter (search box)
            "orderMulti": false, // for disable multiple column at once
            "stateSave": false,
            "ajax": {
                "url": "@Url.Action("AjaxGetAlls")",
                "type": "POST",
                "datatype": "json",
                "data": function(d) {
                }
            },
            "columns": [
                { "data": "CreatedTimeDisplay", "name": "CreatedTime", "orderable": true },
                { "data": "SalesmanName", "name": "SalesmanName", "orderable": true },
                { "data": "CompanyName", "name": "CompanyName", "orderable": true },
                { "data": "DirectLine", "name": "DirectLine", "orderable": true },
                { "data": "JobTitle", "name": "JobTitle", "orderable": true },
                { "data": "Salutation", "name": "Salutation", "orderable": true },
                { "data": "FirstName", "name": "FirstName", "orderable": true },
                { "data": "LastName", "name": "LastName", "orderable": true },
                { "data": "MobilePhone1", "name": "MobilePhone1", "orderable": true },
                { "data": "MobilePhone2", "name": "MobilePhone2", "orderable": true },
                { "data": "MobilePhone3", "name": "MobilePhone3", "orderable": true },
                { "data": "WorkEmail", "name": "WorkEmail", "orderable": true },
                { "data": "WorkEmail1", "name": "WorkEmail1", "orderable": true },
                { "data": "PersonalEmail", "name": "PersonalEmail", "orderable": true },
                { "data": "ID", "name": "ID", "orderable": true },
            ],
            "iDisplayLength": 50,
            "aaSorting": [[0, "desc"]],
            "fnRowCallback": function(nRow, aData, iDisplayIndex, iDisplayIndexFull) {
                var eq15Html = '<a href="@Url.Action("Detail")/' +
                    aData["ID"] +
                    '" title="View Detail"><i class="fa fa-eye"></i></a>';
                $(nRow).find('td:eq(14)').html(eq15Html);
                $(nRow).attr("data-id", ["ID"]);
            },
            initComplete: function () {
                var _table = this;
                _table.parent().find('input[type="search"]').unbind();
                var timeOutTyping;
                _table.parent().find('input[type="search"]').bind('keyup', function (e) {
                    clearTimeout(timeOutTyping);
                    timeOutTyping = setTimeout(function () {
                        fixedColumn = 0;
                        _table.fnFilter(_table.parent().find('input[type="search"]').eq(0).val());
                    }, 600);
                });
            },
            scrollY: false,
            scrollX: true,
            "bScrollCollapse": false,
            "drawCallback": function (settings, json) {
                FixedTable();
            },
        });

         function FixedTable() {
             if (fixedColumn < 3) {
                 fixedColumn ++;
                 var fixColumn = new $.fn.dataTable.FixedColumns($Table, {
                     leftColumns: 4,
                     sHeightMatch: "auto",
                     rightColumns: 1
                 });
                 var $leftWrappers = $(".DTFC_ScrollWrapper").find(".DTFC_LeftWrapper");
                 if ($leftWrappers.length > 1) {
                     $leftWrappers[1].parentNode.removeChild($leftWrappers[1]);
                 }
                 var $rightWrappers = $(".DTFC_ScrollWrapper").find(".DTFC_RightWrapper");
                 if ($rightWrappers.length > 1) {
                     $rightWrappers[1].parentNode.removeChild($rightWrappers[1]);
                 }
             }
         }
         $(document).on("click", ".paginate_button", function () {
             fixedColumn = 0;
         });
         $(document).on("change", "select[name=table_length]", function () {
             fixedColumn = 0;
         });
    </script>)