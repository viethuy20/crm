@using PQT.Domain.Enum
@using PQT.Web.Infrastructure.Utility
@using PQT.Web.Models
@using Resources
@model PQT.Web.Models.AccountModel
@{
    ViewBag.Title = Resource.MyProfile;
}

<link rel="Stylesheet" type="text/css" href="~/Content/js/libs/croppie/croppie.css" />
<section>
    <div class="section-header">
        <h2 class="text-primary">@ViewBag.Title</h2>
    </div>
    <div class="card">
        <div class="card-body">
            @using (Html.BeginForm("Profile", "Account", null, FormMethod.Post, new { enctype = "multipart/form-data", @class = "form"}))
            {
                <div class="row">
                    <div class="col-sm-12">
                        <div class="form-group">
                            @Html.Bootstrap().PasswordFor(m => m.OldPassword).Class("form-control").HtmlAttributes(new { required = "required" }).ShowValidationMessage(true)
                            @Html.Bootstrap().LabelFor(m => m.OldPassword).LabelText("Current password").ShowRequiredStar(true)
                        </div>
                    </div>
                    @*<div class="col-sm-6">
                        <div class="form-group">
                            @Html.Bootstrap().PasswordFor(m => m.Password).Class("form-control").ShowValidationMessage(true)
                            @Html.Bootstrap().LabelFor(m => m.Password).LabelText("New password")
                        </div>
                    </div>
                    <div class="col-sm-6">
                        <div class="form-group">
                            @Html.Bootstrap().PasswordFor(m => m.ConfirmPassword).Class("form-control").ShowValidationMessage(true)
                            @Html.Bootstrap().LabelFor(m => m.ConfirmPassword).LabelText("Retype new password")
                        </div>
                    </div>*@
                    <div class="col-sm-6">
                        <div class="form-group">
                            @Html.Bootstrap().TextBoxFor(m => m.Username).Class("form-control").Readonly().ShowValidationMessage(true)
                            @Html.Bootstrap().LabelFor(m => m.Username).LabelText("Name").ShowRequiredStar(true)
                        </div>
                    </div>
                    <div class="col-sm-6">
                        <div class="form-group">
                            @Html.Bootstrap().TextBoxFor(m => m.Email).Readonly().Class("form-control").ShowValidationMessage(true)
                            @Html.Bootstrap().LabelFor(m => m.Email).LabelText("Email").ShowRequiredStar(true)
                        </div>
                    </div>
                    <div class="col-sm-6">
                        <div class="form-group">
                            @Html.Bootstrap().TextBoxFor(m => m.BusinessPhone).Class("form-control").ShowValidationMessage(true)
                            @Html.Bootstrap().LabelFor(m => m.BusinessPhone).LabelText("Business Phone")
                        </div>
                    </div>
                    <div class="col-sm-6">
                        <div class="form-group">
                            @Html.Bootstrap().TextBoxFor(m => m.MobilePhone).Class("form-control").ShowValidationMessage(true)
                            @Html.Bootstrap().LabelFor(m => m.MobilePhone).LabelText("Mobile Phone")
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-sm-6">
                        <div class="form-group">
                            <div id="profilePicture">
                                @if (!string.IsNullOrEmpty(Model.PictureBase64))
                                {
                                    <img style="width: 120px; height: 120px;border-radius: 120px" src="@Model.PictureBase64" class="img-polaroid user-picture-preview" />
                                }
                                else if (CurrentUser.Identity.Picture != null)
                                {
                                    <img style="width: 120px; height: 120px;border-radius: 120px" src="@CurrentUser.Identity.AvatarUrl" class="img-polaroid user-picture-preview" />
                                }
                                else
                                {
                                    <img style="width: 120px; height: 120px;border-radius: 120px" src="~/Content/img/profile.png" class="img-polaroid user-picture-preview" />
                                }
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.HiddenFor(m => m.PictureBase64)
                            <input type="file" value="Choose a file" accept="image/*" />
                        </div>
                        <div class="form-group">
                            @Html.Bootstrap().TextBoxFor(m => m.Roles).Readonly().Class("form-control")
                            @Html.Bootstrap().LabelFor(m => m.Roles).LabelText("Roles")
                        </div>
                    </div>
                    <div class="col-sm-6">
                        <div class="form-group">
                            @Html.Bootstrap().TextBoxFor(m => m.BusinessDevelopmentUnit).Readonly().Class("form-control")
                            @Html.Bootstrap().LabelFor(m => m.BusinessDevelopmentUnit)
                        </div>
                        <div class="form-group">
                            @Html.Bootstrap().TextBoxFor(m => m.SalesManagementUnit).Readonly().Class("form-control")
                            @Html.Bootstrap().LabelFor(m => m.SalesManagementUnit)
                        </div>
                        <div class="form-group">
                            @Html.Bootstrap().TextBoxFor(m => m.BasicSalary).Readonly().Class("form-control")
                            @Html.Bootstrap().LabelFor(m => m.BasicSalary).LabelText("Basic Salary")
                        </div>
                        <div class="form-group">
                            @Html.Bootstrap().TextBoxFor(m => m.DateOfStarting).Readonly().Class("form-control")
                            @Html.Bootstrap().LabelFor(m => m.DateOfStarting).LabelText("Date Of Starting")
                        </div>
                        <div class="form-group">
                            @Html.Bootstrap().TextBoxFor(m => m.DateOfContract).Readonly().Class("form-control")
                            @Html.Bootstrap().LabelFor(m => m.DateOfContract).LabelText("Date Of Contract")
                        </div>
                    </div>
                </div>
                if (Model.UserSalaryHistories.Any())
                {
                    <div class="row">
                        <div class="col-sm-12">
                            <div class="form-group">
                                @Html.Bootstrap().TextAreaFor(m => m.UserSalaryHistories).Value(string.Join("\r\n", Model.UserSalaryHistories.Select(m => m.CreatedAt.ToString("dd/MM/yyyy HH:mm:ss") + ": Business Development Unit-" + m.BusinessDevelopmentUnit.DisplayName + ", Sales Management Unit-" + m.SalesManagementUnit.DisplayName + ", Sales Supervision-" + m.SalesSupervision.DisplayName + ", Basic Salary-" + m.BasicSalary.ToString("N")))).Disabled().Rows(5).Class("form-control")
                                @Html.Bootstrap().LabelFor(m => m.UserSalaryHistories).LabelText("Salary Histories")
                            </div>
                        </div>
                    </div>
                }
                <div class="row">
                    <div class="form-group  col-md-offset-2">
                        @Html.Bootstrap().SubmitButton().Text(Resource.Save).PrependIcon("md md-done").Style(ButtonStyle.Success)
                    </div>
                </div>
            }
        </div>
    </div>
</section>


<!-- BEGIN SIMPLE MODAL MARKUP -->
<div class="modal fade" id="simpleModal" tabindex="-1" role="dialog" aria-labelledby="simpleModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                <h4 class="modal-title" id="simpleModalLabel">Crop Photo</h4>
            </div>
            <div class="modal-body">
                <div id="crop-upload"></div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-primary" id="crop-result">Crop</button>
            </div>
        </div><!-- /.modal-content -->
    </div><!-- /.modal-dialog -->
</div><!-- /.modal -->
<!-- END SIMPLE MODAL MARKUP -->


@section js
{
    <script src="~/Content/js/libs/croppie/croppie.min.js"></script>
    <script>
        $uploadCrop = $('#crop-upload').croppie({
            enableExif: true,
            viewport: {
                width: 200,
                height: 200,
                type: 'circle'
            },
            boundary: {
                width: 300,
                height: 300
            }
        });

        var fileTargetResult = "";
        $(document).on('change', 'input[type="file"]', function () {
            var upload = $(this);

            var indicator = upload.next('.selected');
            if (indicator.length == 0) {
                indicator = $('<span class="selected"></span>').insertAfter(upload);
            }

            if (upload.val() == '') {
                indicator.html('');
            } else if (window.FileReader) {
                var reader = new FileReader();
                reader.onload = function (e) {
                    if (upload[0].files[0].size > 2000000) {
                        toastr.error('@Resource.ErrorYourFileIsTooLarge', '');
                        upload.replaceWith(upload = upload.clone(true));
                    } else {
                        fileTargetResult = e.target.result;
                        //$uploadCrop.croppie('bind', {
                        //    url: e.target.result
                        //}).then(function () {
                            $('#simpleModal').modal('show');
                        //});
                        //$('#profilePicture').html("<img style='width: 120px; height:120px;border-radius: 60px' src='" + e.target.result + "' class='img-polaroid user-picture-preview'/>");
                    }
                };
                reader.readAsDataURL(upload[0].files[0]);
            } else {
                indicator.html("Selected");
            }
        });
        $('#simpleModal').on('shown.bs.modal',
            function() {
                $uploadCrop.croppie('bind',
                    {
                        url: fileTargetResult
                    });
            });
        $('#crop-result').on('click',
            function() {
                $uploadCrop.croppie('result',
                    {
                        type: 'canvas',
                        size: 'viewport'
                    }).then(function(resp) {
                        $('.user-picture-preview')[0].src = resp;
                        $('@Html.JquerySelectorFor(m=>m.PictureBase64)').val(resp);
                        $('#simpleModal').modal('toggle');
                });
            });
    </script>
}
