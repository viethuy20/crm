@using PQT.Domain.Enum
@using Resources
@model PQT.Web.Models.KPIViewModel

@{
    ViewBag.Title = "Enquire KPIs";
    var isSalesman = PermissionHelper.SalesmanId();
}

<style>
    #kpiTable tbody tr.NoKPI td {
        color: #a94442;
        background-color: #ffdad7;
    }

    #kpiTable tbody tr.KPI td {
        color: #3c763d;
        background-color: #c7fcca;
    }

    .disable-select {
        -webkit-touch-callout: none; /* iOS Safari */
        -webkit-user-select: none; /* Chrome/Safari/Opera */
        -khtml-user-select: none; /* Konqueror */
        -moz-user-select: none; /* Firefox */
        -ms-user-select: none; /* Internet Explorer/Edge */
        user-select: none; /* Non-prefixed version, currently supported by any browser but < IE9 */
    }
</style>
<section>
    <div class="row">
        <div class="col-md-12">
            <div class="card  card-underline">
                <div class="card-head">
                    <header><i class="fa fa-database"></i> @ViewBag.Title</header>
                </div>
                <div class="card-body">
                    <div class="row form">
                        <div class="col-sm-6">
                            <div class="form-group">
                                @Html.Bootstrap().DropDownListFor(m => m.EventID, Model.Events.ToSelectList(m => m.ID, m => m.EventName)).HtmlAttributes(new { @class = "select-ajax form-control" })
                                <label>Event</label>
                            </div>
                        </div>
                        <div class="col-sm-6">
                            <div class="form-group">
                                <div class="input-daterange input-group">
                                    <div class="input-group-content">
                                        @Html.DatePickerRangeFor(m => m.DateFrom, new { @class = "input-clear form-control" })
                                        @Html.Bootstrap().LabelFor(m => m.DateFrom)
                                    </div>
                                    <span class="input-group-addon">to</span>
                                    <div class="input-group-content">
                                        @Html.DatePickerRangeFor(m => m.DateTo, new { @class = "input-clear form-control" })
                                        @Html.Bootstrap().LabelFor(m => m.DateTo)
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="col-sm-6">
                            <div class="form-group">
                                @Html.Bootstrap().DropDownListFor(m => m.UserID, Model.Users.ToSelectList(m => m.ID, m => m.DisplayName)).HtmlAttributes(new { @class = "select-ajax form-control" })
                                <label>Salesman</label>
                            </div>
                        </div>
                        <div class="col-sm-6">
                            <div class="form-group">
                                <select class="form-control" id="@Html.IdFor(m=>m.StatusCode)" name="@Html.NameFor(m => m.StatusCode)">
                                    @foreach (var item in EnumerationHelper.ToSelectList<KPIStatus>())
                                    {
                                        <option value="@item.Value" selected="@(Model.StatusCode == item.Value)">@item.Text</option>
                                    }
                                </select>
                                <label>KPI Status</label>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-offset-4">
                            @Html.Bootstrap().Button().Text("Clear").Id("btnClear").PrependIcon("md md-close").Size(ButtonSize.Mini).HtmlAttributes(new { @class = "btn btn-default" })
                            @Html.Bootstrap().Button().Text("Search").Id("btnSearch").PrependIcon("md md-search").Size(ButtonSize.Mini).HtmlAttributes(new { @class = "btn btn-primary" })
                        </div>
                    </div>
                    <table class="table" id="kpiTable">
                        <thead>
                            <tr>
                                <th>Event</th>
                                <th>Created Time</th>
                                <th>Company Name</th>
                                <th>Salesman</th>
                                <th>Direct Line</th>
                                <th>Job Title</th>
                                <th>Salutation</th>
                                <th>First Name</th>
                                <th>Last Name</th>
                                <th>Mobile Phone 1</th>
                                <th>Work Email</th>
                                <th>Personal Email</th>
                                <th>Mark KPI</th>
                                <th>KPI Remarks</th>
                                <th></th>
                            </tr>
                        </thead>
                    </table>
                </div><!--end .card-body -->
            </div><!--end .card -->
        </div>
    </div>
</section>


@Html.Script(

    @<script>
        $('body').bind('copy', function (e) { e.preventDefault(); return false; });

        var fixedColumn = 0;
         var oTable = $("#kpiTable");
         oTable.dataTable({
             "processing": true, // for show progress bar
             "serverSide": true, // for process server side
             "filter": true, // this is for disable filter (search box)
             "orderMulti": false, // for disable multiple column at once
             "stateSave": false,
             "ajax": {
                 "url": "@Url.Action("AjaxGetKpis")",
                 "type": "POST",
                 "datatype": "json",
                 "data": function (d) {
                     d.DateFrom = $('@Html.JquerySelectorFor(m=>m.DateFrom)').val();
                     d.DateTo = $('@Html.JquerySelectorFor(m=>m.DateTo)').val();
                     d.EventID = $('@Html.JquerySelectorFor(m=>m.EventID)').val();
                     d.UserID = $('@Html.JquerySelectorFor(m=>m.UserID)').val();
                     d.StatusCode = $('@Html.JquerySelectorFor(m=>m.StatusCode)').val();
                 }
             },
             "columns": [
                 { "data": "EventName", "name": "EventName", "orderable": true },
                 { "data": "CreatedTime", "name": "CreatedTime", "orderable": true },
                 { "data": "CompanyName", "name": "CompanyName", "orderable": true },
                 { "data": "UserName", "name": "UserName", "orderable": true },
                 { "data": "DirectLine", "name": "DirectLine", "orderable": true },
                 { "data": "JobTitle", "name": "JobTitle", "orderable": true },
                 { "data": "Salutation", "name": "Salutation", "orderable": true },
                 { "data": "FirstName", "name": "FirstName", "orderable": true },
                 { "data": "LastName", "name": "LastName", "orderable": true },
                 { "data": "MobilePhone1", "name": "MobilePhone1", "orderable": true },
                 { "data": "WorkEmail", "name": "WorkEmail", "orderable": true },
                 { "data": "PersonalEmail", "name": "PersonalEmail", "orderable": true },
                 { "data": "MarkKPI", "name": "MarkKPI", "orderable": true },
                 { "data": "KPIRemarks", "name": "KPIRemarks", "orderable": true },
                 { "data": "ID", "name": "ID", "orderable": false },
             ],
             "iDisplayLength": 50,
             "aaSorting": [[1, "desc"]],
             "fnRowCallback": function (nRow, aData, iDisplayIndex, iDisplayIndexFull) {
                 $(nRow).addClass(aData["ClassKPIStatus"]);
                 $(nRow).attr("data-id", aData["ID"]);
                 var htmlAction = "";
                 if ('@CurrentUser.HasPermission("KPI","Update")' == 'True') {
                     htmlAction += '<a class="simple-ajax-popup-align-top" href="@Url.Action("Update")?id=' +
                         aData["ID"] +
                         '" ><span class=" text-info" style="white-space: nowrap;"><i class="md fa-fw md-edit"></i> Update<span></a>';
                 }
                 if (!aData["MarkKPI"] && '@CurrentUser.HasPermission("KPI","Delete")' == 'True') {
                     htmlAction += ' <a href="#" data-action="delete" data-id="' + aData["ID"] +'">' +
                         '<span class="text-danger" style="white-space: nowrap;"><i class="md md-delete"></i> Delete<span></a>';
                 }
                 if (@isSalesman > 0) {
                     $(nRow).addClass("disable-select");
                 }
                 $(nRow).find('td:eq(14)').html(htmlAction);
             },
             initComplete: function () {
                 var _table = this;
                 _table.parent().find('input[type="search"]').unbind();
                 var timeOutTyping;
                 _table.parent().find('input[type="search"]').bind('keyup', function (e) {
                     clearTimeout(timeOutTyping);
                     timeOutTyping = setTimeout(function () {
                         fixedColumn = 0;
                         _table.fnFilter(_table.parent().find('input[type="search"]').eq(0).val());
                     }, 600);
                 });
             },
             scrollY: false,
             scrollX: true,
             "bScrollCollapse": false,
             "drawCallback": function (settings, json) {
                 FixedTable();
             },
         });

         function FixedTable() {
             if (fixedColumn < 3) {
                 fixedColumn++;
                 var fixColumn = new $.fn.dataTable.FixedColumns(oTable, {
                     leftColumns: 5,
                     sHeightMatch: "auto",
                     rightColumns: 1
                 });
                 var $leftWrappers = $(".DTFC_ScrollWrapper").find(".DTFC_LeftWrapper");
                 if ($leftWrappers.length > 1) {
                     $leftWrappers[1].parentNode.removeChild($leftWrappers[1]);
                 }
                 var $rightWrappers = $(".DTFC_ScrollWrapper").find(".DTFC_RightWrapper");
                 if ($rightWrappers.length > 1) {
                     $rightWrappers[1].parentNode.removeChild($rightWrappers[1]);
                 }
             }
         }
         $(document).on("click", ".paginate_button", function () {
             fixedColumn = 0;
         });
         $(document).on("change", "select[name=table_length]", function () {
             fixedColumn = 0;
         });
         oTable.on('click', '[data-action="delete"]', function (e) {
             e.preventDefault();
             var selftr = $(this);
             bootbox.confirm("Do you want to delete this data in NCL?", function (isOK) {
                 if (isOK) {
                     $.ajax({
                         url: '@Url.Action("Delete")/' + selftr.data('id'),
                         type: 'POST',
                         success: function (data) {
                             if (data == "") {
                                 oTable.fnDeleteRow(selftr.closest('tr')[0]);
                                 toastr.success("Delete successful");
                             } else {
                                 bootbox.alert("@Resource.DeleteFailed");
                             }
                         },
                         error: function () {
                             bootbox.alert("@Resource.DeleteFailed");
                         }
                     });
                 }
             });
         });
         $('#btnSearch').click(function () {
             fixedColumn = 0;
             oTable.fnFilter('');
         });

         $('#btnClear').click(function () {
             fixedColumn = 0;
             $(".input-clear ").val('');
             $('@Html.JquerySelectorFor(m=>m.EventID)').val('').trigger("change");
             $('@Html.JquerySelectorFor(m=>m.UserID)').val('').trigger("change");
             $('@Html.JquerySelectorFor(m=>m.StatusCode)').val('').trigger("change");
             oTable.fnFilter('');
         });

         initAjaxDropdown($('@Html.JquerySelectorFor(m=>m.EventID)'), "@Url.Action("GetPossibleEvent", "Event")", "Search for Event");
         initAjaxDropdown($('@Html.JquerySelectorFor(m=>m.UserID)'), "@Url.Action("GetPossibleSalesman", "Users")", "Search for user");


         function onUpdateFail() {
             $(".error").removeClass('hide');
             $(".success").addClass('hide');
             $(".texterror").text("@Resource.Error");
         }
         function onUpdateSuccess(data) {
             $(".error").addClass('hide');
             $(".success").addClass('hide');

             if (data.Code == 1) {
                 $(".success").removeClass('hide');
                 $("textsuccess").data('@Resource.SaveSuccessful');
                 updateItem(data);
                 $.magnificPopup.close();
             } else {
                 if (data.Code == 3)
                     $(".texterror").text(data.Message);
                 else
                     $(".texterror").text('@Resource.SaveError');
                 $(".error").removeClass('hide');
             }
         }

         function updateItem(data) {
             var tr = $(oTable.fnGetNodes());
             tr.each(function (index, item) {
                 if ($(item).data('id') == data.ID) {
                     var td = $(item).find("td");
                     if (td.length > 0) {
                         $(td[11]).text(data.MarkKPI);
                         $(td[12]).text(data.KPIRemarks);
                     }
                     $(item).removeClass("KPI");
                     $(item).removeClass("NoKPI");
                     $(item).removeClass("NoCheckKPI");
                     $(item).addClass(data.ClassKPIStatus);
                 }
             });
         }
    </script>

)
