@using System.Web.Script.Serialization
@using NS.Mvc
@using PQT.Domain.Abstract
@using Resources
@using ServiceStack.Text
@model IEnumerable<PQT.Domain.Entities.Holiday>

@{
    ViewBag.Title = "Holidays";

    var serializer = new JavaScriptSerializer();
    string lstGroups = serializer.Serialize(Model.Select(m => new
    {
        id = m.ID,
        title = m.Description,
        start = m.StartDate.ToString("yyyy-MM-dd"),
        end = m.EndDate.ToString("yyyy-MM-dd"),
    }));
    var unitRepo = DependencyHelper.GetService<IUnitRepository>();
    var countries = unitRepo.GetAllCountries();
}

<link href='/Content/css/theme-default/libs/fullcalendar/fullcalendar.css' rel='stylesheet' />
<style>
    #calendar {
        max-width: 900px;
        margin: 0 auto;
    }

    #top {
        background: #eee;
        border-bottom: 1px solid #ddd;
        padding: 0 10px;
        line-height: 40px;
        font-size: 12px;
    }
</style>

<section>
    <div class="section-header">
        <h2 class="text-primary">@ViewBag.Title</h2>
    </div>
    <div class="card">
        <div class="card-body">
            <div class="col-md-8">
                <div id='calendar'></div>
            </div>
            <div class="col-md-4">
                <div class="table-responsive">
                    <table class="table" id="holidayTable">
                        <thead>
                            <tr>
                                <th class="hide"></th>
                                <th>Date</th>
                                <th>Holiday Name</th>
                            </tr>
                        </thead>
                        @foreach (var item in Model)
                        {
                            <tr data-id="@item.ID">
                                <td class="hide">@item.StartDate.ToUnixTime()</td>
                                <td>@item.HolidayDate()</td>
                                <td>@item.Description - @item.Location</td>
                            </tr>
                        }
                    </table>
                </div>
            </div>
        </div>
    </div>
</section>

<div style="display: none">
    <div id="add_form" style="background: white; margin: auto; max-width: 700px; position: relative;">
        <div class="card card-underline">
            <div class="card-head">
                <header>Add Holiday</header>
            </div><!--end .card-head -->
            <form class="form">
                <div class="card-body">
                    <div class="form-group col-md-12">
                        @Html.Bootstrap().DropDownList("dlLocation", countries.ToSelectList(m => m.ID, m => m.Name)).Id("dlLocation").HtmlAttributes(new { required = "required" }).OptionLabel("").Class("form-control").ShowValidationMessage(true)
                        @Html.Bootstrap().Label("lblLocation").LabelText("Country").ShowRequiredStar(true)
                    </div>
                    <div class="form-group col-md-12">
                        @Html.Bootstrap().TextBox("TbxTitle").Id("tbxTitle").Class("form-control text-capitalize").HtmlAttributes(new { required = "required" }).ShowValidationMessage(true)
                        @Html.Bootstrap().Label("LblTitle").LabelText("Holiday Name").ShowRequiredStar(true)
                    </div>
                </div><!--end .card-body -->
                <div class="card-actionbar">
                    <div class="card-actionbar-row">
                        @Html.Bootstrap().SubmitButton().Text(Resource.Save).Id("submitbutton").PrependIcon("md md-done").Style(ButtonStyle.Success)
                    </div>
                </div>
            </form>
        </div><!--end .card -->
    </div>
</div>
@section js
{

    <script src="/Content/js/libs/fullcalendar/fullcalendar.js"></script>
    <script>
        var holidays = @Html.Raw(lstGroups);
        var holidayTable = $("#holidayTable").dataTable({
            columnDefs: [{
                targets: [1],
                orderData: [0]
            }],
            "aaSorting": [[0, "asc"]],
            "fnRowCallback": function (nRow, aData, iDisplayIndex, iDisplayIndexFull) {
                $(nRow).find('td:eq(0)').addClass("hide");
            },
            iDisplayLength: 10,
        });
        var selectStart;
        var selectEnd;
        $(document).ready(function() {
            $('#calendar').fullCalendar({
                header: {
                    left: '',
                    center: 'title',
                    right: 'today prev,next'
                },
                defaultDate: '@DateTime.Today.ToString("yyyy-MM-dd")',
                navLinks: true, // can click day/week names to navigate views
                selectable: true,
                selectHelper: true,
                select: function (start, end) {
                    selectStart = start;
                    selectEnd = end;
                    $.magnificPopup.open({
                        items: [
                            {
                                src: '#add_form',
                                type: 'inline'
                            }
                        ],
                        showCloseBtn: true,
                    });
                    $('#calendar').fullCalendar('unselect');
                },
                eventClick: function (calEvent, jsEvent, view) {
                    var self = $(this);
                    bootbox.confirm("Do you want to delete this holiday?",
                        function(isOK) {
                            if (isOK) {
                                $.ajax({
                                    url: '@Url.Action("Delete")?id=' + calEvent.id,
                                    type: 'POST',
                                    success: function(data) {
                                        if (data.success) {
                                            $(self).remove();
                                            deleteItem(calEvent.id);
                                        } else {
                                            bootbox.alert("Delete failed");
                                        }
                                    },
                                    error: function() {
                                        bootbox.alert("Delete failed");
                                    }
                                });
                            }
                        });
                    //alert('Event: ' + calEvent.title);
                    //alert('Coordinates: ' + jsEvent.pageX + ',' + jsEvent.pageY);
                    //alert('View: ' + view.name);
                    //$(this).css('border-color', 'red');
                },
                eventLimit: true, // allow "more" link when too many events
                events: holidays
            });

        });

        $("#submitbutton").on("click",
            function () {
                var $dlLocation = $("#dlLocation");
                var $tbxTitle = $("#tbxTitle");
                var title = $tbxTitle.val();
                if (title!= undefined && title != "") {
                    $.ajax({
                        url: '@Url.Action("Create")?title=' +
                            title +
                            '&start=' +
                        moment(selectStart._d).format("DD-MM-YYYY") +
                            '&end=' +
                        moment(selectEnd._d).format("DD-MM-YYYY") + "&locationId=" + $dlLocation.val(),
                        type: 'POST',
                        success: function (data) {
                            $(this).magnificPopup.close();
                            if (data.success) {
                                var eventData = {
                                    id: data.id,
                                    title: data.title,
                                    start: data.start,
                                    end: data.end
                                };
                                $('#calendar').fullCalendar('renderEvent', eventData, true); // stick? = true
                                addNewLineItem(data);
                            } else {
                                bootbox.alert("Add failed");
                            }
                            $tbxTitle.val("");
                            $dlLocation.val("").trigger("change");
                        },
                        error: function() {
                            bootbox.alert("Add failed");
                        }
                    });
                }
            });

        function addNewLineItem(data) {
            var rowIndex = holidayTable.fnAddData([
                data.startUnixTime,
                data.holidayDate,
                data.title + ' - ' + data.location
            ]);
            var row = holidayTable.fnGetNodes(rowIndex);
            $(row).attr('data-id', data.id);
        }
        function deleteItem(id) {
            var tr = $(holidayTable.fnGetNodes());
            tr.each(function (index, item) {
                if ($(item).data('id') == id) {
                    $(item).remove();
                }
            });
        }
    </script>
}