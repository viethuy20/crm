@using Resources
@model IEnumerable<PQT.Domain.Entities.Company>
@{
    ViewBag.Title = "Companies";
}
<style>
    #table tbody tr.tier1 {
        color: #a94442;
        background-color: #ffdad7;
    }
    #table tbody tr.tier2 {
        color: #31708f;
        background-color: #d8edff !important;
    }
</style>
<section>
    <div class="section-header">
        <h2 class="text-primary">@ViewBag.Title</h2>
    </div>
    <div class="form-group row">
        <div class="col-sm-6">
            @if (CurrentUser.HasPermission("Company", "CreateOrEdit"))
            {
                @Html.Bootstrap().ActionLinkButton(Resource.AddNew, "CreateOrEdit").RouteValues(new { id = 0 }).PrependIcon("md md-add").HtmlAttributes(new { @class = "btn btn-primary simple-ajax-popup-align-top" })
            }

            @if (CurrentUser.HasPermission("Company", "ImportFromExcel"))
            {
                @Html.Bootstrap().ActionLinkButton(Resource.ImportFromExcel, "ImportFromExcel").PrependIcon("md md-cloud-upload").HtmlAttributes(new { @class = "btn btn-info " })
            }
        </div>
    </div>
    <div class="card">
        <div class="card-body">
            <div class="table-responsive">
                <table class="table" id="table">
                    <thead>
                        <tr>
                            <th>@Resource.Country</th>
                            <th>@Resource.Name</th>
                            <th>Product/Service</th>
                            <th>Sector</th>
                            <th>Industry</th>
                            <th>Tier</th>
                            <th></th>
                        </tr>
                    </thead>
                </table>
            </div>
        </div>
    </div>
</section>


@Html.Script(
    @<script>
        var $Table = $("#table");
     $Table.dataTable({
            "processing": true, // for show progress bar
            "serverSide": true, // for process server side
            "filter": true, // this is for disable filter (search box)
            "orderMulti": false, // for disable multiple column at once
            "stateSave": false,
            "ajax": {
                "url": "@Url.Action("AjaxGetAlls")",
                "type": "POST",
                "datatype": "json",
                "data": function (d) {
                }
            },
            "columns": [
                { "data": "CountryName", "name": "CountryName", "orderable": true },
                { "data": "CompanyName", "name": "CompanyName", "orderable": true },
                { "data": "ProductOrService", "name": "ProductOrService", "orderable": true },
                { "data": "Sector", "name": "Sector", "orderable": true },
                { "data": "Industry", "name": "Industry", "orderable": true },
                { "data": "Tier", "name": "Tier", "orderable": true },
                { "data": "ID", "name": "ID", "orderable": false },
            ],
            "iDisplayLength": 50,
            "aaSorting": [[2, "asc"]],
            "fnRowCallback": function (nRow, aData, iDisplayIndex, iDisplayIndexFull) {
                $(nRow).find('td:eq(6)').html('<a href="@Url.Action("CreateOrEdit")?id=' + aData["ID"] + '" data-action="edit" class="simple-ajax-popup-align-top"><i class="md md-edit text-info"></i></a> ' + 
                    ' <a href="#" data-action="delete" data-id="' + aData["ID"] +'"><i class="md md-delete text-danger"></i></a>');
                $(nRow).attr("data-id", aData["ID"]);
                $(nRow).addClass("tier" + aData["Tier"]);
            },
            initComplete: function () {
                var _table = this;
                _table.parent().find('input[type="search"]').unbind();
                var timeOutTyping;
                _table.parent().find('input[type="search"]').bind('keyup', function (e) {
                    clearTimeout(timeOutTyping);
                    timeOutTyping = setTimeout(function () {
                        _table.fnFilter(_table.parent().find('input[type="search"]').eq(0).val());
                    }, 600);
                });
            },
        });
        $Table.on('click', '[data-action="delete"]', function (e) {
            e.preventDefault();
            var selftr = $(this);
            bootbox.confirm("@Resource.ConfirmDelete", function (isOK) {
                if (isOK) {
                    $.ajax({
                        url: '@Url.Action("Delete")/' + selftr.data('id'),
                        type: 'POST',
                        success: function (data) {
                            if (data == true) {
                                $Table.fnDeleteRow(selftr.closest('tr')[0]);
                            } else {
                                bootbox.alert("@Resource.DeleteFailed");
                            }
                        },
                        error: function () {
                            bootbox.alert("@Resource.DeleteFailed");
                        }
                    });
                }
            });
        });

        function onFail() {
            $(".error").removeClass('hide');
            $(".success").addClass('hide');
            $(".texterror").text("@Resource.Error");
        }
        function onSuccess(data) {
            $(".error").addClass('hide');
            $(".success").addClass('hide');

            if (data.Code == 1 || data.Code == 3) {
                $(".success").removeClass('hide');
                if (data.Code == 1) {
                    $(".textsuccess").text('@Resource.AddSuccessful');
                    addNewLineItem(data.Model);
                    $("#CreateOrEditForm").get(0).reset();;
                }
                if (data.Code == 3) {
                    $("textsuccess").data('@Resource.SaveSuccessful');
                    updateItem(data.Model);
                }
            } else {
                if (data.Code == 2)
                    $(".texterror").text('@Resource.AddError');
                if (data.Code == 4)
                    $(".texterror").text('@Resource.SaveError');
                if (data.Code == 5)
                    $(".texterror").text("@Resource.DataInvalid");
                if (data.Code == 6)
                    $(".texterror").text(data.error);
                $(".error").removeClass('hide');
            }
        }

        function addNewLineItem(data) {
            var rowIndex = $Table.fnAddData([
                data.CountryName,
                data.Name,
                data.ProductOrService,
                data.Sector,
                data.Industry,
                data.Tier,
                '<a class="simple-ajax-popup-align-top" data-action="edit" href="@Url.Action("CreateOrEdit")?id=' + data.ID + '"><i class="md md-edit text-info"></i></a>',
                    '<a data-action="delete" data-id="' + data.ID + '" href="#"><i class="md md-delete text-danger"></i></a>'
            ]);
            var row = $Table.fnGetNodes(rowIndex);
            $(row).attr('data-id', data.ID);
            $(row).addClass("tier" + data.Tier);
        }
        function updateItem(data) {
            var tr = $($Table.fnGetNodes());
            tr.each(function (index, item) {
                if ($(item).data('id') == data.ID) {
                    var td = $(item).find("td");
                    if (td.length > 0) {
                        $(td[0]).text(data.CountryName);
                        $(td[1]).text(data.Name);
                        $(td[2]).text(data.ProductOrService);
                        $(td[3]).text(data.Sector);
                        $(td[4]).text(data.Industry);
                        $(td[5]).text(data.Tier);
                    }
                    
                    $(item).removeClass("tier1");
                    $(item).removeClass("tier2");
                    $(item).removeClass("tier3");
                    $(item).addClass("tier" + data.Tier);
                }
            });
        }
    </script>)
