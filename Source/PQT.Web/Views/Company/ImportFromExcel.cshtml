@using NS.Mvc
@using PQT.Domain.Abstract
@using Resources
@model PQT.Web.Models.CompanyImportModel


<style>
    label.myLabel input[type="file"] {
        position: fixed;
        top: -1000px;
    }

    /***** Example custom styling *****/
    .myLabel {
        border-radius: 8px;
        padding: 10px 35px;
        margin-left: 10px;
        background: #C2C2C2;
        display: inline-block;
    }

        .myLabel:hover {
            background: #CCC;
        }

        .myLabel:active {
            background: #CCF;
        }

        .myLabel :invalid + span {
            color: #A44;
        }

        .myLabel :valid + span {
            color: #4A4;
        }

        .myLabel span {
            font-size: 18px;
        }

    #fileResult {
        background-color: #F5F5F5;
        padding: 10px 35px;
        margin-left: 5px;
        margin-right: 5px;
    }

        #fileResult span {
            color: #4A4;
            font-size: 16px;
        }

        #fileResult:empty {
            display: none;
        }

    .importindents {
        width: 450px;
        background-color: #fff;
        padding: 10px 0;
        float: left;
    }

    /*.indentRecord {
        width: 100%;
    }*/
    .indentRecord tr td:first-child {
        width: 30%;
        vertical-align: middle;
    }

    .indentRecord tr td:last-child {
        width: 70%;
    }

    .indentinfo tr td {
        line-height: 30px;
    }

    .result-table tr th {
        background-color: #D7E6EF;
        text-align: center;
        border-right: 1px solid #c2c2c2;
        border-bottom: 1px solid #c2c2c2;
    }

    .graybackground {
        background-color: #EBEBEB;
    }

    .result-table tr td {
        padding: 5px 15px;
        border-right: 1px solid #c2c2c2;
        border-bottom: 1px solid #c2c2c2;
    }

    .result-table {
        border-left: 1px solid #c2c2c2;
        border-top: 1px solid #c2c2c2;
    }

    .highline {
        background-color: #FFCAC4;
    }

    .samplefile {
        margin-left: 10px;
        margin-bottom: 10px;
    }
</style>

<section class="panel panel-default">
    <header class="panel-heading">
        @Resource.IndentManagement
    </header>
    <div class="row wrapper dataTables_length table_basic">
        <div class="col-sm-6">
            @Html.Bootstrap().Button().Id("btnUpload").HtmlAttributes(new { @class = "DTTT_button btn btn-info" }).Text("Import Excel File").PrependIcon(Icons.upload, true)
            @if (Model.Companies != null && Model.Companies.Count > 0)
            {
                @Html.Bootstrap().ActionLinkButton("Confirm Upload", "ComfirmImport").RouteValues(new { sessionName = Model.SessionName }).Style(ButtonStyle.Success).PrependIcon(Icons.check, true).Id("finish")
            }
        </div>
    </div>
    <div class="panel-body">
        <div class="table-responsive" style="min-height: calc(100vh - 335px);">


            @if (Model.Companies != null && Model.Companies.Count > 0)
            {
                var count = 0;
                <table class="table">
                    <thead>
                        <tr>
                            <th>S/No.</th>
                            <th>Country</th>
                            <th>Company</th>
                            <th>Product/ Service</th>
                            <th>Sector</th>
                            <th>Industry</th>
                            <th>Designation</th>
                            <th>Ownership</th>
                            <th>Business  Units</th>
                            <th>Email</th>
                            <th>Personal Contact</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var com in Model.Companies)
                        {
                            count++;
                            <tr>
                                <td>@count</td>
                                <td>@com.CountryCode</td>
                                <td>@com.CompanyName</td>
                                <td>@com.ProductOrService</td>
                                <td>@com.Sector</td>
                                <td>@com.Industry</td>
                                <td>@com.Designation</td>
                                <td>@com.Ownership</td>
                                <td>@com.BusinessUnits</td>
                                <td>@com.Email</td>
                                <td>@com.PersonalContact</td>
                            </tr>
                        }
                    </tbody>
                </table>
            }
            else if (Model.ImportRows.Any())
            {
                var count = 0;
                <table class="table table-bordered consolidate css">
                    <thead>
                        <tr>
                            <th>S/No.</th>
                            <th>Country</th>
                            <th>Company</th>
                            <th>Product/ Service</th>
                            <th>Sector</th>
                            <th>Industry</th>
                            <th>Designation</th>
                            <th>Ownership</th>
                            <th>Business  Units</th>
                            <th>Email</th>
                            <th>Personal Contact</th>
                            <th>Error</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var com in Model.ImportRows)
                        {
                            count++;
                            <tr class="@(!string.IsNullOrEmpty(com.Error)?"highline":"")">
                                <td class="text-center">@count</td>
                                <td>@com.CountryCode</td>
                                <td>@com.CompanyName</td>
                                <td>@com.ProductOrService</td>
                                <td>@com.Sector</td>
                                <td>@com.Industry</td>
                                <td>@com.Designation</td>
                                <td>@com.Ownership</td>
                                <td>@com.BusinessUnits</td>
                                <td>@com.Email</td>
                                <td>@com.PersonalContact</td>
                                <td style="color: red">@Html.Raw(com.Error)</td>
                            </tr>
                        }
                    </tbody>
                </table>
            }
        </div>
    </div>
</section>


<div style="display: none">
    <div id="dialog-upload" style="background: white; margin: auto; max-width: 600px; padding: 50px 50px 35px 50px; position: relative;">
        <section>
            <header class="title-dialog">
                @Resource.UploadFile
            </header>
            <button title="Close (Esc)" type="button" class="mfp-close">×</button>
            @using (Html.BeginForm("ImportFromExcel", "Company", FormMethod.Post, new { enctype = "multipart/form-data" }))
            {
                <div class="form-horizontal">
                    <div class="form-group">
                        <div class="col-sm-12">
                            <a href="~/Content/SampleFiles/companies_sample.xls">Download sample excel file</a>
                        </div>
                    </div>
                    <div class="form-group">
                        <label class="col-sm-3 control-label">File Import <span class="required">*</span></label>
                        <div class="col-sm-9">
                            @Html.Bootstrap().File("FileImport").Id("inputfile").HtmlAttributes(new { }).Tooltip("Format file: *.xls").Class("form-control")
                        </div>
                    </div>
                </div>
            }
        </section>
    </div>
</div>

@Html.Script(
    @<script>
        $("#inputfile").on('change', function () {
            if ($(this).val() != '') {
                $("#fileResult").html("<span>" + $(this).val() + "</span>");
            } else {
                $("#fileResult").html('');
            }
            var filepath = $(this).val();
            if (filepath != 0) {
                var value = filepath.substring(filepath.lastIndexOf('.'));
                if (value == ".xls" || value == ".xlsx") {
                    $(this).closest('form').submit();
                }
                else {
                    bootbox.alert("No Excel file!");
                }
            }
            else {
                bootbox.alert("File import empty!");
            }
        });
        if ($("#inputfile").val() != '') {
            $("#fileResult").html("<span>" + $("#inputfile").val() + "</span>");
        } else {
            $("#fileResult").html('');
        }



        $("#btnUpload").off('click').click(function (e) {
            e.preventDefault();
            $('#inputfile').val('');
            $.magnificPopup.open({
                items: [
                    {
                        src: '#dialog-upload',
                        type: 'inline'
                    }
                ],
            });
        });
        @if (Model.Companies==null || !Model.ImportRows.Any())
        {
            <text>
        $('#inputfile').val('');
        $.magnificPopup.open({
            items: [
                {
                    src: '#dialog-upload',
                    type: 'inline'
                }
            ],
        });
        </text>
                                                                }


        $("#btnStart").click(function () {
            var filepath = $("#fileUpload").val();
            if (filepath != 0) {
                var value = filepath.substring(filepath.lastIndexOf('.'));
                if (value == ".xls" || value == ".xlsx") {
                    return true;
                }
                else {
                    bootbox.alert("Not Excel file!");
                    return false;
                }
            }
            else {
                bootbox.alert("File import empty!");
                return false;
            }
        });
    </script>
                                             )
