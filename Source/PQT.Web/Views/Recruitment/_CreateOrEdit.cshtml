@using PQT.Domain.Enum
@using NS
@using NS.Mvc
@using PQT.Domain.Abstract
@using PQT.Domain.Entities
@using Resources
@model PQT.Web.Models.RecruitmentModel
@{
    var unitService = DependencyHelper.GetService<IUnitRepository>();
    var officeLocations = unitService.GetAllOfficeLocations();
    var recruitmentPositions = unitService.GetAllRecruitmentPositions();
    var countries = unitService.GetAllCountries();
}
@Html.HiddenFor(m => m.Candidate.UserID)
@Html.HiddenFor(m => m.Candidate.CandidateStatusID)
@Html.HiddenFor(m => m.Candidate.EmployeeID)
@Html.HiddenFor(m => m.Candidate.CandidateNo)
<div class="card">
    <div class="card-body">
        <div class="row">
            @*<div class="col-sm-3">
                    <div class="form-group">
                        @Html.Bootstrap().TextBoxFor(m => m.Candidate.CandidateNo).Class("form-control code").Readonly().ShowValidationMessage(true)
                        @Html.Bootstrap().LabelFor(m => m.Candidate.CandidateNo).LabelText("Candidate ID").ShowRequiredStar(true)
                    </div>
                </div>*@
            <div class="col-sm-4">
                <div class="form-group">
                    @Html.Bootstrap().TextBoxFor(m => m.Candidate.FirstName).Class("form-control text-capitalize").ShowValidationMessage(true)
                    @Html.Bootstrap().LabelFor(m => m.Candidate.FirstName).ShowRequiredStar(true)
                </div>
            </div>
            <div class="col-sm-4">
                <div class="form-group">
                    @Html.Bootstrap().TextBoxFor(m => m.Candidate.LastName).Class("form-control text-capitalize").ShowValidationMessage(true)
                    @Html.Bootstrap().LabelFor(m => m.Candidate.LastName).ShowRequiredStar(true)
                </div>
            </div>
            <div class="col-sm-4">
                <div class="form-group">
                    @Html.Bootstrap().TextBoxFor(m => m.Candidate.EnglishName).Class("form-control text-capitalize").ShowValidationMessage(true)
                    @Html.Bootstrap().LabelFor(m => m.Candidate.EnglishName)
                </div>
            </div>
            @Html.HiddenFor(m => m.Candidate.DialingCode)
            <div class="col-sm-4">
                <div class="form-group">
                    <span class="input-group-addon dialingCode" style="color: #000;font-size: 16px;padding-bottom: 9px;font-weight: 500;"></span>
                    <div class="input-group-content">
                        @Html.Bootstrap().TextBoxFor(m => m.Candidate.MobileNumber).Class("form-control").ShowValidationMessage(true)
                    </div>
                </div>
                @Html.Bootstrap().LabelFor(m => m.Candidate.MobileNumber).ShowRequiredStar(true)
            </div>
        </div>
        <div class="col-sm-4">
            <div class="form-group">
                @Html.Bootstrap().TextBoxFor(m => m.Candidate.PersonalEmail).Class("form-control text-lowercase").ShowValidationMessage(true)
                @Html.Bootstrap().LabelFor(m => m.Candidate.PersonalEmail).ShowRequiredStar(true)
            </div>
        </div>
        <div class="col-sm-4">
            <div class="form-group">
                @Html.Bootstrap().TextBoxFor(m => m.Candidate.ApplicationSource).Class("form-control").ShowValidationMessage(true)
                @Html.Bootstrap().LabelFor(m => m.Candidate.ApplicationSource)
            </div>
        </div>
        <div class="col-sm-4">
            <div class="form-group">
                <select class="form-control" id="@Html.IdFor(m=>m.Candidate.Nationality)" name="@Html.NameFor(m => m.Candidate.Nationality)">
                    <option value="" dialingcode=""></option>
                    @foreach (var trainer in countries)
                    {
                        <option value="@trainer.Name" dialingcode="@trainer.DialingCode" selected="@(Model.Candidate.Nationality == trainer.Name)">@trainer.Name</option>
                    }
                </select>
                @Html.ValidationMessageFor(m => m.Candidate.Nationality)
                @Html.Bootstrap().LabelFor(m => m.Candidate.Nationality)
            </div>
        </div>
        <div class="col-sm-4">
            <div class="form-group">
                <select class="form-control" id="@Html.IdFor(m=>m.Candidate.OfficeLocationID)" name="@Html.NameFor(m => m.Candidate.OfficeLocationID)" required="required">
                    <option value=""></option>
                    @foreach (var trainer in officeLocations)
                    {
                        <option value="@trainer.ID" dialingcode="@trainer.DialingCode" selected="@(Model.Candidate.OfficeLocationID == trainer.ID)">@trainer.Name</option>
                    }
                </select>
                @Html.Bootstrap().LabelFor(m => m.Candidate.OfficeLocation).ShowRequiredStar(true)
            </div>
        </div>
        <div class="col-sm-4">
            @Html.HiddenFor(m => m.Candidate.Resume)
            <div class="form-group ">
                @if (!string.IsNullOrEmpty(Model.Candidate.Resume))
                {
                    <a href="@FileUpload.GetImageUrl(FileUploadType.Recruitment, Model.Candidate.Resume)" target="_blank">@Model.Candidate.Resume</a>
                }
                @if (Model.Candidate != null && Model.Candidate.ID > 0)
                {
                    @Html.Bootstrap().FileFor(m => m.ResumeFile).Class("form-control").ShowValidationMessage(true)
                }
                else
                {
                    @Html.Bootstrap().FileFor(m => m.ResumeFile).Class("form-control").ShowValidationMessage(true).HtmlAttributes(new { required = "required" })
                }
                @Html.Bootstrap().LabelFor(m => m.ResumeFile).LabelText("Resume").ShowRequiredStar(true)
            </div>
        </div>
        <div class="col-sm-4">
            <div class="form-group">
                @Html.Bootstrap().DropDownListFor(m => m.Candidate.RecruitmentPositionID, recruitmentPositions.ToSelectList(m => m.ID, m => m.Description)).HtmlAttributes(new { required = "required" }).OptionLabel("").Class("form-control").ShowValidationMessage(true)
                @Html.Bootstrap().LabelFor(m => m.Candidate.RecruitmentPosition).ShowRequiredStar(true)
            </div>
        </div>
        <div class="col-sm-12">
            <div class="form-group">
                @Html.Bootstrap().TextAreaFor(m => m.Candidate.Remarks).Rows(5).Class("form-control").ShowValidationMessage(true)
                @Html.Bootstrap().LabelFor(m => m.Candidate.Remarks)
            </div>
        </div>
    </div>
</div>


<div class="card card-underline">
    <div class="card-head">
        <header>Interview Summary</header>
    </div>
    <div class="card-body">
        <div class="row" style="margin-bottom: 50px;">
            @Html.HiddenFor(m => m.Candidate.PsSummaryID)
            <div class="col-sm-12">
                <div class="form-group">
                    @Html.Bootstrap().TextAreaFor(m => m.Candidate.PsSummary.Remarks).Rows(3).Class("form-control").ShowValidationMessage(true)
                    @Html.Bootstrap().LabelFor(m => m.Candidate.PsSummary).LabelText("PS Summary").ShowRequiredStar(true)
                </div>
            </div>
            <div class="col-sm-3">
                <div class="form-group">
                    @Html.DatePickerFor(m => m.Candidate.PsSummary.DateSelected, new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.Candidate.PsSummary.DateSelected)
                    @Html.Bootstrap().LabelFor(m => m.Candidate.PsSummary.DateSelected).LabelText("Date")
                </div>
            </div>
            <div class="col-sm-3">
                <div class="form-group">
                    @Html.Bootstrap().DropDownListFor(m => m.Candidate.PsSummary.UserId, Model.Interviewers.ToSelectList(m => m.ID, m => m.DisplayName)).OptionLabel("").Class("form-control").ShowValidationMessage(true)
                    @Html.Bootstrap().LabelFor(m => m.Candidate.PsSummary.Interviewer)
                </div>
            </div>
            <div class="col-sm-3">
                <div class="form-group">
                    @Html.Bootstrap().DropDownListFor(m => m.Candidate.PsSummary.Status, EnumerationHelper.ToSelectList<RecruitmentStatus>()).Class("form-control").HtmlAttributes(new { required = "required" }).ShowValidationMessage(true)
                    @Html.Bootstrap().LabelFor(m => m.Candidate.PsSummary.Status)
                </div>
            </div>
            <div class="col-sm-3">
                <div class="form-group">
                    @Html.Bootstrap().TextBoxFor(m => m.Candidate.PsSummary.ReasonRejected).Class("form-control").ShowValidationMessage(true)
                    @Html.Bootstrap().LabelFor(m => m.Candidate.PsSummary.ReasonRejected).LabelText("Reason")
                </div>
            </div>
        </div>
        <div class="row" style="margin-bottom: 50px;">
            @Html.HiddenFor(m => m.Candidate.OneFaceToFaceSummaryID)
            <div class="col-sm-12">
                <div class="form-group">
                    @Html.Bootstrap().TextAreaFor(m => m.Candidate.OneFaceToFaceSummary.Remarks).Rows(3).Class("form-control").ShowValidationMessage(true)
                    @Html.Bootstrap().LabelFor(m => m.Candidate.OneFaceToFaceSummary).LabelText("1F2F Summary").ShowRequiredStar(true)
                </div>
            </div>
            <div class="col-sm-3">
                <div class="form-group">
                    @Html.DatePickerFor(m => m.Candidate.OneFaceToFaceSummary.DateSelected, new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.Candidate.OneFaceToFaceSummary.DateSelected)
                    @Html.Bootstrap().LabelFor(m => m.Candidate.OneFaceToFaceSummary.DateSelected).LabelText("Date")
                </div>
            </div>
            <div class="col-sm-3">
                <div class="form-group">
                    @Html.Bootstrap().DropDownListFor(m => m.Candidate.OneFaceToFaceSummary.UserId, Model.Interviewers.ToSelectList(m => m.ID, m => m.DisplayName)).OptionLabel("").Class("form-control").ShowValidationMessage(true)
                    @Html.Bootstrap().LabelFor(m => m.Candidate.OneFaceToFaceSummary.Interviewer)
                </div>
            </div>
            <div class="col-sm-3">
                <div class="form-group">
                    @Html.Bootstrap().DropDownListFor(m => m.Candidate.OneFaceToFaceSummary.Status, EnumerationHelper.ToSelectList<RecruitmentStatus>()).Class("form-control").HtmlAttributes(new { required = "required" }).ShowValidationMessage(true)
                    @Html.Bootstrap().LabelFor(m => m.Candidate.OneFaceToFaceSummary.Status)
                </div>
            </div>
            <div class="col-sm-3">
                <div class="form-group">
                    @Html.Bootstrap().TextBoxFor(m => m.Candidate.OneFaceToFaceSummary.ReasonRejected).Class("form-control").ShowValidationMessage(true)
                    @Html.Bootstrap().LabelFor(m => m.Candidate.OneFaceToFaceSummary.ReasonRejected).LabelText("Reason")
                </div>
            </div>
            <div class="col-sm-3">
                @Html.HiddenFor(m => m.Candidate.Information)
                <div class="form-group ">
                    @if (!string.IsNullOrEmpty(Model.Candidate.Information))
                    {
                        <a href="@FileUpload.GetImageUrl(FileUploadType.Recruitment, Model.Candidate.Information)" target="_blank">@Model.Candidate.Information</a>
                    }
                    @if (Model.Candidate != null && Model.Candidate.ID > 0)
                    {
                        @Html.Bootstrap().FileFor(m => m.InformationFile).Class("form-control").ShowValidationMessage(true)
                    }
                    else
                    {
                        @Html.Bootstrap().FileFor(m => m.InformationFile).Class("form-control").ShowValidationMessage(true)
                    }
                    @Html.Bootstrap().LabelFor(m => m.InformationFile).LabelText("Information")
                </div>
            </div>
        </div>
        <div class="row">
            @Html.HiddenFor(m => m.Candidate.TwoFaceToFaceSummaryID)
            <div class="col-sm-12">
                <div class="form-group">
                    @Html.Bootstrap().TextAreaFor(m => m.Candidate.TwoFaceToFaceSummary.Remarks).Rows(3).Class("form-control").ShowValidationMessage(true)
                    @Html.Bootstrap().LabelFor(m => m.Candidate.TwoFaceToFaceSummary).LabelText("2F2F Summary").ShowRequiredStar(true)
                </div>
            </div>
            <div class="col-sm-3">
                <div class="form-group">
                    @Html.DatePickerFor(m => m.Candidate.TwoFaceToFaceSummary.DateSelected, new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.Candidate.TwoFaceToFaceSummary.DateSelected)
                    @Html.Bootstrap().LabelFor(m => m.Candidate.TwoFaceToFaceSummary.DateSelected).LabelText("Date")
                </div>
            </div>
            <div class="col-sm-3">
                <div class="form-group">
                    @Html.Bootstrap().DropDownListFor(m => m.Candidate.TwoFaceToFaceSummary.UserId, Model.Interviewers.ToSelectList(m => m.ID, m => m.DisplayName)).OptionLabel("").Class("form-control").ShowValidationMessage(true)
                    @Html.Bootstrap().LabelFor(m => m.Candidate.TwoFaceToFaceSummary.Interviewer)
                </div>
            </div>
            <div class="col-sm-3">
                <div class="form-group">
                    @Html.Bootstrap().DropDownListFor(m => m.Candidate.TwoFaceToFaceSummary.Status, EnumerationHelper.ToSelectList<RecruitmentStatus>()).Class("form-control").HtmlAttributes(new { required = "required" }).ShowValidationMessage(true)
                    @Html.Bootstrap().LabelFor(m => m.Candidate.TwoFaceToFaceSummary.Status)
                </div>
            </div>
            <div class="col-sm-3">
                <div class="form-group">
                    @Html.Bootstrap().TextBoxFor(m => m.Candidate.TwoFaceToFaceSummary.ReasonRejected).Class("form-control").ShowValidationMessage(true)
                    @Html.Bootstrap().LabelFor(m => m.Candidate.TwoFaceToFaceSummary.ReasonRejected).LabelText("Reason")
                </div>
            </div>
        </div>
    </div><!--end .card-body -->
</div>




@Html.Script(
    @<script>
        $('@Html.JquerySelectorFor(m=>m.Candidate.Nationality)').on("change",
            function () {
                var selectedValue = this.options[this.selectedIndex].getAttribute('dialingcode');
                $(".dialingCode").text(selectedValue);
                $('@Html.JquerySelectorFor(m=>m.Candidate.DialingCode)').val(selectedValue);
             }).change();
    </script>)
