@using PQT.Domain.Enum
@using Resources
@model PQT.Web.Models.RecruitmentModel

@{
    ViewBag.Title = "Candidate Detail";
}

<style>
    #grid_companies tbody tr {
        cursor: pointer;
    }

        #grid_companies tbody tr.Tier1 {
            color: #a94442;
            background-color: #ffdad7;
        }

            #grid_companies tbody tr.Tier1.selected {
                color: #a94442;
                background-color: #fcaca6;
            }

        #grid_companies tbody tr.Tier2 {
            color: #31708f;
            background-color: #d8edff !important;
        }

            #grid_companies tbody tr.Tier2.selected {
                color: #31708f;
                background-color: #add9ff !important;
            }

        #grid_companies tbody tr.Tier0.selected {
            color: #313534;
            background-color: #e5e6e6 !important;
        }
</style>
<style>
    .card .RejectedEmployment, .card .Deleted {
        background-color: #fad7d4 !important;
    }

        .card .RejectedEmployment input, .card .Deleted input {
            color: #a94442;
        }


    .card .ApprovedEmployment {
        background-color: #d4fad6 !important;
    }

        .card .ApprovedEmployment input {
            color: #3c763d;
        }

    .card .RequestEmployment {
        background-color: #add9ff !important;
    }

        .card .RequestEmployment input {
            color: #31708f;
        }
</style>
<section>
    <div class="row section-header" style="height: auto">
        <h2 class="text-primary col-sm-3">@ViewBag.Title</h2>
    </div>
    <div class="row">
        <div class="col-sm-12" style="padding-right: 24px; padding-bottom: 12px">
            @if (!string.IsNullOrEmpty(Model.BackAction))
            {
                @Html.Bootstrap().ActionLinkButton(Resource.ButtonBackToList, Model.BackAction).PrependIcon("md md-arrow-back")
            }
            else
            {
                @Html.Bootstrap().ActionLinkButton(Resource.ButtonBackToList, "Index").PrependIcon("md md-arrow-back")
            }
            @if (CurrentUser.HasPermission("Recruitment", "Edit"))
            {
                @Html.Bootstrap().ActionLinkButton("Edit", "Edit").RouteValues(new { id = Model.Candidate.ID }).Class("btn-primary").PrependIcon("md md-edit")
            }
            @if (CurrentUser.HasPermission("Recruitment", "DeleteCandidate") && (Model.Candidate.CandidateStatusRecord != CandidateStatus.ApprovedEmployment &&
                                                                                 Model.Candidate.CandidateStatusRecord != CandidateStatus.Deleted))
            {
                @Html.Bootstrap().ActionLinkButton("Delete ", "DeleteCandidate").Id("candidate_delete").Class("btn-danger").PrependIcon("md md-delete")
            }

            @if (CurrentUser.HasPermission("Recruitment", "RequestAction") && (Model.Candidate.CandidateStatusRecord == CandidateStatus.Initial ||
                                                                               Model.Candidate.CandidateStatusRecord == CandidateStatus.RejectedEmployment))
            {
                @Html.Bootstrap().ActionLinkButton("Request Employment", "RequestAction").RouteValues(new { id = Model.Candidate.ID }).Class("btn-info").PrependIcon("md md-phone-locked")
            }


            @if (CurrentUser.HasPermission("Recruitment", "ApprovalAction") && (Model.Candidate.CandidateStatusRecord == CandidateStatus.RequestEmployment))
            {
                @Html.Bootstrap().ActionLinkButton("Approve Employment", "ApprovalAction").Id("approve_action").Class("btn-success").PrependIcon("md md-done")
            }

            @if (CurrentUser.HasPermission("Recruitment", "RejectAction") && (Model.Candidate.CandidateStatusRecord == CandidateStatus.RequestEmployment))
            {
                @Html.Bootstrap().ActionLinkButton("Reject Employment", "RejectAction").RouteValues(new { id = Model.Candidate.ID }).Class("simple-ajax-popup-align-top btn-danger").PrependIcon("md md-cancel")
            }


        </div>
    </div>
    @if (Model.Candidate.CandidateStatusRecord != CandidateStatus.Initial)
    {
    }
    <div class="card">
        <div class="card-body @Model.Candidate.ClassStatus form">
            <div class="row">
                <div class="col-sm-6">
                    <div class="form-group">
                        @Html.Bootstrap().TextBoxFor(m => m.Candidate.StatusDisplay).Class("form-control").Disabled().ShowValidationMessage(true)
                        @Html.Bootstrap().LabelFor(m => m.Candidate.StatusDisplay).LabelText("Candidate Status")
                    </div>
                </div>
                <div class="col-sm-6">
                    <div class="form-group">
                        @Html.Bootstrap().TextBoxFor(m => m.Candidate.StatusUpdateTimeStr).Class("form-control").Disabled().ShowValidationMessage(true)
                        @Html.Bootstrap().LabelFor(m => m.Candidate.StatusUpdateTimeStr).LabelText("Update Time")
                    </div>
                </div>
                @if (Model.Candidate.CandidateStatusRecord == CandidateStatus.RejectedEmployment)
            {
                    <div class="col-sm-12">
                        <div class="form-group">
                            @Html.Bootstrap().TextBoxFor(m => m.Candidate.CandidateStatusRecord.Message).Class("form-control").HtmlAttributes(new { @style = "color:#f44336" }).Disabled().ShowValidationMessage(true)
                            @Html.Bootstrap().LabelFor(m => m.Candidate.CandidateStatusRecord.Message).LabelText("REASON OF REJECT")
                        </div>
                    </div>
                }
            </div>
        </div>
    </div>

    <div class="card">
        <div class="card-body form">
            <div class="row">
                <div class="col-sm-4">
                    <div class="form-group">
                        @Html.Bootstrap().TextBoxFor(m => m.Candidate.FirstName).Class("form-control").Disabled().ShowValidationMessage(true)
                        @Html.Bootstrap().LabelFor(m => m.Candidate.FirstName)
                    </div>
                </div>
                <div class="col-sm-4">
                    <div class="form-group">
                        @Html.Bootstrap().TextBoxFor(m => m.Candidate.LastName).Class("form-control").Disabled().ShowValidationMessage(true)
                        @Html.Bootstrap().LabelFor(m => m.Candidate.LastName)
                    </div>
                </div>
                <div class="col-sm-4">
                    <div class="form-group">
                        @Html.Bootstrap().TextBoxFor(m => m.Candidate.EnglishName).Class("form-control").Disabled().ShowValidationMessage(true)
                        @Html.Bootstrap().LabelFor(m => m.Candidate.EnglishName)
                    </div>
                </div>
                <div class="col-sm-4">
                    <div class="form-group">
                        @Html.Bootstrap().TextBoxFor(m => m.Candidate.MobileNumber).Class("form-control").Disabled().ShowValidationMessage(true)
                        @Html.Bootstrap().LabelFor(m => m.Candidate.MobileNumber)
                    </div>
                </div>
                <div class="col-sm-4">
                    <div class="form-group">
                        @Html.Bootstrap().TextBoxFor(m => m.Candidate.PersonalEmail).Class("form-control").Disabled().ShowValidationMessage(true)
                        @Html.Bootstrap().LabelFor(m => m.Candidate.PersonalEmail)
                    </div>
                </div>
                <div class="col-sm-4">
                    <div class="form-group">
                        @Html.Bootstrap().TextBoxFor(m => m.Candidate.ApplicationSource).Class("form-control").Disabled().ShowValidationMessage(true)
                        @Html.Bootstrap().LabelFor(m => m.Candidate.ApplicationSource)
                    </div>
                </div>
                <div class="col-sm-6">
                    <div class="form-group">
                        @Html.Bootstrap().TextBoxFor(m => m.Candidate.OfficeLocationDisplay).Class("form-control").Disabled().ShowValidationMessage(true)
                        @Html.Bootstrap().LabelFor(m => m.Candidate.OfficeLocation)
                    </div>
                </div>
                <div class="col-sm-6">
                    <div class="form-group">
                        @Html.Bootstrap().TextBoxFor(m => m.Candidate.RecruitmentPositionDisplay).Class("form-control").Disabled().ShowValidationMessage(true)
                        @Html.Bootstrap().LabelFor(m => m.Candidate.RecruitmentPosition)
                    </div>
                </div>
                <div class=" col-sm-6">
                    <div class="form-group">
                        @if (!string.IsNullOrEmpty(Model.Candidate.Resume))
                        {
                            @Html.Bootstrap().Link(Model.Candidate.Resume, FileUpload.GetImageUrl(FileUploadType.Recruitment, Model.Candidate.Resume)).Class("form-control").HtmlAttributes(new { target = "_blank" })
                        }
                        @Html.Bootstrap().LabelFor(m => m.Candidate.Resume)
                    </div>
                </div>
                <div class="col-sm-6">
                    <div class="form-group">
                        @Html.Bootstrap().TextBoxFor(m => m.Candidate.Remarks).Class("form-control").Disabled().ShowValidationMessage(true)
                        @Html.Bootstrap().LabelFor(m => m.Candidate.Remarks)
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="card card-underline">
        <div class="card-head">
            <header>Interview Summary</header>
        </div>
        <div class="card-body form">
            @if (Model.Candidate.PsSummary != null)
            {
                <div class="row">
                    <div class="col-sm-8">
                        <div class="form-group">
                            @Html.Bootstrap().TextBoxFor(m => m.Candidate.PsSummary.Remarks).Class("form-control").Disabled().ShowValidationMessage(true)
                            @Html.Bootstrap().LabelFor(m => m.Candidate.PsSummary).LabelText("PS Summary")
                        </div>
                    </div>
                    <div class="col-sm-4">
                        <div class="form-group">
                            @Html.Bootstrap().TextBoxFor(m => m.Candidate.PsSummary.DateSelectedDisplay).Class("form-control").Disabled().ShowValidationMessage(true)
                            @Html.Bootstrap().LabelFor(m => m.Candidate.PsSummary.DateSelected).LabelText("Date")
                        </div>
                    </div>
                    <div class="col-sm-4">
                        <div class="form-group">
                            @Html.Bootstrap().TextBoxFor(m => m.Candidate.PsSummary.Interviewer).Class("form-control").Disabled().ShowValidationMessage(true)
                            @Html.Bootstrap().LabelFor(m => m.Candidate.PsSummary.Interviewer)
                        </div>
                    </div>
                    <div class="col-sm-4">
                        <div class="form-group">
                            @Html.Bootstrap().TextBoxFor(m => m.Candidate.PsSummary.StatusDisplay).Class("form-control").Disabled().ShowValidationMessage(true)
                            @Html.Bootstrap().LabelFor(m => m.Candidate.PsSummary.Status)
                        </div>
                    </div>
                    <div class="col-sm-4">
                        <div class="form-group">
                            @Html.Bootstrap().TextBoxFor(m => m.Candidate.PsSummary.ReasonRejected).Class("form-control").Disabled().ShowValidationMessage(true)
                            @Html.Bootstrap().LabelFor(m => m.Candidate.PsSummary.ReasonRejected).LabelText("Reason")
                        </div>
                    </div>
                </div>
            }
            @if (Model.Candidate.OneFaceToFaceSummary != null)
            {
                <div class="row">
                    <div class="col-sm-8">
                        <div class="form-group">
                            @Html.Bootstrap().TextBoxFor(m => m.Candidate.OneFaceToFaceSummary.Remarks).Class("form-control").Disabled().ShowValidationMessage(true)
                            @Html.Bootstrap().LabelFor(m => m.Candidate.OneFaceToFaceSummary).LabelText("1F2F Summary")
                        </div>
                    </div>
                    <div class="col-sm-4">
                        <div class="form-group">
                            @Html.Bootstrap().TextBoxFor(m => m.Candidate.OneFaceToFaceSummary.DateSelectedDisplay).Class("form-control").Disabled().ShowValidationMessage(true)
                            @Html.Bootstrap().LabelFor(m => m.Candidate.OneFaceToFaceSummary.DateSelected).LabelText("Date")
                        </div>
                    </div>
                    <div class="col-sm-4">
                        <div class="form-group">
                            @Html.Bootstrap().TextBoxFor(m => m.Candidate.OneFaceToFaceSummary.Interviewer).Class("form-control").Disabled().ShowValidationMessage(true)
                            @Html.Bootstrap().LabelFor(m => m.Candidate.OneFaceToFaceSummary.Interviewer)
                        </div>
                    </div>
                    <div class="col-sm-4">
                        <div class="form-group">
                            @Html.Bootstrap().TextBoxFor(m => m.Candidate.OneFaceToFaceSummary.StatusDisplay).Class("form-control").Disabled().ShowValidationMessage(true)
                            @Html.Bootstrap().LabelFor(m => m.Candidate.OneFaceToFaceSummary.Status)
                        </div>
                    </div>
                    <div class="col-sm-4">
                        <div class="form-group">
                            @Html.Bootstrap().TextBoxFor(m => m.Candidate.OneFaceToFaceSummary.ReasonRejected).Class("form-control").Disabled().ShowValidationMessage(true)
                            @Html.Bootstrap().LabelFor(m => m.Candidate.OneFaceToFaceSummary.ReasonRejected).LabelText("Reason")
                        </div>
                    </div>
                </div>
            }
            @if (Model.Candidate.TwoFaceToFaceSummary != null)
            {
                <div class="row">
                    <div class="col-sm-8">
                        <div class="form-group">
                            @Html.Bootstrap().TextBoxFor(m => m.Candidate.TwoFaceToFaceSummary.Remarks).Class("form-control").Disabled().ShowValidationMessage(true)
                            @Html.Bootstrap().LabelFor(m => m.Candidate.TwoFaceToFaceSummary).LabelText("2F2F Summary")
                        </div>
                    </div>
                    <div class="col-sm-4">
                        <div class="form-group">
                            @Html.Bootstrap().TextBoxFor(m => m.Candidate.TwoFaceToFaceSummary.DateSelectedDisplay).Class("form-control").Disabled().ShowValidationMessage(true)
                            @Html.Bootstrap().LabelFor(m => m.Candidate.TwoFaceToFaceSummary.DateSelected).LabelText("Date")
                        </div>
                    </div>
                    <div class="col-sm-4">
                        <div class="form-group">
                            @Html.Bootstrap().TextBoxFor(m => m.Candidate.TwoFaceToFaceSummary.Interviewer).Class("form-control").Disabled().ShowValidationMessage(true)
                            @Html.Bootstrap().LabelFor(m => m.Candidate.TwoFaceToFaceSummary.Interviewer)
                        </div>
                    </div>
                    <div class="col-sm-4">
                        <div class="form-group">
                            @Html.Bootstrap().TextBoxFor(m => m.Candidate.TwoFaceToFaceSummary.StatusDisplay).Class("form-control").Disabled().ShowValidationMessage(true)
                            @Html.Bootstrap().LabelFor(m => m.Candidate.TwoFaceToFaceSummary.Status)
                        </div>
                    </div>
                    <div class="col-sm-4">
                        <div class="form-group">
                            @Html.Bootstrap().TextBoxFor(m => m.Candidate.TwoFaceToFaceSummary.ReasonRejected).Class("form-control").Disabled().ShowValidationMessage(true)
                            @Html.Bootstrap().LabelFor(m => m.Candidate.TwoFaceToFaceSummary.ReasonRejected).LabelText("Reason")
                        </div>
                    </div>
                </div>
            }
        </div><!--end .card-body -->
    </div>
    @if (Model.Employee != null)
    {

        <div class="card card-underline">
            <div class="card-head">
                <header>Basic Info</header>
            </div>
            <div class="card-body text-default-light form">
                <div class="row">
                    <div class="col-sm-6">
                        <div class="form-group">
                            @Html.Bootstrap().TextBoxFor(m => m.Employee.DisplayName).Disabled().Class("form-control text-capitalize").ShowValidationMessage(true)
                            @Html.Bootstrap().LabelFor(m => m.Employee.DisplayName).LabelText("Display Name").ShowRequiredStar(true)
                        </div>
                    </div>
                    <div class="col-sm-6">
                        <div class="form-group">
                            @Html.Bootstrap().TextBoxFor(m => m.Employee.FirstName).Disabled().Class("form-control text-capitalize").ShowValidationMessage(true)
                            @Html.Bootstrap().LabelFor(m => m.Employee.FirstName).ShowRequiredStar(true)
                        </div>
                    </div>
                    <div class="col-sm-6">
                        <div class="form-group">
                            @Html.Bootstrap().TextBoxFor(m => m.Employee.LastName).Disabled().Class("form-control text-capitalize").ShowValidationMessage(true)
                            @Html.Bootstrap().LabelFor(m => m.Employee.LastName).ShowRequiredStar(true)
                        </div>
                    </div>
                    <div class="col-sm-6">
                        <div class="form-group">
                            @Html.Bootstrap().TextBoxFor(m => m.Employee.Email).Disabled().Class("form-control text-lowercase").ShowValidationMessage(true)
                            @Html.Bootstrap().LabelFor(m => m.Employee.Email).LabelText("Email").ShowRequiredStar(true)
                        </div>
                    </div>
                    <div class="col-sm-6">
                        <div class="form-group">
                            @Html.Bootstrap().TextBoxFor(m => m.Employee.MobilePhone).Disabled().Class("form-control").ShowValidationMessage(true)
                            @Html.Bootstrap().LabelFor(m => m.Employee.MobilePhone)
                        </div>
                    </div>
                    <div class="col-sm-6">
                        <div class="form-group">
                            @Html.Bootstrap().TextBoxFor(m => m.Employee.PersonalEmail).Disabled().Class("form-control text-lowercase").ShowValidationMessage(true)
                            @Html.Bootstrap().LabelFor(m => m.Employee.PersonalEmail)
                        </div>
                    </div>
                    <div class="col-sm-6">
                        <div class="form-group">
                            @Html.Bootstrap().TextBoxFor(m => m.Employee.PassportID).Disabled().Class("form-control").ShowValidationMessage(true)
                            @Html.Bootstrap().LabelFor(m => m.Employee.PassportID).LabelText("Passport/ID")
                        </div>
                    </div>
                    <div class="col-sm-6">
                        <div class="form-group">
                            @Html.Bootstrap().TextBoxFor(m => m.Employee.DateOfBirthDisplay).Disabled().Class("form-control").ShowValidationMessage(true)
                            @Html.Bootstrap().LabelFor(m => m.Employee.DateOfBirth)
                        </div>
                    </div>
                    <div class="col-sm-6">
                        <div class="form-group">
                            @Html.Bootstrap().TextBoxFor(m => m.Employee.Nationality).Disabled().Class("form-control").ShowValidationMessage(true)
                            @Html.Bootstrap().LabelFor(m => m.Employee.Nationality)
                        </div>
                    </div>
                    <div class="col-sm-6">
                        <div class="form-group">
                            @Html.Bootstrap().TextBoxFor(m => m.Employee.OfficeLocation.Name).Disabled().Class("form-control").ShowValidationMessage(true)
                            @Html.Bootstrap().LabelFor(m => m.Employee.OfficeLocation)
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="card card-underline">
            <div class="card-head">
                <header>Contract Info</header>
            </div>
            <div class="card-body text-default-light form">
                <div class="row">
                    <div class="col-sm-6">
                        <div class="form-group">
                            @Html.Bootstrap().TextBoxFor(m => m.Employee.EmploymentDateDisplay).Disabled().Class("form-control").ShowValidationMessage(true)
                            @Html.Bootstrap().LabelFor(m => m.Employee.EmploymentDate)
                        </div>
                    </div>
                    <div class="col-sm-6">
                        <div class="form-group">
                            @Html.Bootstrap().TextBoxFor(m => m.Employee.EmploymentEndDateDisplay).Disabled().Class("form-control").ShowValidationMessage(true)
                            @Html.Bootstrap().LabelFor(m => m.Employee.EmploymentEndDate)
                        </div>
                    </div>
                    <div class="col-sm-6">
                        <div class="form-group">
                            @Html.Bootstrap().TextBoxFor(m => m.Employee.FirstEvaluationDateDisplay).Disabled().Class("form-control").ShowValidationMessage(true)
                            @Html.Bootstrap().LabelFor(m => m.Employee.FirstEvaluationDate)
                        </div>
                    </div>
                    <div class="col-sm-6">
                        <div class="form-group">
                            @Html.Bootstrap().TextBoxFor(m => m.Employee.BasicSalary).Disabled().Class("form-control").ShowValidationMessage(true)
                            @Html.Bootstrap().LabelFor(m => m.Employee.BasicSalary)
                        </div>
                    </div>
                    <div class="col-sm-6">
                        <div class="form-group">
                            @Html.Bootstrap().TextBoxFor(m => m.Employee.SalaryCurrency.DisplayName).Disabled().Class("form-control").ShowValidationMessage(true)
                            @Html.Bootstrap().LabelFor(m => m.Employee.SalaryCurrency)
                        </div>
                    </div>
                    <div class="col-sm-6">
                        <div class="form-group ">
                            @if (!string.IsNullOrEmpty(Model.Employee.SignedContract))
                            {
                                <a href="@UserPicture.GetContractUrl(Model.Employee.SignedContract)" target="_blank">@Model.Employee.SignedContract</a>
                            }
                            @Html.Bootstrap().LabelFor(m => m.SignedContractFile).LabelText("Signed Contract")
                        </div>
                    </div>
                </div>
            </div>
        </div>
    }
</section>

@Html.Script(
    @<script>

        UpdateSeenNotify(@Model.Candidate.ID, @NotifyType.Recruitment.Value);

        $(document).on('click', '#candidate_delete', function (e) {
             e.preventDefault();
             bootbox.confirm("Do you want to delete this candidate?", function (isOK) {
                 if (isOK) {
                     $.ajax({
                         url: '@Url.Action("DeleteCandidate")?id=@Model.Candidate.ID',
                         type: 'POST',
                         success: function (data) {
                             if (data == "") {
                                 location.reload();
                             } else {
                                 toastr.error(data);
                             }
                         },
                         error: function () {
                             toastr.error("Delete failed");
                         }
                     });
                 }
             });
        });


        @*$(document).on('click', '#request_employment', function (e) {
             e.preventDefault();
             bootbox.confirm("@Resource.ConfirmRequestNCL", function (isOK) {
                 if (isOK) {
                     $.ajax({
                         url: '@Url.Action("RequestAction")?id=@Model.Candidate.ID',
                         type: 'POST',
                         success: function (data) {
                             if (data == "") {
                                 location.reload();
                             } else {
                                 toastr.error(data);
                             }
                         },
                         error: function () {
                             toastr.error("Request failed");
                         }
                     });
                 }
             });
         });*@

         $(document).on('click', '#approve_action', function (e) {
             e.preventDefault();
             bootbox.confirm("@Resource.ConfirmApprove", function (isOK) {
                 if (isOK) {
                     $.ajax({
                         url: '@Url.Action("ApprovalAction")?id=@Model.Candidate.ID',
                         type: 'POST',
                         success: function (data) {
                             if (data.IsSuccess) {
                                 location.reload();
                             } else {
                                 toastr.error(data.Message);
                             }
                         },
                         error: function () {
                             toastr.error("Cancel failed");
                         }
                     });
                 }
             });
         });
    </script>)


@Html.Script(
    @<script>

         function onFailRejectAction() {
             toastr.error('@Resource.SaveError');
         }
         function onSuccessRejectAction(data) {
             if (data.IsSuccess) {
                 toastr.success("Reject successful");
                 $.magnificPopup.close();
                 location.reload();
             } else {
                 toastr.error(data.Message);
             }
         }
    </script>)

