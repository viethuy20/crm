@model PQT.Web.Models.EditUserModel
@using NS.Mvc
@using PQT.Domain.Abstract
@using PQT.Domain.Enum
@using Resources
@{
    ViewBag.Title = "Edit Employee";
    var unitService = DependencyHelper.GetService<IUnitRepository>();
    var officeLocations = unitService.GetAllOfficeLocations();
    var countries = unitService.GetAllCountries().Select(m => m.Name);
}
<section>
    <div class="section-header">
        <h2 class="text-primary">@ViewBag.Title</h2>
    </div>
    @using (Html.BeginForm("EditEmployment", "Recruitment", null, FormMethod.Post, new { enctype = "multipart/form-data", @class = "form" }))
    {
        @Html.HiddenFor(m => m.ID)
        <div class="card card-underline">
            <div class="card-head">
                <header>Basic Info</header>
            </div>
            <div class="card-body text-default-light">
                <div class="row">
                    <div class="col-sm-6">
                        <div class="form-group">
                            @Html.Bootstrap().TextBoxFor(m => m.DisplayName).HtmlAttributes(new { required = "required" }).Class("form-control text-capitalize").ShowValidationMessage(true)
                            @Html.Bootstrap().LabelFor(m => m.DisplayName).LabelText("Display Name").ShowRequiredStar(true)
                        </div>
                    </div>
                    <div class="col-sm-6">
                        <div class="form-group">
                            @Html.Bootstrap().TextBoxFor(m => m.FirstName).Class("form-control text-capitalize").ShowValidationMessage(true)
                            @Html.Bootstrap().LabelFor(m => m.FirstName).ShowRequiredStar(true)
                        </div>
                    </div>
                    <div class="col-sm-6">
                        <div class="form-group">
                            @Html.Bootstrap().TextBoxFor(m => m.LastName).Class("form-control text-capitalize").ShowValidationMessage(true)
                            @Html.Bootstrap().LabelFor(m => m.LastName).ShowRequiredStar(true)
                        </div>
                    </div>
                    <div class="col-sm-6">
                        <div class="form-group">
                            @Html.Bootstrap().TextBoxFor(m => m.Email).Readonly().HtmlAttributes(new { required = "required" }).Class("form-control text-lowercase").ShowValidationMessage(true)
                            @Html.Bootstrap().LabelFor(m => m.Email).LabelText("Email").ShowRequiredStar(true)
                        </div>
                    </div>
                    <div class="col-sm-6">
                        <div class="form-group">
                            @Html.Bootstrap().TextBoxFor(m => m.BusinessPhone).Class("form-control").ShowValidationMessage(true)
                            @Html.Bootstrap().LabelFor(m => m.BusinessPhone)
                        </div>
                    </div>
                    <div class="col-sm-6">
                        <div class="form-group">
                            @Html.Bootstrap().TextBoxFor(m => m.MobilePhone).Class("form-control").ShowValidationMessage(true)
                            @Html.Bootstrap().LabelFor(m => m.MobilePhone)
                        </div>
                    </div>
                    <div class="col-sm-6">
                        <div class="form-group">
                            @Html.Bootstrap().TextBoxFor(m => m.PersonalEmail).Class("form-control text-lowercase").ShowValidationMessage(true)
                            @Html.Bootstrap().LabelFor(m => m.PersonalEmail)
                        </div>
                    </div>
                    <div class="col-sm-6">
                        <div class="form-group">
                            @Html.Bootstrap().TextBoxFor(m => m.PassportID).Class("form-control").ShowValidationMessage(true)
                            @Html.Bootstrap().LabelFor(m => m.PassportID).LabelText("Passport/ID")
                        </div>
                    </div>
                    <div class="col-sm-6">
                        <div class="form-group">
                            @Html.DatePickerFor(m => m.DateOfBirth, new { @class = "form-control" })
                            @Html.ValidationMessageFor(m => m.DateOfBirth)
                            @Html.Bootstrap().LabelFor(m => m.DateOfBirth)
                        </div>
                    </div>
                    <div class="col-sm-6">
                        <div class="form-group">
                            @Html.Bootstrap().DropDownListFor(m => m.Nationality, countries.ToSelectList(m => m, m => m)).OptionLabel("").Class("form-control").ShowValidationMessage(true)
                            @Html.Bootstrap().LabelFor(m => m.Nationality)
                        </div>
                    </div>
                    <div class="col-sm-6">
                        <div class="form-group">
                            @Html.Bootstrap().DropDownListFor(m => m.OfficeLocationID, officeLocations.ToSelectList(m => m.ID, m => m.Name)).Class("form-control").OptionLabel("").ShowValidationMessage(true)
                            @Html.Bootstrap().LabelFor(m => m.OfficeLocationID).LabelText("Office Location")
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="card card-underline">
            <div class="card-head">
                <header>Contract Info</header>
            </div>
            <div class="card-body text-default-light">
                <div class="row">
                    <div class="col-sm-4">
                        <div class="form-group">
                            @Html.DatePickerFor(m => m.EmploymentDate, new { @class = "form-control" })
                            @Html.ValidationMessageFor(m => m.EmploymentDate)
                            @Html.Bootstrap().LabelFor(m => m.EmploymentDate)
                        </div>
                    </div>
                    <div class="col-sm-4">
                        <div class="form-group">
                            @Html.DatePickerFor(m => m.EmploymentEndDate, new { @class = "form-control" })
                            @Html.ValidationMessageFor(m => m.EmploymentEndDate)
                            @Html.Bootstrap().LabelFor(m => m.EmploymentEndDate)
                        </div>
                    </div>
                    <div class="col-sm-4">
                        <div class="form-group">
                            @Html.DatePickerFor(m => m.FirstEvaluationDate, new { @class = "form-control" })
                            @Html.ValidationMessageFor(m => m.FirstEvaluationDate)
                            @Html.Bootstrap().LabelFor(m => m.FirstEvaluationDate)
                        </div>
                    </div>
                    <div class="col-sm-6">
                        <div class="form-group">
                            @Html.Bootstrap().TextBoxFor(m => m.BasicSalary).Class("form-control").ShowValidationMessage(true)
                            @Html.Bootstrap().LabelFor(m => m.BasicSalary)
                        </div>
                    </div>
                    <div class="col-sm-6">
                        <div class="form-group">
                            @Html.Bootstrap().DropDownListFor(m => m.SalaryCurrency, EnumerationHelper.ToSelectList<SalaryCurrency>()).Class("form-control").HtmlAttributes(new { required = "required" }).ShowValidationMessage(true)
                            @Html.Bootstrap().LabelFor(m => m.SalaryCurrency)
                        </div>
                    </div>
                    <div class="col-sm-4">
                        <div class="form-group">
                            @if (!string.IsNullOrEmpty(Model.BirthCertification))
                            {
                                <a href="@UserPicture.GetContractUrl(Model.BirthCertification)" target="_blank">@Model.BirthCertification</a>
                                @Html.HiddenFor(m => m.BirthCertification)
                            }
                            @Html.Bootstrap().FileFor(m => m.BirthCertificationFile).Class("form-control").ShowValidationMessage(true)
                            @Html.Bootstrap().LabelFor(m => m.BirthCertificationFile).LabelText("Birth Certification")
                        </div>
                    </div>
                    <div class="col-sm-4">
                        <div class="form-group">
                            @if (!string.IsNullOrEmpty(Model.FamilyCertification))
                            {
                                <a href="@UserPicture.GetContractUrl(Model.FamilyCertification)" target="_blank">@Model.FamilyCertification</a>
                                @Html.HiddenFor(m => m.FamilyCertification)
                            }
                            @Html.Bootstrap().FileFor(m => m.FamilyCertificationFile).Class("form-control").ShowValidationMessage(true)
                            @Html.Bootstrap().LabelFor(m => m.FamilyCertificationFile).LabelText("Family Certification")
                        </div>
                    </div>
                    <div class="col-sm-4">
                        <div class="form-group">
                            @if (!string.IsNullOrEmpty(Model.FilledDeclarationForm))
                            {
                                <a href="@UserPicture.GetContractUrl(Model.FilledDeclarationForm)" target="_blank">@Model.FilledDeclarationForm</a>
                                @Html.HiddenFor(m => m.FilledDeclarationForm)
                            }
                            @Html.Bootstrap().FileFor(m => m.FilledDeclarationFormFile).Class("form-control").ShowValidationMessage(true)
                            @Html.Bootstrap().LabelFor(m => m.FilledDeclarationFormFile).LabelText("Filled Declaration Form")
                        </div>
                    </div>
                    <div class="col-sm-4">
                        <div class="form-group">
                            @if (!string.IsNullOrEmpty(Model.CertOfHighestEducation))
                            {
                                <a href="@UserPicture.GetContractUrl(Model.CertOfHighestEducation)" target="_blank">@Model.CertOfHighestEducation</a>
                                @Html.HiddenFor(m => m.CertOfHighestEducation)
                            }
                            @Html.Bootstrap().FileFor(m => m.CertOfHighestEducationFile).Class("form-control").ShowValidationMessage(true)
                            @Html.Bootstrap().LabelFor(m => m.CertOfHighestEducationFile).LabelText("Cert Of Highest Education")
                        </div>
                    </div>
                    <div class="col-sm-4">
                        <div class="form-group">
                            @if (!string.IsNullOrEmpty(Model.IDCard))
                            {
                                <a href="@UserPicture.GetContractUrl(Model.IDCard)" target="_blank">@Model.IDCard</a>
                                @Html.HiddenFor(m => m.IDCard)
                            }
                            @Html.Bootstrap().FileFor(m => m.IDCardFile).Class("form-control").ShowValidationMessage(true)
                            @Html.Bootstrap().LabelFor(m => m.IDCardFile).LabelText("ID Card")
                        </div>
                    </div>
                </div>
            </div>
            <div class="card-body text-default-light" id="delegateContain" style="padding: 0px;">
                @Html.CollectionEditorFor(m => m.UserContracts)
                @Html.JqueryTemplateFor(m => m.UserContracts, "sub-tmpl")
            </div><!--end .card-body -->
            <div class="card-actionbar">
                <div class="card-actionbar-row">
                    <a class="btn btn-info pull-left" id="btn_add_delegate" onclick="return sub.addNewModule();"><i class="md md-add"></i> Add New Contract</a>
                </div>
            </div>
        </div>

        if (Model.Candidate != null)
        {
            <div class="card card-underline">
                <div class="card-head">
                    <header>Interview Summary</header>
                </div>
                <div class="card-body form">
                    @if (Model.Candidate.PsSummary != null)
                    {
                        <div class="row">
                            <div class="col-sm-8">
                                <div class="form-group">
                                    @Html.Bootstrap().TextBoxFor(m => m.Candidate.PsSummary.Remarks).Class("form-control").Disabled().ShowValidationMessage(true)
                                    @Html.Bootstrap().LabelFor(m => m.Candidate.PsSummary).LabelText("PS Summary")
                                </div>
                            </div>
                            <div class="col-sm-4">
                                <div class="form-group">
                                    @Html.Bootstrap().TextBoxFor(m => m.Candidate.PsSummary.DateSelectedDisplay).Class("form-control").Disabled().ShowValidationMessage(true)
                                    @Html.Bootstrap().LabelFor(m => m.Candidate.PsSummary.DateSelected).LabelText("Date")
                                </div>
                            </div>
                            <div class="col-sm-4">
                                <div class="form-group">
                                    @Html.Bootstrap().TextBoxFor(m => m.Candidate.PsSummary.Interviewer).Class("form-control").Disabled().ShowValidationMessage(true)
                                    @Html.Bootstrap().LabelFor(m => m.Candidate.PsSummary.Interviewer)
                                </div>
                            </div>
                            <div class="col-sm-4">
                                <div class="form-group">
                                    @Html.Bootstrap().TextBoxFor(m => m.Candidate.PsSummary.StatusDisplay).Class("form-control").Disabled().ShowValidationMessage(true)
                                    @Html.Bootstrap().LabelFor(m => m.Candidate.PsSummary.Status)
                                </div>
                            </div>
                            <div class="col-sm-4">
                                <div class="form-group">
                                    @Html.Bootstrap().TextBoxFor(m => m.Candidate.PsSummary.ReasonRejected).Class("form-control").Disabled().ShowValidationMessage(true)
                                    @Html.Bootstrap().LabelFor(m => m.Candidate.PsSummary.ReasonRejected).LabelText("Reason")
                                </div>
                            </div>
                        </div>
                    }
                    @if (Model.Candidate.OneFaceToFaceSummary != null)
                    {
                        <div class="row">
                            <div class="col-sm-8">
                                <div class="form-group">
                                    @Html.Bootstrap().TextBoxFor(m => m.Candidate.OneFaceToFaceSummary.Remarks).Class("form-control").Disabled().ShowValidationMessage(true)
                                    @Html.Bootstrap().LabelFor(m => m.Candidate.OneFaceToFaceSummary).LabelText("1F2F Summary")
                                </div>
                            </div>
                            <div class="col-sm-4">
                                <div class="form-group">
                                    @Html.Bootstrap().TextBoxFor(m => m.Candidate.OneFaceToFaceSummary.DateSelectedDisplay).Class("form-control").Disabled().ShowValidationMessage(true)
                                    @Html.Bootstrap().LabelFor(m => m.Candidate.OneFaceToFaceSummary.DateSelected).LabelText("Date")
                                </div>
                            </div>
                            <div class="col-sm-4">
                                <div class="form-group">
                                    @Html.Bootstrap().TextBoxFor(m => m.Candidate.OneFaceToFaceSummary.Interviewer).Class("form-control").Disabled().ShowValidationMessage(true)
                                    @Html.Bootstrap().LabelFor(m => m.Candidate.OneFaceToFaceSummary.Interviewer)
                                </div>
                            </div>
                            <div class="col-sm-4">
                                <div class="form-group">
                                    @Html.Bootstrap().TextBoxFor(m => m.Candidate.OneFaceToFaceSummary.StatusDisplay).Class("form-control").Disabled().ShowValidationMessage(true)
                                    @Html.Bootstrap().LabelFor(m => m.Candidate.OneFaceToFaceSummary.Status)
                                </div>
                            </div>
                            <div class="col-sm-4">
                                <div class="form-group">
                                    @Html.Bootstrap().TextBoxFor(m => m.Candidate.OneFaceToFaceSummary.ReasonRejected).Class("form-control").Disabled().ShowValidationMessage(true)
                                    @Html.Bootstrap().LabelFor(m => m.Candidate.OneFaceToFaceSummary.ReasonRejected).LabelText("Reason")
                                </div>
                            </div>
                        </div>
                    }
                    @if (Model.Candidate.TwoFaceToFaceSummary != null)
                    {
                        <div class="row">
                            <div class="col-sm-8">
                                <div class="form-group">
                                    @Html.Bootstrap().TextBoxFor(m => m.Candidate.TwoFaceToFaceSummary.Remarks).Class("form-control").Disabled().ShowValidationMessage(true)
                                    @Html.Bootstrap().LabelFor(m => m.Candidate.TwoFaceToFaceSummary).LabelText("2F2F Summary")
                                </div>
                            </div>
                            <div class="col-sm-4">
                                <div class="form-group">
                                    @Html.Bootstrap().TextBoxFor(m => m.Candidate.TwoFaceToFaceSummary.DateSelectedDisplay).Class("form-control").Disabled().ShowValidationMessage(true)
                                    @Html.Bootstrap().LabelFor(m => m.Candidate.TwoFaceToFaceSummary.DateSelected).LabelText("Date")
                                </div>
                            </div>
                            <div class="col-sm-4">
                                <div class="form-group">
                                    @Html.Bootstrap().TextBoxFor(m => m.Candidate.TwoFaceToFaceSummary.Interviewer).Class("form-control").Disabled().ShowValidationMessage(true)
                                    @Html.Bootstrap().LabelFor(m => m.Candidate.TwoFaceToFaceSummary.Interviewer)
                                </div>
                            </div>
                            <div class="col-sm-4">
                                <div class="form-group">
                                    @Html.Bootstrap().TextBoxFor(m => m.Candidate.TwoFaceToFaceSummary.StatusDisplay).Class("form-control").Disabled().ShowValidationMessage(true)
                                    @Html.Bootstrap().LabelFor(m => m.Candidate.TwoFaceToFaceSummary.Status)
                                </div>
                            </div>
                            <div class="col-sm-4">
                                <div class="form-group">
                                    @Html.Bootstrap().TextBoxFor(m => m.Candidate.TwoFaceToFaceSummary.ReasonRejected).Class("form-control").Disabled().ShowValidationMessage(true)
                                    @Html.Bootstrap().LabelFor(m => m.Candidate.TwoFaceToFaceSummary.ReasonRejected).LabelText("Reason")
                                </div>
                            </div>
                        </div>
                    }
                </div><!--end .card-body -->
            </div>
        }

        <div class="row">
            <div class="form-group  col-md-offset-2">
                @Html.Bootstrap().ActionLinkButton(Resource.ButtonBackToList, "Employees").PrependIcon("md md-arrow-back")
                @Html.Bootstrap().SubmitButton().Class("submitbutton").Text(Resource.Save).PrependIcon("md md-done").Style(ButtonStyle.Success)
            </div>
        </div>
    }
</section>
@Html.Script(
    @<script>
         $(".submitbutton").on('click', function (e) {
             e.preventDefault();
             bootbox.confirm('@Resource.ConfirmSave', function (isOK) {
                 if (isOK) {

                     var form = $('.submitbutton').parents("form");
                     form.submit();
                 }
             });
         });
         var sub = {
             addNewModule: function () {
                 this._addNew('#sub-tmpl');
                 return false;
             },

             _addNew: function (templateID) {
                 $(templateID).tmpl({ index: this._generateGuid() }).appendTo('#delegateContain');
                 ReValidateForm();
                 OrderAllDelegate();
                 initDatepicker();
             },
             remove: function (sender) {
                 $(sender).closest('.delegateItem').remove();
                 OrderAllDelegate();
             },

             _generateGuid: function () {
                 // Source: http://stackoverflow.com/questions/105034/how-to-create-a-guid-uuid-in-javascript/105074#105074
                 return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {
                     var r = Math.random() * 16 | 0, v = c == 'x' ? r : (r & 0x3 | 0x8);
                     return v.toString(16);
                 });
             }
         };


         function OrderAllDelegate() {
             var allOrderElements =
                 $("#delegateContain").find("input[id*='Order']");
             allOrderElements.each(function (index, item) {
                 $(item).val(index + 1);
             });
         }
    </script>)
