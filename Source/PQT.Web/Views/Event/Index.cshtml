@using PQT.Domain.Entities
@using Resources
@model System.Collections.Generic.IEnumerable<PQT.Domain.Entities.Event>

@{
    ViewBag.Title = "Events";
}

<section style="@(CurrentUser.Identity.Background != null && CurrentUser.HasRole("Finance") ?"background: url("+CurrentUser.Identity.BackgroundUrl+ ") no-repeat center center fixed;-webkit-background-size: cover;-moz-background-size: cover;-o-background-size: cover;background-size: cover;" : "")">
    <div class="section-header">
        <h2 class="text-primary">@ViewBag.Title</h2>
    </div>
    <div class="form-group row">
        <div class="col-sm-6">
            @if (CurrentUser.HasPermission("Event", "Create"))
            {
                @Html.Bootstrap().ActionLinkButton(Resource.AddNew, "Create").PrependIcon("md md-add").HtmlAttributes(new { @class = "btn btn-primary" })
            }
        </div>
    </div>
    <div class="card" style="margin-bottom: 350px">
        <div class="card-body">
            <table class="table" id="table">
                <thead>
                    <tr>
                        <th>@Resource.Code</th>
                        <th>Status</th>
                        <th>@Resource.Name</th>
                        <th>Color</th>
                        <th>Event First Day</th>
                        <th>Event Last Day</th>
                        <th>Date Of Confirmation</th>
                        <th>Total Delegates</th>
                        <th>Location</th>
                        <th>Hotel Venue</th>
                        <th></th>
                    </tr>
                </thead>
            </table>
        </div>
    </div>
</section>


@Html.Script(
    @<script>

        var $Table = $('#table').dataTable({
            "processing": true, // for show progress bar
            "serverSide": true, // for process server side
            "filter": true, // this is for disable filter (search box)
            "orderMulti": false, // for disable multiple column at once
            "stateSave": false,
            "ajax": {
                "url": "@Url.Action("AjaxGetEventAlls")",
                "type": "POST",
                "datatype": "json",
                "data": function(d) {
                }
            },
            "columns": [
                { "data": "EventCode", "name": "EventCode", "orderable": true },
                { "data": "EventStatusDisplay", "name": "EventStatusDisplay", "orderable": true },
                { "data": "EventName", "name": "EventName", "orderable": true },
                { "data": "ID", "name": "ID", "orderable": false },
                { "data": "StartDate", "name": "StartDate", "orderable": true },
                { "data": "EndDate", "name": "EndDate", "orderable": true },
                { "data": "DateOfConfirmation", "name": "DateOfConfirmation", "orderable": true },
                { "data": "TotalDelegates", "name": "TotalDelegates", "orderable": true },
                { "data": "Location", "name": "Location", "orderable": true },
                { "data": "HotelVenue", "name": "HotelVenue", "orderable": true },
                { "data": "ID", "name": "ID", "orderable": false },
            ],
            "iDisplayLength": 50,
            "aaSorting": [[0, "desc"]],
            "fnRowCallback": function(nRow, aData, iDisplayIndex, iDisplayIndexFull) {
                if ('@CurrentUser.HasPermission("Lead", "Detail")' == 'True') {
                    $(nRow).find('td:eq(0)').html('<a href="@Url.Action("Detail")/' +
                        aData["ID"] + '">' + aData["EventCode"] + '</a>');
                } else if ('@CurrentUser.HasPermission("Booking", "Index")' == 'True') {
                    $(nRow).find('td:eq(0)').html('<a href="/Booking/Index/' + aData["ID"] + '">' +
                        aData["EventCode"] +
                        '</a>');
                } else {
                    $(nRow).find('td:eq(0)').html(aData["EventCode"]);
                }
                $(nRow).find('td:eq(3)').html('<span class="EventColor" style="cursor: default;display: inline-block;width: 30px;height: 30px;background:' + aData["BackgroundColor"] + ';border:1px solid #c3c3c3;border-radius: 50%;">&nbsp;</span>');
                var dropdowns = '';
                if ('@CurrentUser.HasPermission("Lead", "Detail")' == 'True') {
                    dropdowns += '<li><a href="@Url.Action("Detail")/' + aData["ID"] + '"><i class="fa fa-eye"> Detail</i></a></li>';
                }
                if ('@CurrentUser.HasPermission("Lead", "NCLForManager")' == 'True') {
                   dropdowns += '<li class="divider"></li><li><a href="@Url.Action("NCLForManager", "Lead")/' + aData["ID"] + '"><i class="fa fa-eye"> View NCL</i></a></li>';
                }
                if ('@CurrentUser.HasPermission("Booking", "Index")' == 'True') {
                    dropdowns += '<li class="divider"></li><li><a href="/Booking/Index/' + aData["ID"] + '"><i class="fa fa-eye"> View Bookings</i></a></li>';
                }
                if ('@CurrentUser.HasPermission("Event", "Edit")' == 'True') {
                    dropdowns += '<li class="divider"></li><li><a href="@Url.Action("Edit")/' + aData["ID"] + '"><i class="md md-edit text-info"> Edit</i></a></li>';
                }
                if ('@CurrentUser.HasPermission("Event", "AssignCompany")' == 'True') {
                    dropdowns += '<li class="divider"></li><li><a href="@Url.Action("AssignCompany")/' + aData["ID"] + '"><i class="md md-edit text-info"> Assign Company</i></a></li>';
                }
                if ('@CurrentUser.HasPermission("Event", "Delete")' == 'True') {
                    dropdowns += '<li class="divider"></li><li><a href="#"  data-action="delete" data-id="' + aData["ID"] + '"><i class="md md-delete text-danger"> Delete</i></a></li>';
                }
                if ('@CurrentUser.HasPermission("Event", "EndEvent")' == 'True') {
                    dropdowns += '<li class="divider"></li><li><a class="simple-ajax-popup-align-top" href="@Url.Action("EndEvent")/' + aData["ID"] + '"><i class="md md-alarm text-info"> End Event</i></a></li>';
                }
                if ('@CurrentUser.HasPermission("Kpi", "ImportVoIp")' == 'True') {
                    dropdowns += '<li class="divider"></li><li><a href="@Url.Action("ImportVoIp", "Kpi")/' + aData["ID"] + '"><i class="fa fa-upload text-primary"> Import VoIP & Check KPI</i></a></li>';
                }
                $(nRow).find('td:eq(10)').html('<div class="dropdown"><a class="btn dropdown-toggle btn-default btn-mini btn btn-flat prepend-icon" data-toggle="dropdown" href="#"><i class="fa fa-navicon"></i> <span class="caret"></span></a><ul class="pull-right dropdown-menu">' +
                    dropdowns +
                    '</ul></div>');
                $(nRow).attr("data-id", ["ID"]);
            },
            initComplete: function () {
                var _table = this;
                _table.parent().find('input[type="search"]').unbind();
                var timeOutTyping;
                _table.parent().find('input[type="search"]').bind('keyup', function (e) {
                    clearTimeout(timeOutTyping);
                    timeOutTyping = setTimeout(function () {
                        _table.fnFilter(_table.parent().find('input[type="search"]').eq(0).val());
                    }, 600);
                });
            },
        });
        $Table.on('click', '[data-action="delete"]', function (e) {
            e.preventDefault();
            var selftr = $(this);
            bootbox.confirm("@Resource.ConfirmDelete", function (isOK) {
                if (isOK) {
                    $.ajax({
                        url: '@Url.Action("Delete")/' + selftr.data('id'),
                        type: 'POST',
                        success: function (data) {
                            if (data == true) {
                                $Table.fnDeleteRow(selftr.closest('tr')[0]);
                            } else {
                                bootbox.alert("@Resource.DeleteFailed");
                            }
                        },
                        error: function () {
                            bootbox.alert("@Resource.DeleteFailed");
                        }
                    });
                }
            });
        });

        $(document).on('click', '#submitEndEventBtn', function (e) {
            e.preventDefault();
            var msg = "Do you want to change status this event?";
            if ($(".endStatus").val() == '@EventStatus.Completed') {
                msg = "Do you want to end this event<br/>and copy all data to company resources?";
            }
            bootbox.confirm(msg, function (isOK) {
                if (isOK) {
                    var form = $('#submitEndEventBtn').parents("form");
                    form.submit();
                }
            });
        });

        function onEndEventFail() {
            toastr.error('@Resource.Error');
        }
        function onEndEventSuccess(data) {
            if (data) {
                $Table.fnFilter('');
                $.magnificPopup.close();
            } else {
                toastr.error('@Resource.SaveFailed');
            }
        }

        StartConnectProgressHub();
    </script>)