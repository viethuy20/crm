@using PQT.Domain.Enum
@using Resources
@model dynamic


@{
    ViewBag.MenuBarColl = true;
    ViewBag.Title = "Assigned New Event";
}


<style>
    .table > tbody > tr > td {
        vertical-align: middle;
    }

        .table > tbody > tr > td > p {
            margin-bottom: 0px;
        }

    .truncate {
        width: 150px;
        display: -webkit-box;
        -webkit-line-clamp: 2;
        -webkit-box-orient: vertical;
        overflow: hidden;
        text-overflow: ellipsis;
    }

    .truncate100 {
        width: 100px;
        display: -webkit-box;
        -webkit-line-clamp: 2;
        -webkit-box-orient: vertical;
        overflow: hidden;
        text-overflow: ellipsis;
    }

    .table th {
        white-space: nowrap;
    }

    #tableLead td, table th {
        text-align: left;
        color: #000;
    }


    .DTFC_Cloned {
        background: #fff;
    }

        .DTFC_Cloned td {
            background-color: #fff;
        }

        .DTFC_Cloned th {
            background-color: #f5f5f5 !important;
        }

        #tableLead tbody tr.follow_status_neutral td,
        .DTFC_Cloned tbody tr.follow_status_neutral td {
            color: #333;
            background-color: #fff !important;
        }

        #tableLead tbody tr.follow_status_rejected td,
        .DTFC_Cloned tbody tr.follow_status_rejected td {
            color: #333;
            background-color: #bdd192 !important;
        }

        #tableLead tbody tr.follow_status_interests td,
        .DTFC_Cloned tbody tr.follow_status_interests td {
            color: #333;
            background-color: #f8c397 !important;
        }

        #tableLead tbody tr.follow_status_pending td,
        .DTFC_Cloned tbody tr.follow_status_pending td {
            color: #333;
            background-color: #ffa7a7 !important;
        }

        #tableLead tbody tr.Brochure td,
        .DTFC_Cloned tbody tr.Brochure td {
            color: #333;
            background-color: #abd8ff !important;
        }


    .table a {
        text-decoration: underline;
    }

    .expired {
        color: red;
    }
    /*#tableLead tbody tr td {
        min-width: 80px;
    }*/
</style>
<style>
    .delegateItem {
        padding: 20px;
        border: 1px solid #e2e2e2;
    }

    .color_status {
        cursor: default;
        display: inline-block;
        width: 15px;
        height: 15px;
        border: 1px solid #c3c3c3;
        border-radius: 50%;
        margin-top: 7px;
    }
</style>

<section>
    <div class="section-header">
        <h2>
            <span class="text-primary"><i class="fa fa-fw fa-phone"></i> @ViewBag.Title</span>
            @Html.Bootstrap().ActionLinkButton("Back to Dashboard", "Index", "Home").PrependIcon("md md-arrow-back").Class("")
        </h2>
    </div>
    <div class="row">
        <div class="col-md-12">
            <div class="card  card-underline">
                <div class="card-body">
                    <table class="table" id="tableLead">
                        <thead>
                            <tr>
                                <th>Approved Date</th>
                                <th>Country</th>
                                <th style="width: 150px">Company</th>
                                <th style="width: 150px">Job Title</th>
                                <th>Direct Line/Mobile</th>
                                <th style="width: 150px">Sales</th>
                                <th>Salutation</th>
                                <th>First Name</th>
                                <th>Last Name</th>
                                <th>Mobile Phone1</th>
                                <th>Mobile Phone2</th>
                                <th>Mobile Phone3</th>
                                <th>Work Email</th>
                                <th>Personal Email</th>
                                <th>New Topics</th>
                                <th>New Locations</th>
                                <th>New Dates</th>
                                <th>New Training Type</th>
                                <th>Estimated Delegate</th>
                                <th>Training Budget</th>
                                <th>Good Training Month</th>
                                <th>First Follow Up Status</th>
                                <th>Final Status</th>
                                <th>&nbsp;</th>
                            </tr>
                        </thead>
                    </table>
                    <div class="row">
                        <table>
                            <tr>
                                <td colspan="14"><b>First Follow Up Status</b></td>
                            </tr>
                            <tr>
                                <td><span class="color_status" style="background: #fff;">&nbsp;</span></td>
                                <td>&nbsp;Neutral</td>
                                <td style="width: 20px"></td>
                                <td><span class="color_status" style="background: #bdd192;">&nbsp;</span></td>
                                <td>&nbsp;Rejected</td>
                                <td style="width: 20px"></td>
                                <td><span class="color_status" style="background: #f8c397;">&nbsp;</span></td>
                                <td>&nbsp;Interest</td>
                                <td style="width: 20px"></td>
                                <td><span class="color_status" style="background: #ffa7a7;">&nbsp;</span></td>
                                <td>&nbsp;Pending</td>
                                <td style="width: 20px"></td>
                                <td><span class="color_status" style="background: #abd8ff;">&nbsp;</span></td>
                                <td>&nbsp;Request Brochure</td>
                            </tr>
                        </table>
                    </div>
                </div><!--end .card-body -->
            </div><!--end .card -->
        </div>
    </div>
</section>

@Html.Script(
    @<script>
         var windowW = $(window).width();
         var windowH = $(window).height();
         var fixedColumn = 0;
         var sizeLenght = 50;

         var tableLead = $("#tableLead");
         tableLead.dataTable({
             "processing": true, // for show progress bar
             "serverSide": true, // for process server side
             "filter": true, // this is for disable filter (search box)
             "orderMulti": false, // for disable multiple column at once
             "stateSave": false,
             "ajax": {
                 "global": false,
                 "url": "@Url.Action("AjaxGetAssignedNewEvents")",
                 "type": "POST",
                 "datatype": "json",
                 "data": function(d) {
                 }
             },
             "columns": [
                 { "data": "AssignDate", "name": "AssignDate", "orderable": true },
                 { "data": "Country", "name": "Country", "orderable": true },
                 { "data": "Company", "name": "Company", "orderable": true },
                 { "data": "JobTitle", "name": "JobTitle", "orderable": true },
                 { "data": "DirectLine", "name": "DirectLine", "orderable": true },
                 { "data": "Sales", "name": "Sales", "orderable": true },
                 { "data": "Salutation", "name": "Salutation", "orderable": true },
                 { "data": "FirstName", "name": "FirstName", "orderable": true },
                 { "data": "LastName", "name": "LastName", "orderable": true },
                 { "data": "MobilePhone1", "name": "MobilePhone1", "orderable": true },
                 { "data": "MobilePhone2", "name": "MobilePhone2", "orderable": true },
                 { "data": "MobilePhone3", "name": "MobilePhone3", "orderable": true },
                 { "data": "WorkEmail", "name": "WorkEmail", "orderable": true },
                 { "data": "PersonalEmail", "name": "PersonalEmail", "orderable": true },
                 { "data": "NewTopics", "name": "NewTopics", "orderable": true },
                 { "data": "NewLocations", "name": "NewLocations", "orderable": true },
                 { "data": "NewDates", "name": "NewDates", "orderable": true },
                 { "data": "NewTrainingTypeDisplay", "name": "NewTrainingTypeDisplay", "orderable": true },
                 { "data": "EstimatedDelegateNumber", "name": "EstimatedDelegateNumber", "orderable": true },
                 { "data": "TrainingBudgetPerHead", "name": "TrainingBudgetPerHead", "orderable": true },
                 { "data": "GoodTrainingMonth", "name": "GoodTrainingMonth", "orderable": true },
                 { "data": "FirstFollowUpStatus", "name": "FirstFollowUpStatus", "orderable": true },
                 { "data": "FinalStatus", "name": "FinalStatus", "orderable": true },
                 { "data": "ID", "name": "ID", "orderable": false },
             ],
             "aLengthMenu": [[25, 50, 100, 200, 500, 1000, 2000], [25, 50, 100,200, 500, 1000, 2000]],
             "iDisplayLength": sizeLenght,
             "aaSorting": [[0, "desc"]],
             "fnRowCallback": function (nRow, aData, iDisplayIndex, iDisplayIndexFull) {
                 $(nRow).find('td:eq(0)').html('<a href="@Url.Action("Detail")?id=' +
                     aData["ID"] +
                     '&back=Assigned">' +
                     aData["AssignDate"] +
                     '</a>');
                 $(nRow).find('td:eq(2)').html('<p title="' + aData["Company"] + '" class="truncate">' + aData["Company"] + '</p>');
                 $(nRow).find('td:eq(3)').html('<p title="' + aData["JobTitle"] + '" class="truncate">' + aData["JobTitle"] + '</p>');
                 $(nRow).find('td:eq(5)').html('<p title="' + aData["Sales"] + '" class="truncate100">' + aData["Sales"] + '</p>');
                 $(nRow).find('td:eq(14)').html('<p title="' + aData["NewTopics"] + '" class="truncate">' + aData["NewTopics"] + '</p>');
                 $(nRow).find('td:eq(15)').html('<p title="' + aData["NewLocations"] + '" class="truncate">' + aData["NewLocations"] + '</p>');

                 var htmlAction = '<span style="white-space: nowrap;"><a href="@Url.Action("Detail")?id=' +
                 aData["ID"] +
                     '&back=Assigned"><span class=" text-default" style="white-space: nowrap;" title="View Detail"><i class="fa fa-eye"></i><span></a> ';
                 if ('@CurrentUser.HasPermission("NewEvent", "Edit")' == 'True') {
                     htmlAction += ' | <a class="simple-ajax-popup-align-top" href="@Url.Action("Edit")?id=' +
                         aData["ID"] + '" title="Edit"><i class="fa fa-pencil-square-o text-primary"></i></a>';
                 }
                 if ('@CurrentUser.HasPermission("NewEvent", "DeleteAssigned")' == 'True') {
                     htmlAction += ' | <a data-action="delete" data-id="' +
                         aData["ID"] +
                         '" href="#" title="Delete"><i class="fa fa-times text-danger "></i></a>';
                 }
                 htmlAction += '</span>';
                 $(nRow).find('td:eq(23)').html(htmlAction);
                 $(nRow).addClass(aData["BrochureClass"]);
                 $(nRow).addClass("follow_status_" + aData["FirstFollowUpStatusClass"]);
             },
             initComplete: function () {
                 var _table = this;
                 _table.parent().find('input[type="search"]').unbind();
                 var timeOutTyping;
                 _table.parent().find('input[type="search"]').bind('keyup', function (e) {
                     clearTimeout(timeOutTyping);
                     timeOutTyping = setTimeout(function () {
                         _table.fnFilter(_table.parent().find('input[type="search"]').eq(0).val());
                     }, 600);
                 });
             },
             scrollY: false,
             scrollX: true,
             "bScrollCollapse": false,
             "drawCallback": function (settings, json) {
                 FixedTable();
             },
         });
         function FixedTable() {
             if (fixedColumn < 3) {
                 fixedColumn ++;
                 var fixColumn = new $.fn.dataTable.FixedColumns(tableLead, {
                     leftColumns: 5,
                     sHeightMatch: "auto",
                     rightColumns: 1
                 });
                 var $leftWrappers = $(".DTFC_ScrollWrapper").find(".DTFC_LeftWrapper");
                 if ($leftWrappers.length > 1) {
                     $leftWrappers[1].parentNode.removeChild($leftWrappers[1]);
                 }
                 var $rightWrappers = $(".DTFC_ScrollWrapper").find(".DTFC_RightWrapper");
                 if ($rightWrappers.length > 1) {
                     $rightWrappers[1].parentNode.removeChild($rightWrappers[1]);
                 }
             }
         }
         $(document).on("click", ".paginate_button", function () {
             fixedColumn = 0;
         });
         $(document).on("change", "select[name=table_length]", function () {
             fixedColumn = 0;
         });

         $(document).on('click', '[data-action="delete"]', function (e) {
             e.preventDefault();
             var $self = $(this);
             bootbox.confirm("@Resource.ConfirmDelete", function (isOK) {
                 if (isOK) {
                     var id = $self.data('id');
                     $.ajax({
                         url: '@Url.Action("DeleteAssigned")?id=' + id,
                         type: 'POST',
                         success: function (data) {
                             if (data == "") {
                                 toastr.success("Delete successful");
                                 tableLead.fnDeleteRow($self.closest('tr')[0]);
                             } else {
                                 toastr.error(data);
                             }
                         }
                     });
                 }
             });

         });

         $(document).on('click', '.btnDelete', function (e) {
             e.preventDefault();
             var $sefl = $(this);
             bootbox.confirm("@Resource.ConfirmDelete", function (isOK) {
                 if (isOK) {
                     $("#dvLoading").show();
                     $.ajax({
                         url: '@Url.Action("Delete")?id=' + $sefl.data('id'),
                         type: 'POST',
                         success: function (data) {
                             if (data == "") {
                                 toastr.success("Delete successful");
                                 tableLead.fnDeleteRow($sefl.closest('tr')[0]);
                             } else {
                                 toastr.error(data);
                             }
                         },
                         error: function () {
                             toastr.error("Delete failed");
                         }
                     });
                 }
             });
         });
    </script>
                         )

@Html.Script(
    @<script>

         $(document).on('click', '#request_close', function (e) {
             e.preventDefault();
             $.magnificPopup.close();
         });

         $(document).on('click', '#request_submit', function (e) {
             e.preventDefault();
             var formdata = new FormData();
             formdata.append("id", $("#request_id").val());
             formdata.append("requestType", $("#request_Type").val());
             var getfile = $('#request-attachment')[0];
             if (getfile) {
                 for (var i = 0; i < getfile.files.length; i++) {
                     if (getfile.files[i].name) {
                         formdata.append("AttachmentFile", getfile.files[i]);
                     }
                 }
             }
             $.ajax({
                 url: '@Url.Action("RequestBrochure")',
                 data: formdata,
                 contentType: false,
                 processData: false,
                 async: false,
                 type: 'POST',
                 success: function (data) {
                     if (data == "") {
                         toastr.success("Submit successful");
                         location.reload();
                     } else {
                         toastr.error(data);
                     }
                 },
                 error: function () {
                     toastr.error("Submit failed");
                 }
             });
         });

    </script>)


@Html.Script(
    @<script>

         function onFailEdit() {
             toastr.error('@Resource.SaveError');
         }
         function onSuccessEdit(data) {
             if (data.Code == 0) {
                 if (data.Message)
                     toastr.error(data.Message);
                 else
                     toastr.error('@Resource.SaveFailed');
             } else {
                 if (data.Code == 1) {
                     toastr.success('@Resource.UpdateSuccessful');
                     $.magnificPopup.close();
                     fixedColumn = 0;
                     tableLead.fnFilter('');
                 }
             }
         }
    </script>)
