@using PQT.Domain.Enum
@using Resources
@model PQT.Web.Models.InvoiceModel
<style>
    .nowrap {
        white-space: nowrap;
    }

    #calltable tbody tr {
        cursor: pointer;
    }

        #calltable tbody tr:hover {
            background-color: #f2f2f2;
        }
</style>
@Html.HiddenFor(m=>m.Invoice.BookingID)
    <div class="card-body">
        <div class="card card-underline">
            <div class="card-head">
                <header>Attention to</header>
            </div>
            <div class="card-body text-default-light">
                <div class="form-group">
                    @Html.Bootstrap().TextBoxFor(m => m.Booking.AuthoriserName).Disabled().Class("form-control text-capitalize").HtmlAttributes(new { required = "required" }).ShowValidationMessage(true)
                    @Html.Bootstrap().LabelFor(m => m.Booking.AuthoriserName).LabelText("Authoriser Name")
                </div>
                <div class="form-group">
                    @Html.Bootstrap().TextBoxFor(m => m.Booking.Company.CompanyName).Class("form-control").Disabled().ShowValidationMessage(true)
                    @Html.Bootstrap().LabelFor(m => m.Booking.CompanyID).ShowRequiredStar(false).LabelText("Company Name")
                </div>
                <div class="form-group">
                    @Html.Bootstrap().TextBoxFor(m => m.Booking.Address).Class("form-control").Disabled().ShowValidationMessage(true)
                    @Html.Bootstrap().LabelFor(m => m.Booking.Address).LabelText("Company Address")
                </div>
            </div>
        </div>
        <div class="card card-underline">
            <div class="card-head">
                <header>Invoice Info</header>
            </div>
            <div class="card-body text-default-light">
                <div class="col-sm-4">
                    <div class="form-group ">
                        @Html.Bootstrap().TextBoxFor(m => m.Invoice.InvoiceNo).Class("form-control").Disabled().ShowValidationMessage(true)
                        @Html.Bootstrap().LabelFor(m => m.Invoice.InvoiceNo).ShowRequiredStar(false)
                    </div>
                </div>
                <div class="col-sm-4">
                    <div class="form-group ">
                        @Html.Bootstrap().TextBoxFor(m => m.Invoice.InvoiceDateStr).Class("form-control").Disabled().ShowValidationMessage(true)
                        @Html.Bootstrap().LabelFor(m => m.Invoice.InvoiceDate).ShowRequiredStar(false)
                    </div>
                </div>
                <div class="col-sm-4">
                    <div class="form-group ">
                        @Html.Bootstrap().TextBoxFor(m => m.Booking.BookingDateStr).Class("form-control").Disabled().ShowValidationMessage(true)
                        @Html.Bootstrap().LabelFor(m => m.Booking.BookingDate).ShowRequiredStar(false)
                    </div>
                </div>
                <div class="col-sm-4">
                    <div class="form-group ">
                        @Html.Bootstrap().TextBoxFor(m => m.Booking.DelegateNumber).Class("form-control").Disabled().ShowValidationMessage(true)
                        @Html.Bootstrap().LabelFor(m => m.Booking.DelegateNumber).LabelText("Attendee(s)").ShowRequiredStar(false)
                    </div>
                </div>
                <div class="col-sm-4">
                    <div class="form-group ">
                        @Html.Bootstrap().TextBoxFor(m => m.Booking.Event.EventName).Class("form-control").Disabled().ShowValidationMessage(true)
                        @Html.Bootstrap().LabelFor(m => m.Booking.Event.EventName).LabelText("Program").ShowRequiredStar(false)
                    </div>
                </div>
                <div class="col-sm-4">
                    <div class="form-group ">
                        @Html.Bootstrap().TextBoxFor(m => m.Booking.Event.EventDate).Class("form-control").Disabled().ShowValidationMessage(true)
                        @Html.Bootstrap().LabelFor(m => m.Booking.Event.EndDate).LabelText("Date").ShowRequiredStar(false)
                    </div>
                </div>
                <div class="col-sm-4">
                    <div class="form-group ">
                        @Html.Bootstrap().TextBoxFor(m => m.Booking.Event.HotelVenue).Class("form-control").Disabled().ShowValidationMessage(true)
                        @Html.Bootstrap().LabelFor(m => m.Booking.Event.HotelVenue).LabelText("Venue")
                    </div>
                </div>
                <div class="col-sm-4">
                    <div class="form-group">
                        @Html.Bootstrap().DropDownListFor(m => m.Invoice.Currency, EnumerationHelper.ToSelectList<SalaryCurrency>()).OptionLabel("").Class("form-control").HtmlAttributes(new { required = "required" }).ShowValidationMessage(true)
                        @Html.Bootstrap().LabelFor(m => m.Invoice.Currency).ShowRequiredStar(true)
                    </div>
                </div>
                <div class="col-sm-4">
                    <div class="form-group ">
                        @Html.Bootstrap().TextBoxFor(m => m.Invoice.AdminCharge).Class("form-control").ShowValidationMessage(true)
                        @Html.Bootstrap().LabelFor(m => m.Invoice.AdminCharge)
                    </div>
                </div>
                <div class="col-sm-4">
                    <div class="form-group">
                        @Html.Bootstrap().TextBoxFor(m => m.Invoice.TotalAmount).Class("form-control").ShowValidationMessage(true)
                        @Html.Bootstrap().LabelFor(m => m.Invoice.TotalAmount)
                    </div>
                </div>
                <div class="col-sm-4">
                    <div class="form-group">
                        @Html.Bootstrap().DropDownListFor(m => m.Invoice.BankAccountID, Model.BankAccounts.Where(m => m.ID == Model.Invoice.BankAccountID).ToSelectList(m => m.ID, m => m.BankNameDescription)).Class("form-control").HtmlAttributes(new { required = "required" }).ShowValidationMessage(true)
                        @Html.Bootstrap().LabelFor(m => m.Invoice.BankAccountID).LabelText("Bank Account").ShowRequiredStar(true)
                    </div>
                </div>
                <div class="col-sm-4">
                    <div class="form-group ">
                        @Html.Bootstrap().TextAreaFor(m => m.Invoice.Remarks).Class("form-control").ShowValidationMessage(true)
                        @Html.Bootstrap().LabelFor(m => m.Invoice.Remarks)
                    </div>
                </div>
            </div>
        </div>
        <div class="card card-underline">
            <div class="card-head">
                <header>Delegates</header>
            </div>
            <div class="card-body">
                <div class="row">
                    <table class="table no-margin">
                        <thead>
                            <tr>
                                <th>S/No</th>
                                <th>Full Name</th>
                                <th>Job Title</th>
                            </tr>
                        </thead>
                        <tbody>
                            @{
                                foreach (var phonecall in Model.Booking.Delegates)
                                {
                                    <tr>
                                        <td>@phonecall.Order</td>
                                        <td>@phonecall.FullName</td>
                                        <td>@phonecall.JobTitle</td>
                                    </tr>
                                }
                            }
                        </tbody>
                    </table>
                </div>
            </div><!--end .card-body -->
        </div>
    </div>
    @Html.Script(
    @<script>
        var bankAccounts = @Html.Serialize(Model.BankAccounts);
        var $bankAccount = $('@Html.JquerySelectorFor(m=>m.Invoice.BankAccountID)');
        $('@Html.JquerySelectorFor(m=>m.Invoice.Currency)').on('change',
            function() {
                var val = $(this).val();
                $bankAccount.empty();
                $bankAccount.append('<option value=""></option>');
                for (var i = 0; i < bankAccounts.length; i++) {
                    if (bankAccounts[i].CurrencyCode == val) {
                        $bankAccount.append('<option value="' + bankAccounts[i].ID + '">' + bankAccounts[i].BankNameDescription +'</option>');
                    }
                }
                $bankAccount.val('').trigger("change");
            });
    </script>)