@using PQT.Domain.Enum
@model PQT.Web.Models.BookingModel

<div class="card card-underline" style="background: white; margin: auto; max-width: 1000px; position: relative;">
    <div class="card-head">
        <header><b>Controls</b></header>
    </div>
    <div class="form">
        <div class="card-body">
            <div class="card card-underline">
                <div class="card-head">
                    <header>Sessions</header>
                </div>
                <div class="card-body text-default-light">
                    <div class="row">
                        <div class="col-sm-12">
                            @foreach (var session in Model.Booking.EventSessions)
                            {
                                <div class="col-sm-4">
                                    <div class="row">
                                        <div class="col-sm-12">
                                            <b>@session.SessionTitle (@session.StartDate.ToString("dd MMM") - @session.EndDate.ToString("dd MMM"))</b>
                                        </div>
                                    </div>
                                    <div class="row">
                                        <div class="col-sm-12">
                                            @session.ShortDescription
                                        </div>
                                    </div>
                                    <div class="row">
                                        <div class="col-sm-12">
                                            @session.Address
                                        </div>
                                    </div>
                                </div>
                            }
                        </div>
                    </div>
                </div>
            </div>
            <div class=" col-sm-6">
                <div class="card card-underline">
                    <div class="card-head">
                        <header>Company Info</header>
                    </div>
                    <div class="card-body text-default-light">
                        <div class="form-group">
                            @Html.Bootstrap().TextBoxFor(m => m.Booking.Company.CompanyName).Disabled().Class("form-control").ShowValidationMessage(true)
                            <label>Company</label>
                        </div>
                        <div class="form-group">
                            @Html.Bootstrap().TextBoxFor(m => m.Booking.Address).Disabled().Class("form-control").ShowValidationMessage(true)
                            @Html.Bootstrap().LabelFor(m => m.Booking.Address)
                        </div>
                        <div class="form-group">
                            @Html.Bootstrap().TextBoxFor(m => m.Booking.Tel).Disabled().Class("form-control").ShowValidationMessage(true)
                            @Html.Bootstrap().LabelFor(m => m.Booking.Tel)
                        </div>
                        <div class="form-group">
                            @Html.Bootstrap().TextBoxFor(m => m.Booking.Fax).Disabled().Class("form-control").ShowValidationMessage(true)
                            @Html.Bootstrap().LabelFor(m => m.Booking.Fax)
                        </div>

                    </div>
                </div>
            </div>
            <div class=" col-sm-6">
                <div class="card card-underline">
                    <div class="card-head">
                        <header>Sender</header>
                    </div>
                    <div class="card-body text-default-light">
                        <div class="form-group">
                            @Html.Bootstrap().TextBoxFor(m => m.Booking.SenderName).Disabled().Class("form-control").ShowValidationMessage(true)
                            @Html.Bootstrap().LabelFor(m => m.Booking.SenderName).LabelText("Sender")
                        </div>
                        <div class="form-group">
                            @Html.Bootstrap().TextBoxFor(m => m.Booking.SenderDestination).Disabled().Class("form-control").ShowValidationMessage(true)
                            @Html.Bootstrap().LabelFor(m => m.Booking.SenderDestination).LabelText("Destination")
                        </div>
                        <div class="form-group">
                            @Html.Bootstrap().TextBoxFor(m => m.Booking.SenderTel).Disabled().Class("form-control").ShowValidationMessage(true)
                            @Html.Bootstrap().LabelFor(m => m.Booking.SenderTel).LabelText("Tel")
                        </div>
                        <div class="form-group">
                            @Html.Bootstrap().TextBoxFor(m => m.Booking.SenderMail).Disabled().Class("form-control").ShowValidationMessage(true)
                            @Html.Bootstrap().LabelFor(m => m.Booking.SenderMail).LabelText("Mail")
                        </div>
                    </div>
                </div>
            </div>
            <div class=" col-sm-6">
                <div class="card card-underline">
                    <div class="card-head">
                        <header>Authorisation</header>
                    </div>
                    <div class="card-body text-default-light">
                        <div class="form-group">
                            @Html.Bootstrap().TextBoxFor(m => m.Booking.AuthoriserName).Disabled().Class("form-control").ShowValidationMessage(true)
                            @Html.Bootstrap().LabelFor(m => m.Booking.AuthoriserName).LabelText("Authoriser")
                        </div>
                        <div class="form-group">
                            @Html.Bootstrap().TextBoxFor(m => m.Booking.AuthoriserDestination).Disabled().Class("form-control").ShowValidationMessage(true)
                            @Html.Bootstrap().LabelFor(m => m.Booking.AuthoriserDestination).LabelText("Destination")
                        </div>
                        <div class="form-group">
                            @Html.Bootstrap().TextBoxFor(m => m.Booking.AuthoriserTel).Disabled().Class("form-control").ShowValidationMessage(true)
                            @Html.Bootstrap().LabelFor(m => m.Booking.AuthoriserTel).LabelText("Tel")
                        </div>
                        <div class="form-group">
                            @Html.Bootstrap().TextBoxFor(m => m.Booking.AuthoriserMail).Disabled().Class("form-control").ShowValidationMessage(true)
                            @Html.Bootstrap().LabelFor(m => m.Booking.AuthoriserMail).LabelText("Mail")
                        </div>
                    </div>
                </div>
            </div>
            <div class=" col-sm-6">
                <div class="card card-underline">
                    <div class="card-head">
                        <header>Price</header>
                    </div>
                    <div class="card-body text-default-light">
                        <div class="form-group">
                            @Html.Bootstrap().TextBoxFor(m => m.Booking.FeePerDelegate).Disabled().Class("form-control").ShowValidationMessage(true)
                            @Html.Bootstrap().LabelFor(m => m.Booking.FeePerDelegate)
                        </div>
                        <div class="form-group">
                            @Html.Bootstrap().TextBoxFor(m => m.Booking.DiscountPercent).Disabled().Class("form-control").ShowValidationMessage(true)
                            @Html.Bootstrap().LabelFor(m => m.Booking.DiscountPercent)
                        </div>
                        <div class="form-group">
                            @Html.Bootstrap().TextBoxFor(m => m.Booking.TotalWrittenRevenue).Disabled().Class("form-control").ShowValidationMessage(true)
                            @Html.Bootstrap().LabelFor(m => m.Booking.TotalWrittenRevenue)
                        </div>
                        <div class="form-group">
                            @Html.Bootstrap().TextBoxFor(m => m.Booking.TotalPaidRevenue).Disabled().Class("form-control").ShowValidationMessage(true)
                            @Html.Bootstrap().LabelFor(m => m.Booking.TotalPaidRevenue)
                        </div>
                        <div class="form-group">
                            @Html.Bootstrap().TextAreaFor(m => m.Booking.Remarks).Disabled().Class("form-control").ShowValidationMessage(true)
                            @Html.Bootstrap().LabelFor(m => m.Booking.Remarks)
                        </div>
                    </div>
                </div>
            </div>

            <div class=" col-sm-12">
                <div class="form-group">
                    @if (!string.IsNullOrEmpty(Model.Booking.Attachment))
                    {
                        @Html.Bootstrap().Link(Model.Booking.Attachment, FileUpload.GetfolderPath(FileUploadType.Booking) + Model.Booking.Attachment).Class("form-control").HtmlAttributes(new { target = "_blank" })
                    }
                    @Html.Bootstrap().LabelFor(m => m.Booking.Attachment)
                </div>
            </div>
        </div><!--end .card-body -->
        <div class="card-actionbar">
            <div class="card-actionbar-row">
                <a href="@Url.Action("Detail", new { id = @Model.Booking.ID, leadId = @Model.Booking.LeadID, eventId = @Model.Booking.EventID })" class="btn btn-default"><i class="fa fa-eye"></i> Detail</a>
                @if (Model.Booking.BookingStatusRecord.Status != BookingStatus.Deleted)
                {
                    if (CurrentUser.HasPermission("Booking", "Edit"))
                    {
                        @Html.Bootstrap().ActionLinkButton("Edit", "Edit").RouteValues(new { id = Model.Booking.ID, leadId = Model.Booking.LeadID }).Class("btn-primary").PrependIcon("md md-edit")
                    }
                }
                @if (Model.Booking.BookingStatusRecord.Status == BookingStatus.Initial)
                {
                    if (CurrentUser.HasPermission("Booking", "ApproveBooking"))
                    {
                        @Html.Bootstrap().ActionLinkButton("Approve", "ApproveBooking").RouteValues(new { id = Model.Booking.ID }).Class("btnApprove btn-success").PrependIcon("md md-done")
                    }
                }
                @if (Model.Booking.BookingStatusRecord.Status == BookingStatus.Initial)
                {
                    if (CurrentUser.HasPermission("Booking", "RejectBooking"))
                    {
                        @Html.Bootstrap().ActionLinkButton("Reject", "RejectBooking").RouteValues(new { id = Model.Booking.ID }).Class("simple-ajax-popup-align-top btn-warning").PrependIcon("md md-warning")
                    }
                }
                @if (Model.Booking.BookingStatusRecord.Status == BookingStatus.Initial || Model.Booking.BookingStatusRecord.Status == LeadStatus.Reject)
                {
                    if (CurrentUser.HasPermission("Booking", "Delete"))
                    {
                        <a href="#" class="btn btn-danger btnDelete" data-id="@Model.Booking.ID"><i class="md md-delete"></i> Delete</a>
                    }
                }
            </div>
        </div>
    </div>
</div><!--end .card -->