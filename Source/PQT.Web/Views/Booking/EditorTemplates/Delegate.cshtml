@using PQT.Domain.Enum
@model PQT.Domain.Entities.Delegate

@using (Html.BeginCollectionItem())
{
    <div class="delegateItem col-sm-12 delegateItem_@(Model.ID)" data-id="@Model.ID">
        <div style="border: 1px solid #e1e1e1; padding: 10px; padding-bottom: 5px;">
            @Html.HiddenFor(m => m.ID)
            @Html.HiddenFor(m => m.LeadID)
            @Html.HiddenFor(m => m.BookingID)
            @Html.HiddenFor(m => m.OverallFeedbacks)
            @Html.HiddenFor(m => m.OpTopicsInterested)
            @Html.HiddenFor(m => m.OpLocationsInterested)
            @Html.HiddenFor(m => m.OpGoodTrainingMonth)
            @Html.HiddenFor(m => m.AttendanceStatus)
            <div class="row">
                <div class="col-sm-1">
                    <div class="form-group">
                        @Html.Bootstrap().TextBoxFor(m => m.Order).Class("form-control").Readonly().ShowValidationMessage(true)
                        @Html.Bootstrap().LabelFor(m => m.Order).LabelText("S/No")
                    </div>
                </div>
                <div class="col-sm-5 no_advisedlater @(Model.ToBeAdvisedLater?"hide":"")">
                    <div class="col-sm-2">
                        <div class="form-group">
                            @Html.Bootstrap().DropDownListFor(m => m.Salutation, EnumerationHelper.ToSelectList<NameTitle>()).Class("form-control").Readonly().ShowValidationMessage(true)
                            @Html.Bootstrap().LabelFor(m => m.Salutation)
                        </div>
                    </div>
                    <div class="col-sm-5">
                        <div class="form-group">
                            @Html.Bootstrap().TextBoxFor(m => m.FirstName).Class("form-control text-capitalize").Readonly().ShowValidationMessage(true)
                            @Html.Bootstrap().LabelFor(m => m.FirstName)
                        </div>
                    </div>
                    <div class="col-sm-5">
                        <div class="form-group">
                            @Html.Bootstrap().TextBoxFor(m => m.LastName).Class("form-control text-capitalize").Readonly().ShowValidationMessage(true)
                            @Html.Bootstrap().LabelFor(m => m.LastName)
                        </div>
                    </div>
                </div>
                <div class="col-sm-2 no_advisedlater @(Model.ToBeAdvisedLater?"hide":"")">
                    <div class="form-group">
                        @Html.Bootstrap().TextBoxFor(m => m.DirectLine).Class("form-control").Readonly().ShowValidationMessage(true)
                        @Html.Bootstrap().LabelFor(m => m.DirectLine)
                    </div>
                </div>
                <div class="col-sm-2 no_advisedlater @(Model.ToBeAdvisedLater?"hide":"")">
                    <div class="form-group">
                        @Html.Bootstrap().TextBoxFor(m => m.MobilePhone1).Class("form-control").Readonly().ShowValidationMessage(true)
                        @Html.Bootstrap().LabelFor(m => m.MobilePhone1)
                    </div>
                </div>
                <div class="col-sm-2 no_advisedlater @(Model.ToBeAdvisedLater?"hide":"")">
                    <div class="form-group">
                        @Html.Bootstrap().TextBoxFor(m => m.MobilePhone2).Class("form-control").Readonly().ShowValidationMessage(true)
                        @Html.Bootstrap().LabelFor(m => m.MobilePhone2)
                    </div>
                </div>
                <div class="col-sm-8 advisedlater @(Model.ToBeAdvisedLater?"":"hide")">
                    <div class="form-group">
                        <div class="checkbox checkbox-styled">
                            <label>
                                <input type="checkbox" class="cbx-sign" id="@Html.IdFor(m => m.ToBeAdvisedLater)" name="@Html.NameFor(m => m.ToBeAdvisedLater)" value="@(Model.ToBeAdvisedLater ? "true" : "false")" @(Model.ToBeAdvisedLater ? "checked" : "")>
                                <span>To Be Advised Later</span>
                            </label>
                        </div>
                    </div>
                </div>
                <div class="col-sm-2 advisedlater @(Model.ToBeAdvisedLater?"":"hide")">
                    <a onclick="return sub.remove(this);" data-action="remove" class="btn btn-danger btn-flat"><i class="md md-delete"></i> Remove</a>
                    <br />
                    @if (Model.ToBeAdvisedLater)
                    {
                        @Html.Bootstrap().Button().Text("Update").HtmlAttributes(new { @class = "btn_update_delegate" }).Size(ButtonSize.Mini).Style(ButtonStyle.Primary).PrependIcon("md md-done")
                    }
                </div>
            </div>
            <div class="row no_advisedlater @(Model.ToBeAdvisedLater?"hide":"")">
                <div class="col-sm-2">
                    <div class="form-group">
                        @Html.Bootstrap().TextBoxFor(m => m.MobilePhone3).Class("form-control").Readonly().ShowValidationMessage(true)
                        @Html.Bootstrap().LabelFor(m => m.MobilePhone3)
                    </div>
                </div>
                <div class="col-sm-4">
                    <div class="form-group">
                        @Html.Bootstrap().TextBoxFor(m => m.JobTitle).Class("form-control text-capitalize").Readonly().ShowValidationMessage(true)
                        @Html.Bootstrap().LabelFor(m => m.JobTitle)
                    </div>
                </div>
                <div class="col-sm-2">
                    <div class="form-group">
                        @Html.Bootstrap().TextBoxFor(m => m.WorkEmail).Class("form-control").Readonly().ShowValidationMessage(true)
                        @Html.Bootstrap().LabelFor(m => m.WorkEmail)
                    </div>
                </div>
                <div class="col-sm-2">
                    <div class="form-group">
                        @Html.Bootstrap().TextBoxFor(m => m.PersonalEmail).Class("form-control").Readonly().ShowValidationMessage(true)
                        @Html.Bootstrap().LabelFor(m => m.PersonalEmail)
                    </div>
                </div>
                <div class="col-sm-2">
                    <a onclick="return sub.remove(this);" data-action="remove" class="btn btn-danger btn-flat"><i class="md md-delete"></i> Remove</a>
                    <br />
                    @if (Model.ToBeAdvisedLater)
                    {
                        @Html.Bootstrap().Button().Text("Update").HtmlAttributes(new { @class = "btn_update_delegate" }).Size(ButtonSize.Mini).Style(ButtonStyle.Primary).PrependIcon("md md-done")
                    }
                </div>
            </div>
        </div>
    </div>
}