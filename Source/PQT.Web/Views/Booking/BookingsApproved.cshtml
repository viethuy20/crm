@using PQT.Domain.Enum
@using Resources
@model PQT.Web.Models.BookingViewModel

@{
    ViewBag.Title = "Approved Bookings";
}

<section>
    <div class="row">
        <div class="col-md-12">
            <div class="card  card-underline">
                <div class="card-head">
                    <header><i class="fa fa-database"></i> @ViewBag.Title</header>
                </div>
                <div class="card-body">
                    <div class="row form">
                        <div class="col-sm-6">
                            <div class="form-group">
                                @Html.Bootstrap().DropDownListFor(m => m.EventID, Model.Events.ToSelectList(m => m.ID, m => m.EventName)).HtmlAttributes(new { @class = "select-ajax form-control" })
                                <label>Event</label>
                            </div>
                        </div>
                        <div class="col-sm-6">
                            <div class="form-group">
                                <div class="input-daterange input-group">
                                    <div class="input-group-content">
                                        @Html.DatePickerRangeFor(m => m.DateFrom, new { @class = "input-clear form-control" })
                                        @Html.Bootstrap().LabelFor(m => m.DateFrom).LabelText("Date of Booking")
                                    </div>
                                    <span class="input-group-addon">to</span>
                                    <div class="input-group-content">
                                        @Html.DatePickerRangeFor(m => m.DateTo, new { @class = "input-clear form-control" })
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-offset-4">
                            @Html.Bootstrap().Button().Text("Clear").Id("btnClear").PrependIcon("md md-close").Size(ButtonSize.Mini).HtmlAttributes(new { @class = "btn btn-default" })
                            @Html.Bootstrap().Button().Text("Search").Id("btnSearch").PrependIcon("md md-search").Size(ButtonSize.Mini).HtmlAttributes(new { @class = "btn btn-primary" })
                        </div>
                    </div>
                    <div class="table-responsive">
                        <table class="table" id="bookingsTable">
                            <thead>
                                <tr>
                                    <th>Date of Booking</th>
                                    <th>Country</th>
                                    <th>Company Name</th>
                                    <th>Event Code</th>
                                    <th>Event Name</th>
                                    <th>Total Written Revenue</th>
                                    <th>Total Paid Revenue</th>
                                    <th>Payment Status</th>
                                </tr>
                            </thead>
                        </table>
                    </div>
                </div><!--end .card-body -->
            </div><!--end .card -->
        </div>
    </div>
</section>


@Html.Script(

    @<script>
         var bookingsTable = $("#bookingsTable");
        bookingsTable.dataTable({
             "processing": true, // for show progress bar
             "serverSide": true, // for process server side
             "filter": true, // this is for disable filter (search box)
             "orderMulti": false, // for disable multiple column at once
             "stateSave": false,
             "ajax": {
                 "url": "@Url.Action("AjaxGetBookingsApproved")",
                 "type": "POST",
                 "datatype": "json",
                 "data": function (d) {
                     d.DateFrom = $('@Html.JquerySelectorFor(m=>m.DateFrom)').val();
                     d.DateTo = $('@Html.JquerySelectorFor(m=>m.DateTo)').val();
                     d.EventID = $('@Html.JquerySelectorFor(m=>m.EventID)').val();
                 }
             },
             "columns": [
                 { "data": "CreatedTime", "name": "CreatedTime", "orderable": true },
                 { "data": "Country", "name": "Country", "orderable": true },
                 { "data": "CompanyName", "name": "CompanyName", "orderable": true },
                 { "data": "EventCode", "name": "EventCode", "orderable": true },
                 { "data": "EventName", "name": "EventName", "orderable": true },
                 { "data": "TotalWrittenRevenue", "name": "TotalWrittenRevenue", "orderable": true },
                 { "data": "TotalPaidRevenue", "name": "TotalPaidRevenue", "orderable": true },
                 { "data": "PaymentStatus", "name": "PaymentStatus", "orderable": true },
             ],
             "iDisplayLength": 50,
             "aaSorting": [[0, "desc"]],
             "fnRowCallback": function (nRow, aData, iDisplayIndex, iDisplayIndexFull) {
                 $(nRow).find('td:eq(0)').html('<a href="@Url.Action("Detail")/' +
                     aData["ID"] +
                     '">' +
                     aData["CreatedTime"] +
                     '</a>');
                 $(nRow).find('td:eq(0)').css('text-align', "center");
                 $(nRow).find('td:eq(2)').html('<a href="@Url.Action("Detail")/' +
                     aData["ID"] + '">' + aData["CompanyName"] + '</a>');
                 $(nRow).find('td:eq(3)').css('text-align', "center");
                 $(nRow).find('td:eq(5)').css('text-align', "center");
                 $(nRow).find('td:eq(6)').css('text-align', "center");
                 $(nRow).find('td:eq(7)').css('text-align', "center");
             },
             initComplete: function () {
                 var _table = this;
                 _table.parent().find('input[type="search"]').unbind();
                 var timeOutTyping;
                 _table.parent().find('input[type="search"]').bind('keyup', function (e) {
                     clearTimeout(timeOutTyping);
                     timeOutTyping = setTimeout(function () {
                         _table.fnFilter(_table.parent().find('input[type="search"]').eq(0).val());
                     }, 600);
                 });
             },
         });

         $('#btnSearch').click(function () {
             bookingsTable.fnFilter('');
         });

         $('#btnClear').click(function () {
             $(".input-clear ").val('');
             $('@Html.JquerySelectorFor(m=>m.EventID)').val('').trigger("change");
             bookingsTable.fnFilter('');
         });

         initAjaxDropdown($('@Html.JquerySelectorFor(m=>m.EventID)'), "@Url.Action("GetPossibleEvent", "Event")", "Search for Event");

    </script>

)
