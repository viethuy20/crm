@using PQT.Domain.Abstract
@using PQT.Domain.Enum
@using PQT.Web.Infrastructure
@model PQT.Web.Models.EditUserModel
@{
    var unitService = DependencyHelper.GetService<IUnitRepository>();
    var officeLocations = unitService.GetAllOfficeLocations();
    var countries = unitService.GetAllCountries().Select(m => m.Name);
}
<div class="card card-underline">
    <div class="card-head">
        <header>Basic Info</header>
    </div>
    <div class="card-body text-default-light">

        <div class="row">
            <div class="col-sm-6">
                <div class="form-group">
                    @Html.Bootstrap().TextBoxFor(m => m.DisplayName).HtmlAttributes(new { required = "required" }).Class("form-control text-capitalize").ShowValidationMessage(true)
                    @Html.Bootstrap().LabelFor(m => m.DisplayName).LabelText("Display Name").ShowRequiredStar(true)
                </div>
            </div>
            <div class="col-sm-6">
                <div class="form-group">
                    @Html.Bootstrap().TextBoxFor(m => m.FirstName).Class("form-control text-capitalize").ShowValidationMessage(true)
                    @Html.Bootstrap().LabelFor(m => m.FirstName).ShowRequiredStar(true)
                </div>
            </div>
            <div class="col-sm-6">
                <div class="form-group">
                    @Html.Bootstrap().TextBoxFor(m => m.LastName).Class("form-control text-capitalize").ShowValidationMessage(true)
                    @Html.Bootstrap().LabelFor(m => m.LastName).ShowRequiredStar(true)
                </div>
            </div>
            <div class="col-sm-6">
                <div class="form-group">
                    @Html.Bootstrap().TextBoxFor(m => m.Email).HtmlAttributes(new { required = "required" }).Class("form-control text-lowercase").ShowValidationMessage(true)
                    @Html.Bootstrap().LabelFor(m => m.Email).LabelText("Email").ShowRequiredStar(true)
                </div>
            </div>
            <div class="col-sm-6">
                <div class="form-group">
                    @Html.Bootstrap().TextBoxFor(m => m.Password).HtmlAttributes(new { required = "required" }).Class("form-control").ShowValidationMessage(true)
                    @Html.Bootstrap().LabelFor(m => m.Password).LabelText("Password").ShowRequiredStar(true)
                </div>
            </div>
            <div class="col-sm-6">
                <div class="form-group">
                    @Html.Bootstrap().TextBoxFor(m => m.BusinessPhone).Class("form-control").ShowValidationMessage(true)
                    @Html.Bootstrap().LabelFor(m => m.BusinessPhone)
                </div>
            </div>
            <div class="col-sm-6">
                <div class="form-group">
                    @Html.Bootstrap().TextBoxFor(m => m.MobilePhone).Class("form-control").ShowValidationMessage(true)
                    @Html.Bootstrap().LabelFor(m => m.MobilePhone)
                </div>
            </div>
            <div class="col-sm-6">
                <div class="form-group">
                    @Html.Bootstrap().TextBoxFor(m => m.PersonalEmail).Class("form-control text-lowercase").ShowValidationMessage(true)
                    @Html.Bootstrap().LabelFor(m => m.PersonalEmail)
                </div>
            </div>
            <div class="col-sm-6">
                <div class="form-group">
                    @Html.Bootstrap().TextBoxFor(m => m.PassportID).Class("form-control").ShowValidationMessage(true)
                    @Html.Bootstrap().LabelFor(m => m.PassportID).LabelText("Passport/ID")
                </div>
            </div>
            <div class="col-sm-6">
                <div class="form-group">
                    @Html.DatePickerFor(m => m.DateOfBirth, new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.DateOfBirth)
                    @Html.Bootstrap().LabelFor(m => m.DateOfBirth)
                </div>
            </div>
            <div class="col-sm-6">
                <div class="form-group">
                    @Html.Bootstrap().DropDownListFor(m => m.Nationality, countries.ToSelectList(m => m, m => m)).OptionLabel("").Class("form-control").ShowValidationMessage(true)
                    @Html.Bootstrap().LabelFor(m => m.Nationality)
                </div>
            </div>
            <div class="col-sm-6">
                <div class="form-group">
                    @Html.Bootstrap().DropDownListFor(m => m.OfficeLocationID, officeLocations.ToSelectList(m => m.ID, m => m.Name)).Class("form-control").OptionLabel("").ShowValidationMessage(true)
                    @Html.Bootstrap().LabelFor(m => m.OfficeLocationID).LabelText("Office Location")
                </div>
            </div>
            @if (Model.Candidate != null)
            {
                <div class=" col-sm-12">
                    <div class="form-group">
                        @if (!string.IsNullOrEmpty(Model.Candidate.Resume))
                        {
                            @Html.Bootstrap().Link(Model.Candidate.Resume, FileUpload.GetImageUrl(FileUploadType.Recruitment, Model.Candidate.Resume)).Class("form-control").HtmlAttributes(new { target = "_blank" })
                        }
                        @Html.Bootstrap().LabelFor(m => m.Candidate.Resume)
                    </div>
                </div>
            }
        </div>
    </div>
</div>
<div class="card card-underline">
    <div class="card-head">
        <header>Department Info</header>
    </div>
    <div class="card-body text-default-light">
        <div class="row">
            <div class="col-sm-12">
                <div class="form-group">
                    <label class="col-sm-3 control-label">Department</label>
                    <div class="col-sm-12">
                        <div class="form-group">
                            @foreach (var role in Model.Roles)
                            {
                                <div class="col-sm-3">
                                    <div class="checkbox checkbox-styled">
                                        <label>
                                            <input type="checkbox" name="SelectedRoles" class="cbx-role" data-rolename="@role.Name.ToLower()" value="@role.ID" @(Model.SelectedRoles.Contains(role.ID) ? "checked" : "")>
                                            <span>@role.Name</span>
                                        </label>
                                    </div>
                                </div>
                            }
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-sm-6 role-finance role-admin hide">
                <div class="form-group">
                    @Html.Bootstrap().DropDownListFor(m => m.FinanceAdminUnit, EnumerationHelper.ToSelectList<FinanceAdminUnit>()).Class("form-control").HtmlAttributes(new { required = "required" }).ShowValidationMessage(true)
                    @Html.Bootstrap().LabelFor(m => m.FinanceAdminUnit).LabelText("Finance & Admin Unit")
                </div>
            </div>
            <div class="col-sm-6 role-sales hide">
                <div class="form-group">
                    @Html.Bootstrap().DropDownListFor(m => m.BusinessDevelopmentUnit, EnumerationHelper.ToSelectList<BusinessDevelopmentUnit>()).Class("form-control").HtmlAttributes(new { required = "required" }).ShowValidationMessage(true)
                    @Html.Bootstrap().LabelFor(m => m.BusinessDevelopmentUnit)
                </div>
            </div>
            <div class="col-sm-6 role-sales hide">
                <div class="form-group">
                    @Html.Bootstrap().DropDownListFor(m => m.SalesSupervision, EnumerationHelper.ToSelectList<SalesSupervision>()).Class("form-control").HtmlAttributes(new { required = "required" }).ShowValidationMessage(true)
                    @Html.Bootstrap().LabelFor(m => m.SalesSupervision).LabelText("Sales Supervision & Planning Unit")
                </div>
            </div>
            <div class="col-sm-6 role-sales hide">
                <div class="form-group">
                    @Html.Bootstrap().DropDownListFor(m => m.SalesManagementUnit, EnumerationHelper.ToSelectList<SalesManagementUnit>()).Class("form-control").HtmlAttributes(new { required = "required" }).ShowValidationMessage(true)
                    @Html.Bootstrap().LabelFor(m => m.SalesManagementUnit)
                </div>
            </div>
            <div class="col-sm-6 role-production hide">
                <div class="form-group">
                    @Html.Bootstrap().DropDownListFor(m => m.ProductionUnit, EnumerationHelper.ToSelectList<ProductionUnit>()).Class("form-control").HtmlAttributes(new { required = "required" }).ShowValidationMessage(true)
                    @Html.Bootstrap().LabelFor(m => m.ProductionUnit)
                </div>
            </div>
            <div class="col-sm-6 role-operation hide">
                <div class="form-group">
                    @Html.Bootstrap().DropDownListFor(m => m.OperationUnit, EnumerationHelper.ToSelectList<OperationUnit>()).Class("form-control").HtmlAttributes(new { required = "required" }).ShowValidationMessage(true)
                    @Html.Bootstrap().LabelFor(m => m.OperationUnit)
                </div>
            </div>
            <div class="col-sm-6 role-hr hide">
                <div class="form-group">
                    @Html.Bootstrap().DropDownListFor(m => m.HumanResourceUnit, EnumerationHelper.ToSelectList<HumanResourceUnit>()).Class("form-control").HtmlAttributes(new { required = "required" }).ShowValidationMessage(true)
                    @Html.Bootstrap().LabelFor(m => m.HumanResourceUnit)
                </div>
            </div>
            <div class="col-sm-6 role-marketing hide">
                <div class="form-group">
                    @Html.Bootstrap().DropDownListFor(m => m.MarketingManagementUnit, EnumerationHelper.ToSelectList<MarketingManagementUnit>()).Class("form-control").HtmlAttributes(new { required = "required" }).ShowValidationMessage(true)
                    @Html.Bootstrap().LabelFor(m => m.MarketingManagementUnit)
                </div>
            </div>
            <div class="col-sm-6 role-procurement hide">
                <div class="form-group">
                    @Html.Bootstrap().DropDownListFor(m => m.ProcurementManagementUnit, EnumerationHelper.ToSelectList<ProcurementManagementUnit>()).Class("form-control").HtmlAttributes(new { required = "required" }).ShowValidationMessage(true)
                    @Html.Bootstrap().LabelFor(m => m.ProcurementManagementUnit)
                </div>
            </div>
            <div class="col-sm-6 role-manager hide">
                <div class="form-group">
                    @Html.Bootstrap().DropDownListFor(m => m.ProjectManagementUnit, EnumerationHelper.ToSelectList<ProjectManagementUnit>()).Class("form-control").HtmlAttributes(new { required = "required" }).ShowValidationMessage(true)
                    @Html.Bootstrap().LabelFor(m => m.ProjectManagementUnit)
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-sm-6">
                <div class="form-group">
                    @Html.Bootstrap().DropDownListFor(m => m.DirectSupervisorID, Model.Supervisors.ToSelectList(m => m.ID, m => m.DisplayName)).OptionLabel("").Class("form-control").ShowValidationMessage(true)
                    @Html.Bootstrap().LabelFor(m => m.DirectSupervisorID).LabelText("Direct Supervisor")
                </div>
            </div>
            <div class="col-sm-6">
                <div class="form-group">
                    @Html.Bootstrap().TextBoxFor(m => m.Extension).Class("form-control").ShowValidationMessage(true)
                    @Html.Bootstrap().LabelFor(m => m.Extension).LabelText("Extension")
                </div>
            </div>
        </div>
    </div>
</div>
<div class="card card-underline">
    <div class="card-head">
        <header>Contract Info</header>
    </div>
    <div class="card-body text-default-light">
        <div class="row">
            <div class="col-sm-6">
                <div class="form-group">
                    @Html.DatePickerFor(m => m.EmploymentDate, new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.EmploymentDate)
                    @Html.Bootstrap().LabelFor(m => m.EmploymentDate)
                </div>
            </div>
            <div class="col-sm-6">
                <div class="form-group">
                    @Html.DatePickerFor(m => m.EmploymentEndDate, new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.EmploymentEndDate)
                    @Html.Bootstrap().LabelFor(m => m.EmploymentEndDate)
                </div>
            </div>
            <div class="col-sm-6">
                <div class="form-group">
                    @Html.DatePickerFor(m => m.FirstEvaluationDate, new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.FirstEvaluationDate)
                    @Html.Bootstrap().LabelFor(m => m.FirstEvaluationDate)
                </div>
            </div>
            <div class="col-sm-6">
                <div class="form-group">
                    @Html.Bootstrap().DropDownListFor(m => m.UserStatus, EnumerationHelper.ToSelectList<UserStatus>()).Class("form-control").HtmlAttributes(new { required = "required" }).ShowValidationMessage(true)
                    @Html.Bootstrap().LabelFor(m => m.UserStatus)
                </div>
            </div>
            <div class="col-sm-6">
                <div class="form-group">
                    @Html.Bootstrap().TextBoxFor(m => m.BasicSalary).Class("form-control").ShowValidationMessage(true)
                    @Html.Bootstrap().LabelFor(m => m.BasicSalary)
                </div>
            </div>
            <div class="col-sm-6">
                <div class="form-group">
                    @Html.Bootstrap().DropDownListFor(m => m.SalaryCurrency, EnumerationHelper.ToSelectList<SalaryCurrency>()).Class("form-control").HtmlAttributes(new { required = "required" }).ShowValidationMessage(true)
                    @Html.Bootstrap().LabelFor(m => m.SalaryCurrency)
                </div>
            </div>
        </div>
    </div>
</div>

<div class="card card-underline">
    <div class="card-head">
        <header>Contracts</header>
    </div>
    <div class="card-body text-default-light" id="delegateContain" style="padding: 0px;">
        @Html.CollectionEditorFor(m => m.UserContracts)
        @Html.JqueryTemplateFor(m => m.UserContracts, "sub-tmpl")
    </div><!--end .card-body -->
    <div class="card-actionbar">
        <div class="card-actionbar-row">
            <a class="btn btn-info pull-left" id="btn_add_delegate" onclick="return sub.addNewModule();"><i class="md md-add"></i> Add New Contract</a>
        </div>
    </div>
</div>

@if (Model.Candidate != null)
{

    <div class="card card-underline">
        <div class="card-head">
            <header>Interview Summary</header>
        </div>
        <div class="card-body form">
            @if (Model.Candidate.PsSummary != null)
                {
                <div class="row">
                    <div class="col-sm-8">
                        <div class="form-group">
                            @Html.Bootstrap().TextBoxFor(m => m.Candidate.PsSummary.Remarks).Class("form-control").Disabled().ShowValidationMessage(true)
                            @Html.Bootstrap().LabelFor(m => m.Candidate.PsSummary).LabelText("PS Summary")
                        </div>
                    </div>
                    <div class="col-sm-4">
                        <div class="form-group">
                            @Html.Bootstrap().TextBoxFor(m => m.Candidate.PsSummary.DateSelectedDisplay).Class("form-control").Disabled().ShowValidationMessage(true)
                            @Html.Bootstrap().LabelFor(m => m.Candidate.PsSummary.DateSelected).LabelText("Date")
                        </div>
                    </div>
                    <div class="col-sm-4">
                        <div class="form-group">
                            @Html.Bootstrap().TextBoxFor(m => m.Candidate.PsSummary.Interviewer).Class("form-control").Disabled().ShowValidationMessage(true)
                            @Html.Bootstrap().LabelFor(m => m.Candidate.PsSummary.Interviewer)
                        </div>
                    </div>
                    <div class="col-sm-4">
                        <div class="form-group">
                            @Html.Bootstrap().TextBoxFor(m => m.Candidate.PsSummary.StatusDisplay).Class("form-control").Disabled().ShowValidationMessage(true)
                            @Html.Bootstrap().LabelFor(m => m.Candidate.PsSummary.Status)
                        </div>
                    </div>
                    <div class="col-sm-4">
                        <div class="form-group">
                            @Html.Bootstrap().TextBoxFor(m => m.Candidate.PsSummary.ReasonRejected).Class("form-control").Disabled().ShowValidationMessage(true)
                            @Html.Bootstrap().LabelFor(m => m.Candidate.PsSummary.ReasonRejected).LabelText("Reason")
                        </div>
                    </div>
                </div>
            }
            @if (Model.Candidate.OneFaceToFaceSummary != null)
                {
                <div class="row">
                    <div class="col-sm-8">
                        <div class="form-group">
                            @Html.Bootstrap().TextBoxFor(m => m.Candidate.OneFaceToFaceSummary.Remarks).Class("form-control").Disabled().ShowValidationMessage(true)
                            @Html.Bootstrap().LabelFor(m => m.Candidate.OneFaceToFaceSummary).LabelText("1F2F Summary")
                        </div>
                    </div>
                    <div class="col-sm-4">
                        <div class="form-group">
                            @Html.Bootstrap().TextBoxFor(m => m.Candidate.OneFaceToFaceSummary.DateSelectedDisplay).Class("form-control").Disabled().ShowValidationMessage(true)
                            @Html.Bootstrap().LabelFor(m => m.Candidate.OneFaceToFaceSummary.DateSelected).LabelText("Date")
                        </div>
                    </div>
                    <div class="col-sm-4">
                        <div class="form-group">
                            @Html.Bootstrap().TextBoxFor(m => m.Candidate.OneFaceToFaceSummary.Interviewer).Class("form-control").Disabled().ShowValidationMessage(true)
                            @Html.Bootstrap().LabelFor(m => m.Candidate.OneFaceToFaceSummary.Interviewer)
                        </div>
                    </div>
                    <div class="col-sm-4">
                        <div class="form-group">
                            @Html.Bootstrap().TextBoxFor(m => m.Candidate.OneFaceToFaceSummary.StatusDisplay).Class("form-control").Disabled().ShowValidationMessage(true)
                            @Html.Bootstrap().LabelFor(m => m.Candidate.OneFaceToFaceSummary.Status)
                        </div>
                    </div>
                    <div class="col-sm-4">
                        <div class="form-group">
                            @Html.Bootstrap().TextBoxFor(m => m.Candidate.OneFaceToFaceSummary.ReasonRejected).Class("form-control").Disabled().ShowValidationMessage(true)
                            @Html.Bootstrap().LabelFor(m => m.Candidate.OneFaceToFaceSummary.ReasonRejected).LabelText("Reason")
                        </div>
                    </div>
                </div>
            }
            @if (Model.Candidate.TwoFaceToFaceSummary != null)
                {
                <div class="row">
                    <div class="col-sm-8">
                        <div class="form-group">
                            @Html.Bootstrap().TextBoxFor(m => m.Candidate.TwoFaceToFaceSummary.Remarks).Class("form-control").Disabled().ShowValidationMessage(true)
                            @Html.Bootstrap().LabelFor(m => m.Candidate.TwoFaceToFaceSummary).LabelText("2F2F Summary")
                        </div>
                    </div>
                    <div class="col-sm-4">
                        <div class="form-group">
                            @Html.Bootstrap().TextBoxFor(m => m.Candidate.TwoFaceToFaceSummary.DateSelectedDisplay).Class("form-control").Disabled().ShowValidationMessage(true)
                            @Html.Bootstrap().LabelFor(m => m.Candidate.TwoFaceToFaceSummary.DateSelected).LabelText("Date")
                        </div>
                    </div>
                    <div class="col-sm-4">
                        <div class="form-group">
                            @Html.Bootstrap().TextBoxFor(m => m.Candidate.TwoFaceToFaceSummary.Interviewer).Class("form-control").Disabled().ShowValidationMessage(true)
                            @Html.Bootstrap().LabelFor(m => m.Candidate.TwoFaceToFaceSummary.Interviewer)
                        </div>
                    </div>
                    <div class="col-sm-4">
                        <div class="form-group">
                            @Html.Bootstrap().TextBoxFor(m => m.Candidate.TwoFaceToFaceSummary.StatusDisplay).Class("form-control").Disabled().ShowValidationMessage(true)
                            @Html.Bootstrap().LabelFor(m => m.Candidate.TwoFaceToFaceSummary.Status)
                        </div>
                    </div>
                    <div class="col-sm-4">
                        <div class="form-group">
                            @Html.Bootstrap().TextBoxFor(m => m.Candidate.TwoFaceToFaceSummary.ReasonRejected).Class("form-control").Disabled().ShowValidationMessage(true)
                            @Html.Bootstrap().LabelFor(m => m.Candidate.TwoFaceToFaceSummary.ReasonRejected).LabelText("Reason")
                        </div>
                    </div>
                </div>
            }
        </div><!--end .card-body -->
    </div>
}

@Html.Script(
    @<script>
        var sub = {
            addNewModule: function () {
                this._addNew('#sub-tmpl');
                return false;
            },

            _addNew: function (templateID) {
                $(templateID).tmpl({ index: this._generateGuid() }).appendTo('#delegateContain');
                ReValidateForm();
                OrderAllDelegate();
                initDatepicker();
            },
            remove: function (sender) {
                $(sender).closest('.delegateItem').remove();
                OrderAllDelegate();
            },

            _generateGuid: function () {
                // Source: http://stackoverflow.com/questions/105034/how-to-create-a-guid-uuid-in-javascript/105074#105074
                return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {
                    var r = Math.random() * 16 | 0, v = c == 'x' ? r : (r & 0x3 | 0x8);
                    return v.toString(16);
                });
            }
        };


        function OrderAllDelegate() {
            var allOrderElements =
                $("#delegateContain").find("input[id*='Order']");
            allOrderElements.each(function (index, item) {
                $(item).val(index + 1);
            });
        }
        $(".cbx-role").on('click', function (e) {
            var rolename = $(this).data("rolename");
            if (this.checked) {
                $(".role-" + rolename).removeClass('hide');
            } else {
                $(".role-" + rolename).addClass('hide');
                var ddl = $(".role-" + rolename).find("select");
                ddl.val('0').trigger("change");
            }
        });
        var cbxs = $('.cbx-role');
        $.each(cbxs, function (index, rowId) {
            // Create a hidden element
            var rolename = $(cbxs[index]).data("rolename");
            if (cbxs[index].checked) {
                $(".role-" + rolename).removeClass('hide');
            }
        });
    </script>)
