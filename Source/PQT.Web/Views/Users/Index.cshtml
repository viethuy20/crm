@using NS.Mvc.Helpers
@using PQT.Domain.Entities
@using Resources
@model IEnumerable<User>


@{
    var roles = ViewBag.roles;
    ViewBag.Title = Resource.Users;
    var count = 0;
}
<style>
    .table td,
    .table th {
        white-space: nowrap !important;
    }

    .DTFC_Cloned tbody tr.resigned td {
        color: #3c763d;
        background-color: #b3efb6 !important;
    }

    #users-table tbody tr.resigned td {
        color: #3c763d;
        background-color: #c7fcca !important;
    }

    .DTFC_Cloned tbody tr.terminated td {
        color: #31708f;
        background-color: #b5d7f1 !important;
    }

    #users-table tbody tr.terminated td {
        color: #31708f;
        background-color: #c8e4fa !important;
    }
    .user-picture-small {
        width: 35px;
        margin-top: -10px;
        margin-bottom: -10px;
    }
</style>
<section>
    <div class="section-header">
        <h2 class="text-primary">@ViewBag.Title</h2>
    </div>

    <div class="form-group row">
        @if (CurrentUser.HasPermission("Users", "Create"))
        {
            <div class="col-sm-6">
                @Html.Bootstrap().ActionLinkButton(Resource.AddNew, "Create").PrependIcon("md md-add").HtmlAttributes(new { @class = "btn btn-primary" })
            </div>
        }
        <div class="col-sm-4 pull-right">
            @Html.Bootstrap().DropDownList("Role", new SelectList(roles, "ID", "Name")).Class("form-control").OptionLabel("SELECT ROLE").Id("role")
        </div>
    </div>
    <div class="card">
        <div class="card-body">
            <table id="users-table" class="table">
                <thead>
                    <tr>
                        <th>Id</th>
                        <th>@Resource.Name</th>
                        <th>User Status</th>
                        <th>Date Of Birth</th>
                        <th>Company Email</th>
                        <th>Personal Email</th>
                        <th>Business Phone</th>
                        <th>Mobile Phone</th>
                        <th>Extension</th>
                        <th>Department</th>
                        <th>Line Supervisor</th>
                        <th></th>
                        <th></th>
                    </tr>
                </thead>
            </table>
        </div>
    </div>
</section>

@Html.Script(
    @<script>
        var fixedColumn = 0;
         var $modelTable = $('#users-table').dataTable({
             "processing": true, // for show progress bar
             "serverSide": true, // for process server side
             "filter": true, // this is for disable filter (search box)
             "orderMulti": false, // for disable multiple column at once
             //"stateSave": true,
             //"fixedHeader": true,
             "ajax": {
                 "url": "@Url.Action("AjaxGetIndexView")",
                 "type": "POST",
                 "datatype": "json",
                 "data": function(d) {
                     d.RoleID = $("#role").val();
                 }
             },
             "columns": [
                 { "data": "ID", "name": "ID", "orderable": false },
                 { "data": "DisplayNameHtml", "name": "DisplayName", "orderable": true },
                 { "data": "UserStatus", "name": "UserStatus", "orderable": true },
                 { "data": "DateOfBirth", "name": "DateOfBirth", "orderable": true },
                 { "data": "Email", "name": "Email", "orderable": true },
                 { "data": "PersonalEmail", "name": "PersonalEmail", "orderable": true },
                 { "data": "BusinessPhone", "name": "BusinessPhone", "orderable": true },
                 { "data": "MobilePhone", "name": "MobilePhone", "orderable": true },
                 { "data": "Extension", "name": "Extension", "orderable": true },
                 { "data": "RolesHtml", "name": "RolesHtml", "orderable": true },
                 { "data": "DirectSupervisor", "name": "DirectSupervisor", "orderable": true },
                 { "data": "ID", "name": "ID", "orderable": false },
                 { "data": "ID", "name": "ID", "orderable": false }
             ],
             "aLengthMenu": [[25, 50, 100, 200, 500], [25, 50, 100,200, 500]],
             "iDisplayLength": 25,
             "aaSorting": [[0, "asc"]],
             "fnRowCallback": function (nRow, aData, iDisplayIndex, iDisplayIndexFull) {
                 $(nRow).addClass(aData["UserStatus"].toLowerCase());
                 $(nRow).find('td:eq(11)').html('<a href="@Url.Action("Index", "Audit")?Username=' +
                     aData["Username"] +
                     '" >@Resource.Logviewer</a>');
                 $(nRow).find('td:eq(12)').html('<a href="@Url.Action("Edit")/' +
                     aData["ID"] +
                     '" class="active" data-toggle="class"><i class="fa fa-pencil-square-o text-violet text-active"></i></a> | <a data-action="delete" data-id="' +
                     aData["ID"] +
                     '" href="#"><i class="fa fa-times text-danger "></i></a>');
             },
             initComplete: function() {
                 var _table = this;
                 _table.parent().find('input[type="search"]').unbind();
                 var timeOutTyping;
                 _table.parent().find('input[type="search"]').bind('keyup',
                     function(e) {
                         clearTimeout(timeOutTyping);
                         timeOutTyping = setTimeout(function() {
                                 _table.fnFilter(_table.parent().find('input[type="search"]').eq(0).val());
                             },
                             600);
                     });
             },
             scrollY: false,
             scrollX: true,
             "bScrollCollapse": false,
             "drawCallback": function (settings, json) {
                 FixedTable();
             },
         });

        function FixedTable() {
            if (fixedColumn < 4) {
                fixedColumn++;
                var fixColumn = new $.fn.dataTable.FixedColumns($modelTable, {
                    leftColumns: 5,
                    sHeightMatch: "auto",
                    rightColumns: 1
                });
                var $leftWrappers = $(".DTFC_ScrollWrapper").find(".DTFC_LeftWrapper");
                if ($leftWrappers.length > 1) {
                    $leftWrappers[1].parentNode.removeChild($leftWrappers[1]);
                }
                var $rightWrappers = $(".DTFC_ScrollWrapper").find(".DTFC_RightWrapper");
                if ($rightWrappers.length > 1) {
                    $rightWrappers[1].parentNode.removeChild($rightWrappers[1]);
                }
            }
        }
        $(document).on("click", ".paginate_button", function () {
            fixedColumn = 0;
        });
        $(document).on("change", "select[name=table_length]", function () {
            fixedColumn = 0;
        });
        $(document).on('click', '[data-action="delete"]', function (e) {
            e.preventDefault();
            var $self = $(this);
            bootbox.confirm("@Resource.ConfirmDelete", function (isOK) {
                if (isOK) {
                    var id = $self.data('id');
                    var index = $self.closest('tbody').find('tr').index($self.closest('tr'));
                    $.ajax({
                        url: '@Url.Action("Delete_keeptrack", "Users")/' + id,
                        type: 'POST',
                        success: function () {
                            $modelTable.fnDeleteRow(index);
                            //window.location.reload();
                        }
                    });
                }
            });

        });

        $("#role").change(function () {
            fixedColumn = 0;
            $modelTable.fnFilter('');
        });

    </script>
             )
