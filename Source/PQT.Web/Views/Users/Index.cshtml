@using NS.Mvc.Helpers
@using PQT.Domain.Entities
@using Resources
@model IEnumerable<User>


@{
    var roles = ViewBag.roles;
    ViewBag.Title = Resource.Users;
    var count = 0;
}
<section>
    <div class="section-header">
        <h2 class="text-primary">@ViewBag.Title</h2>
    </div>

    <div class="form-group row">
        @if (CurrentUser.HasPermission("Users", "Create"))
        {
            <div class="col-sm-6">
                @Html.Bootstrap().ActionLinkButton(Resource.AddNew, "Create").PrependIcon("md md-add").HtmlAttributes(new { @class = "btn btn-primary" })
            </div>
        }
        <div class="col-sm-4 pull-right">
            @Html.Bootstrap().DropDownList("Role", new SelectList(roles, "ID", "Name")).Class("form-control").OptionLabel("SELECT ROLE").Id("role")
        </div>
    </div>
    <div class="card">
        <div class="card-body">
            <div class="table-responsive">
                <table id="users-table" class="table">
                    <thead>
                        <tr>
                            <th>Id</th>
                            <th>@Resource.Name</th>
                            <th>@Resource.Email</th>
                            <th>Business Phone</th>
                            <th>Mobile Phone</th>
                            <th>Extension</th>
                            <th>Department</th>
                            <th></th>
                            <th></th>
                            <th></th>
                        </tr>
                    </thead>
                </table>
            </div>
        </div>
    </div>
</section>

@Html.Script(
    @<script>

         var $modelTable = $('#users-table').dataTable({
             "processing": true, // for show progress bar
             "serverSide": true, // for process server side
             "filter": true, // this is for disable filter (search box)
             "orderMulti": false, // for disable multiple column at once
             //"stateSave": true,
             //"fixedHeader": true,
             "ajax": {
                 "url": "@Url.Action("AjaxGetIndexView")",
                 "type": "POST",
                 "datatype": "json",
                 "data": function(d) {
                     d.RoleID = $("#role").val();
                 }
             },
             "columns": [
                 { "data": "ID", "name": "ID", "orderable": false },
                 { "data": "DisplayNameHtml", "name": "DisplayName", "orderable": true },
                 { "data": "Email", "name": "Email", "orderable": true },
                 { "data": "BusinessPhone", "name": "BusinessPhone", "orderable": true },
                 { "data": "MobilePhone", "name": "MobilePhone", "orderable": true },
                 { "data": "Extension", "name": "Extension", "orderable": true },
                 { "data": "RolesHtml", "name": "RolesHtml", "orderable": true },
                 { "data": "ID", "name": "ID", "orderable": false },
                 { "data": "ID", "name": "ID", "orderable": false },
                 { "data": "ID", "name": "ID", "orderable": false }
             ],
             "iDisplayLength": 25,
             "aaSorting": [[0, "asc"]],
             "fnRowCallback": function(nRow, aData, iDisplayIndex, iDisplayIndexFull) {
                 $(nRow).find('td:eq(7)').html('<a href="@Url.Action("Index", "Audit")?Username=' +
                     aData["Username"] +
                     '" >@Resource.Logviewer</a>');
                 $(nRow).find('td:eq(8)').html('<a href="@Url.Action("Edit")/' +
                     aData["ID"] +
                     '" class="active" data-toggle="class"><i class="fa fa-pencil-square-o text-violet text-active"></i></a>');
                 $(nRow).find('td:eq(9)').html('<a data-action="delete" data-id="' +
                     aData["ID"] +
                     '" href="#"><i class="fa fa-times text-danger "></i></a>');
             },
             initComplete: function() {
                 var _table = this;
                 _table.parent().find('input[type="search"]').unbind();
                 var timeOutTyping;
                 _table.parent().find('input[type="search"]').bind('keyup',
                     function(e) {
                         clearTimeout(timeOutTyping);
                         timeOutTyping = setTimeout(function() {
                                 _table.fnFilter(_table.parent().find('input[type="search"]').eq(0).val());
                             },
                             600);
                     });
             },
         });

        $(document).on('click', '[data-action="delete"]', function (e) {
            e.preventDefault();
            var $self = $(this);
            bootbox.confirm("@Resource.ConfirmDelete", function (isOK) {
                if (isOK) {
                    var id = $self.data('id');
                    var index = $self.closest('tbody').find('tr').index($self.closest('tr'));
                    $.ajax({
                        url: '@Url.Action("Delete_keeptrack", "Users")/' + id,
                        type: 'POST',
                        success: function () {
                            $modelTable.fnDeleteRow(index);
                            //window.location.reload();
                        }
                    });
                }
            });

        });

        $("#role").change(function () {
            $modelTable.fnFilter('');
        });

    </script>
             )
