@using PQT.Domain.Entities
@using PQT.Domain.Enum
@using PQT.Web.Models
@using Resources
@model PQT.Web.Models.EditUserModel
@{
    ViewBag.Title = Resource.EditUser;
}
<section>
    <div class="section-header">
        <h2 class="text-primary">@ViewBag.Title</h2>
    </div>
    <div class="card">
        <div class="card-body">
            @using (Html.BeginForm("Edit", "Users", FormMethod.Post, new { @class = "form form-validate floating-label", enctype = "multipart/form-data" }))
            {
                @Html.HiddenFor(m => m.ID)
                <div class="form-group">
                    @Html.Bootstrap().TextBoxFor(m => m.Email).Class("form-control").ShowValidationMessage(true)
                    @Html.Bootstrap().LabelFor(m => m.Email).LabelText("Email").ShowRequiredStar(true)
                </div>
                <div class="form-group">
                    @Html.Bootstrap().TextBoxFor(m => m.DisplayName).Class("form-control").ShowValidationMessage(true)
                    @Html.Bootstrap().LabelFor(m => m.DisplayName).LabelText("Display Name").ShowRequiredStar(true)
                </div>
                <div class="form-group">
                    @Html.Bootstrap().PasswordFor(m => m.Password).Class("form-control").ShowValidationMessage(true)
                    @Html.Bootstrap().LabelFor(m => m.Password).LabelText("Password")
                </div>
                <div class="form-group">
                    @Html.Bootstrap().PasswordFor(m => m.ConfirmPassword).Class("form-control").ShowValidationMessage(true)
                    @Html.Bootstrap().LabelFor(m => m.ConfirmPassword).LabelText("Retype password")
                </div>
                <div class="form-group">
                    @Html.Bootstrap().TextBoxFor(m => m.BusinessPhone).Class("form-control").ShowValidationMessage(true)
                    @Html.Bootstrap().LabelFor(m => m.BusinessPhone).LabelText("Business Phone")
                </div>
                <div class="form-group">
                    @Html.Bootstrap().TextBoxFor(m => m.MobilePhone).Class("form-control").ShowValidationMessage(true)
                    @Html.Bootstrap().LabelFor(m => m.MobilePhone).LabelText("Mobile Phone")
                </div>
                <div class="form-group">
                    <div id="profilePicture">
                        @if (Model.UserPicture != null)
                        {
                            <img style="width: 120px;height:120px;border-radius: 60px;" src="@Model.AvatarUrl" class="img-polaroid user-picture-preview" />
                        }
                        else
                        {
                            <img style="width: 120px;height: 120px;border-radius: 60px;" src="~/Content/img/profile.png" class="img-polaroid user-picture-preview" />
                        }
                    </div>
                </div>
                <div class="form-group">
                    @Html.Bootstrap().FileFor(m => m.Picture).ShowValidationMessage(false)
                </div>
                <div class="form-group row">
                    <label class="col-sm-3 control-label">Roles</label>
                    <div class="col-sm-9">
                        @foreach (var role in Model.Roles)
                        {
                            <div class="checkbox checkbox-styled">
                                <label>
                                    <input type="checkbox" name="SelectedRoles" value="@role.ID" @(Model.UserRoles.Select(m => m.ID).Contains(role.ID) ? "checked" : "")>
                                    <span>@role.Name</span>
                                </label>
                            </div>
                        }
                    </div>
                </div>
                <div class="form-group  col-md-offset-2">
                    @Html.Bootstrap().ActionLinkButton(Resource.ButtonBackToList, "Index").PrependIcon("md md-arrow-back")
                    @Html.Bootstrap().SubmitButton().Id("submitbutton").Class("btn btn-primary-me").Text(Resource.Save).PrependIcon("md md-done").Style(ButtonStyle.Success)
                </div>
            }
        </div>
    </div>
</section>
@Html.Script(
    @<script>

        $(document).on('change', 'input[type="File"]', function () {
            var upload = $(this);

            var indicator = upload.next('.selected');
            if (indicator.length == 0) {
                indicator = $('<span class="selected"></span>').insertAfter(upload);
            }

            if (upload.val() == '') {
                indicator.html('');
            } else if (window.FileReader) {
                var reader = new FileReader();
                reader.onload = function (e) {
                    if (upload[0].files[0].size > 2000000) {
                        $.sticky("@Resource.FileToLarge", { type: 'st-danger' });
                        upload.replaceWith(upload = upload.clone(true));
                    } else {
                        $('#profilePicture').html("<img style='width: 120px;height:120px;border-radius: 60px;' src='" + e.target.result + "' class='img-polaroid user-picture-preview'/>");
                    }
                };
                reader.readAsDataURL(upload[0].files[0]);
            } else {
                indicator.html("Selected");
            }
        });

        $("#submitbutton").on('click', function (e) {
            e.preventDefault();
            bootbox.confirm("@Resource.ConfirmSave", function (isOK) {
                if (isOK) {
                    $('#submitbutton').parents("form").submit();
                }
            });
        });

    </script>
                        )