@using PQT.Domain.Enum
@model PQT.Domain.Entities.Lead
@{
    var eventClosed = Model.Event != null && (Model.Event.IsEventEnd || Model.Event.EndDate.Date < DateTime.Today) ? true : false;
    var daysExpired = Settings.Lead.NumberDaysExpired();
}

<div class="card card-underline" style="background: white; margin: auto; max-width: 950px; position: relative;">
    <div class="card-head">
        <header><b>Controls</b></header>
    </div><!--end .card-head -->
    <div class="form">
        <div class="card-body">
            <div class="row">
                <div class="col-sm-6">
                    <div class="form-group">
                        @Html.Bootstrap().TextBoxFor(m => m.CompanyName).Class("form-control").Disabled().ShowValidationMessage(true)
                        @Html.Bootstrap().LabelFor(m => m.CompanyName)
                    </div>
                    <div class="form-group">
                        @Html.Bootstrap().TextBoxFor(m => m.LineExtension).Class("form-control").Disabled().ShowValidationMessage(true)
                        @Html.Bootstrap().LabelFor(m => m.LineExtension)
                    </div>
                </div>
                <div class="col-sm-6">
                    <div class="form-group">
                        @Html.Bootstrap().TextBoxFor(m => m.JobTitle).Class("form-control").Disabled().ShowValidationMessage(true)
                        @Html.Bootstrap().LabelFor(m => m.JobTitle)
                    </div>
                    <div class="form-group">
                        @Html.Bootstrap().TextBoxFor(m => m.DirectLine).Class("form-control").Disabled().ShowValidationMessage(true)
                        @Html.Bootstrap().LabelFor(m => m.DirectLine)
                    </div>
                </div>
                <div class="col-sm-2">
                    <div class="form-group">
                        @Html.Bootstrap().TextBoxFor(m => m.Salutation).Class("form-control").Disabled().ShowValidationMessage(true)
                        @Html.Bootstrap().LabelFor(m => m.Salutation)
                    </div>
                </div>
                <div class="col-sm-5">
                    <div class="form-group">
                        @Html.Bootstrap().TextBoxFor(m => m.FirstName).Class("form-control").Disabled().ShowValidationMessage(true)
                        @Html.Bootstrap().LabelFor(m => m.FirstName)
                    </div>
                </div>
                <div class="col-sm-5">
                    <div class="form-group">
                        @Html.Bootstrap().TextBoxFor(m => m.LastName).Class("form-control").Disabled().ShowValidationMessage(true)
                        @Html.Bootstrap().LabelFor(m => m.LastName)
                    </div>
                </div>
                <div class="col-sm-4">
                    <div class="form-group">
                        @Html.Bootstrap().TextBoxFor(m => m.MobilePhone1).Class("form-control").Disabled().ShowValidationMessage(true)
                        @Html.Bootstrap().LabelFor(m => m.MobilePhone1)
                    </div>
                </div>
                <div class="col-sm-4">
                    <div class="form-group">
                        @Html.Bootstrap().TextBoxFor(m => m.MobilePhone2).Class("form-control").Disabled().ShowValidationMessage(true)
                        @Html.Bootstrap().LabelFor(m => m.MobilePhone2)
                    </div>
                </div>
                <div class="col-sm-4">
                    <div class="form-group">
                        @Html.Bootstrap().TextBoxFor(m => m.MobilePhone3).Class("form-control").Disabled().ShowValidationMessage(true)
                        @Html.Bootstrap().LabelFor(m => m.MobilePhone3)
                    </div>
                </div>
                <div class="col-sm-4">
                    <div class="form-group">
                        @Html.Bootstrap().TextBoxFor(m => m.WorkEmail).Class("form-control").Disabled().ShowValidationMessage(true)
                        @Html.Bootstrap().LabelFor(m => m.WorkEmail)
                    </div>
                </div>
                <div class="col-sm-4">
                    <div class="form-group">
                        @Html.Bootstrap().TextBoxFor(m => m.WorkEmail1).Class("form-control").Disabled().ShowValidationMessage(true)
                        @Html.Bootstrap().LabelFor(m => m.WorkEmail1)
                    </div>
                </div>
                <div class="col-sm-4">
                    <div class="form-group">
                        @Html.Bootstrap().TextBoxFor(m => m.PersonalEmail).Class("form-control").Disabled().ShowValidationMessage(true)
                        @Html.Bootstrap().LabelFor(m => m.PersonalEmail)
                    </div>
                </div>
            </div>
        </div><!--end .card-body -->
        <div class="card-actionbar">
            <div class="card-actionbar-row">
                <a href="@Url.Action("Detail")?id=@Model.ID&eventId=@Model.EventID" class="btn btn-default"><i class="fa fa-eye"></i> Detail</a>
                @if (!eventClosed && Model.LeadStatusRecord != LeadStatus.Booked)
                {
                    if (CurrentUser.HasPermission("Lead", "CallingForm"))
                    {
                        @Html.Bootstrap().ActionLinkButton("Edit", "CallingForm").RouteValues(new { id = Model.ID }).Class("btn-primary").PrependIcon("md md-edit")
                    }
                }
                @if (!eventClosed && CurrentUser.HasPermission("Lead", "RequestAction") && (Model.LeadStatusRecord == LeadStatus.Initial ||
                                Model.LeadStatusRecord == LeadStatus.Reject || Model.CheckNCLExpired(daysExpired)))
                {
                    <a href="#" data-id="@Model.ID" class="btn btn-info btnRequestNCL"><i class="md md-phone-locked"></i> Request To NCL</a>
                }
                @if (!eventClosed && CurrentUser.HasPermission("Lead", "RequestAction") && (Model.LeadStatusRecord == LeadStatus.Initial ||
                                Model.LeadStatusRecord == LeadStatus.Reject ||
                                Model.LeadStatusRecord == LeadStatus.RequestNCL ||
                                Model.LeadStatusRecord == LeadStatus.Live || Model.CheckNCLExpired(daysExpired)))
                {
                    @Html.Bootstrap().ActionLinkButton("Request To LOI", "RequestAction").RouteValues(new { id = Model.ID, requestType = LeadStatus.RequestLOI }).Class("simple-ajax-popup-align-top btn-info").PrependIcon("md md-mail")
                }
                @if (!eventClosed && (Model.Booking == null || (Model.Booking != null && Model.LeadStatusRecord != LeadStatus.Reject)) && CurrentUser.HasPermission("Lead", "RequestAction") && (Model.LeadStatusRecord != LeadStatus.RequestBook &&
                                Model.LeadStatusRecord != LeadStatus.Booked))
                {
                    @*@Html.Bootstrap().ActionLinkButton("Request To Book", "CreateBooking").RouteValues(new { id = Model.ID }).Class("simple-ajax-popup-align-top btn-success").PrependIcon("md md-my-library-books")*@
                    @Html.Bootstrap().ActionLinkButton("Request Booking", "Create", "Booking").RouteValues(new { id = Model.ID }).Class("btn-success").PrependIcon("md md-my-library-books")
                }
                @if (!eventClosed && Model.Booking != null && (Model.LeadStatusRecord == LeadStatus.RequestBook || Model.LeadStatusRecord == LeadStatus.Reject))
                {
                    if (CurrentUser.HasPermission("Booking", "Edit"))
                    {
                        @Html.Bootstrap().ActionLinkButton("Edit Request Booking", "Edit", "Booking").RouteValues(new { id = Model.Booking.ID, leadId = Model.ID }).Class("btn-primary").PrependIcon("md md-edit")
                    }
                }
                @if (!eventClosed && CurrentUser.HasPermission("Lead", "CancelRequest") && (Model.LeadStatusRecord == LeadStatus.RequestNCL ||
                            Model.LeadStatusRecord == LeadStatus.RequestLOI ||
                            Model.LeadStatusRecord == LeadStatus.RequestBook))
                {
                    <a href="#" class="btn btn-warning btnCancelRequest" data-id="@Model.ID"><i class="md md-cancel"></i> Cancel @Model.StatusDisplay</a>
                }
                @if (!eventClosed && (Model.LeadStatusRecord != LeadStatus.Booked))
            {
                if (Model.LeadStatusRecord != LeadStatus.Blocked)
                {
                    if (CurrentUser.HasPermission("Lead", "BlockLead"))
                    {
                            <a href="#" class="btn btn-warning btnBlock" data-id="@Model.ID"><i class="md md-lock-outline"></i> Block</a>
                        }
                    }
                    else
                    {
                        if (CurrentUser.HasPermission("Lead", "UnblockLead"))
                        {
                            <a href="#" class="btn btn-warning btnUnblock" data-id="@Model.ID"><i class="md md-lock-open"></i> Unblock</a>
                        }
                    }
                }
                @*@if (!eventClosed && (Model.LeadStatusRecord == LeadStatus.Initial || Model.LeadStatusRecord == LeadStatus.Reject))
            {
                if (CurrentUser.HasPermission("Lead", "Delete"))
                {
                        <a href="#" class="btn btn-danger btnDelete" data-id="@Model.ID"><i class="md md-delete"></i> Delete</a>
                    }
                }*@
            </div>
        </div>
    </div>
</div><!--end .card -->