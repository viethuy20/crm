@using NS
@using PQT.Domain.Enum
@using Resources
@model PQT.Web.Models.LeadModel

@{
    var title = "Reject ";
    if (!string.IsNullOrEmpty(Model.requestType))
    {
        var leadStatus = Enumeration.FromValue<LeadStatus>(Model.requestType);
        if (leadStatus != null)
        {
            title += leadStatus.DisplayName;
        }
    }
}

<div class="card card-underline" style="background: white; margin: auto; max-width: 600px; position: relative;">
    <div>
        <div class="card-head">
            <header><b>@title</b></header>
        </div><!--end .card-head -->
        @using (Ajax.BeginForm("RejectAction", "routeValues", new AjaxOptions { OnFailure = "onFailRejectAction", OnSuccess = "onSuccessRejectAction" }, new { @id = "CreateOrEditForm", @class = "form form-validate" }))
            {
            <div class="card-body">
                @Html.HiddenFor(m => m.id)
                <div class="col-sm-12">
                    <div class="form-group">
                        @Html.Bootstrap().TextBoxFor(m => m.Reason).Class("form-control").ShowValidationMessage(true)
                        @Html.Bootstrap().LabelFor(m => m.Reason).LabelText("Reject Reason").ShowRequiredStar(true)
                    </div>
                </div>
            </div><!--end .card-body -->
            <div class="card-actionbar">
                <div class="card-actionbar-row">
                    <a href="#" class="btn btn-default" id="request_close"><i class="md md-close"></i> Close</a>
                    @Html.Bootstrap().SubmitButton().Text(Resource.Reject).PrependIcon("md md-done").Style(ButtonStyle.Danger)
                </div>
            </div>
        }
    </div>
</div><!--end .card -->
