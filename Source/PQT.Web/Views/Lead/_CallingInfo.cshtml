
@using PQT.Domain.Entities
@using PQT.Domain.Enum
@using Resources
@model PQT.Web.Models.CallingModel

<section>
    <div class="col-md-8">
        <div class="card card-underline form-group">
            <div class="card-head">
                <header><b>Call Info</b></header>
            </div><!--end .card-head -->
            <div class="form">
                <div class="card-body" style="padding-bottom: 0px;">
                    @Html.HiddenFor(m => m.LeadID)
                    @Html.HiddenFor(m => m.EventID)
                    <div class="col-sm-4">
                        <div class="row">
                            @Html.HiddenFor(m => m.CompanyID)
                            <div class="row">
                                <div class="form-group">
                                    @Html.Bootstrap().TextBoxFor(m => m.CompanyName).Class("form-control").Readonly().ShowValidationMessage(true)
                                    @Html.Bootstrap().LabelFor(m => m.CompanyName).LabelText("Company Name")
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="form-group">
                                <div class="row">
                                    <div class="col-sm-3">
                                        @Html.Bootstrap().TextBoxFor(m => m.DialingCode).Class("form-control dialingCode").Disabled().ShowValidationMessage(true)
                                    </div>
                                    <div class="col-sm-9">
                                        @Html.Bootstrap().TextBoxFor(m => m.DirectLine).Class("form-control").ShowValidationMessage(true)
                                    </div>
                                </div>
                                @Html.Bootstrap().LabelFor(m => m.DirectLine).LabelText("Direct Line")
                            </div>
                        </div>
                    </div>
                    <div class="col-sm-4  text-center">
                        <div class="form-group">
                            <div class="row">
                                <div class="call-animation startCall">
                                    <i class="md md-phone-in-talk"></i>
                                </div>
                            </div>
                            <div class="row">
                                <div class="row text-center" style="margin-top: 20px; font-size: 26px;">
                                    <span id="call-tick">00:00</span>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="col-sm-4">
                        <div class="row">
                            <div class="form-group">
                                @Html.Bootstrap().TextBoxFor(m => m.JobTitle).Class("form-control text-capitalize").ShowValidationMessage(true)
                                @Html.Bootstrap().LabelFor(m => m.JobTitle).LabelText("Job Title")
                            </div>
                        </div>
                        <div class="row">
                            <div class="form-group">
                                @Html.Bootstrap().TextBoxFor(m => m.LineExtension).Class("form-control").ShowValidationMessage(true)
                                @Html.Bootstrap().LabelFor(m => m.LineExtension)
                            </div>
                        </div>
                    </div>
                </div>
                <div class="card-body" style="padding-top: 0px;">
                    @Html.HiddenFor(m => m.PhoneCall.StartTime, new { @class = "phoneCallStartTime" })
                    @Html.HiddenFor(m => m.PhoneCall.LeadID)
                    @Html.HiddenFor(m => m.TypeSubmit, new { @class = "typeSubmit" })
                    <div class="row" style="margin-top: 30px;">
                        <div class="col-sm-2">
                            <div class="form-group">
                                @Html.Bootstrap().DropDownListFor(m => m.Salutation, EnumerationHelper.ToSelectList<NameTitle>()).Class("form-control").ShowValidationMessage(true)
                                @Html.Bootstrap().LabelFor(m => m.Salutation).LabelText("Salutation")
                            </div>
                        </div>
                        <div class="col-sm-5">
                            <div class="form-group">
                                @Html.Bootstrap().TextBoxFor(m => m.FirstName).Class("form-control text-capitalize").ShowValidationMessage(true)
                                @Html.Bootstrap().LabelFor(m => m.FirstName).LabelText("First Name")
                            </div>
                        </div>
                        <div class="col-sm-5">
                            <div class="form-group">
                                @Html.Bootstrap().TextBoxFor(m => m.LastName).Class("form-control text-capitalize").ShowValidationMessage(true)
                                @Html.Bootstrap().LabelFor(m => m.LastName).LabelText("Last Name")
                            </div>
                        </div>
                        <div class="col-sm-4" style="padding-bottom: 10px;">
                            <div class="form-group">
                                <div class="col-sm-3">
                                    @Html.Bootstrap().TextBoxFor(m => m.DialingCode).Class("form-control dialingCode").Disabled().ShowValidationMessage(true)
                                </div>
                                <div class="col-sm-9">
                                    @Html.Bootstrap().TextBoxFor(m => m.MobilePhone1).Class("form-control").ShowValidationMessage(true)
                                </div>
                                @Html.Bootstrap().LabelFor(m => m.MobilePhone1).LabelText("Mobile Phone 1")
                            </div>
                        </div>
                        <div class="col-sm-4" style="padding-bottom: 10px;">
                            <div class="form-group">
                                <div class="col-sm-3">
                                    @Html.Bootstrap().TextBoxFor(m => m.DialingCode).Class("form-control dialingCode").Disabled().ShowValidationMessage(true)
                                </div>
                                <div class="col-sm-9">
                                    @Html.Bootstrap().TextBoxFor(m => m.MobilePhone2).Class("form-control").ShowValidationMessage(true)
                                </div>
                                @Html.Bootstrap().LabelFor(m => m.MobilePhone2).LabelText("Mobile Phone 2")
                            </div>
                        </div>
                        <div class="col-sm-4" style="padding-bottom: 10px;">
                            <div class="form-group">
                                <div class="col-sm-3">
                                    @Html.Bootstrap().TextBoxFor(m => m.DialingCode).Class("form-control dialingCode").Disabled().ShowValidationMessage(true)
                                </div>
                                <div class="col-sm-9">
                                    @Html.Bootstrap().TextBoxFor(m => m.MobilePhone3).Class("form-control").ShowValidationMessage(true)
                                </div>
                                @Html.Bootstrap().LabelFor(m => m.MobilePhone3).LabelText("Mobile Phone 3")
                            </div>
                        </div>
                        <div class="col-sm-4">
                            <div class="form-group">
                                @Html.Bootstrap().TextBoxFor(m => m.WorkEmail).Class("form-control text-lowercase").ShowValidationMessage(true)
                                @Html.Bootstrap().LabelFor(m => m.WorkEmail).LabelText("Work Email").ShowRequiredStar(true)
                            </div>
                        </div>
                        <div class="col-sm-4">
                            <div class="form-group">
                                @Html.Bootstrap().TextBoxFor(m => m.WorkEmail1).Class("form-control text-lowercase").ShowValidationMessage(true)
                                @Html.Bootstrap().LabelFor(m => m.WorkEmail1).LabelText("Work Email 1")
                            </div>
                        </div>
                        <div class="col-sm-4">
                            <div class="form-group">
                                @Html.Bootstrap().TextBoxFor(m => m.PersonalEmail).Class("form-control text-lowercase").ShowValidationMessage(true)
                                @Html.Bootstrap().LabelFor(m => m.PersonalEmail).LabelText("Personal Email")
                            </div>
                        </div>

                        <div class="col-sm-4">
                            <div class="form-group">
                                @Html.Bootstrap().TextBoxFor(m => m.EstimatedDelegateNumber).Class("form-control").ShowValidationMessage(true)
                                @Html.Bootstrap().LabelFor(m => m.EstimatedDelegateNumber)
                            </div>
                        </div>

                        <div class="col-sm-4">
                            <div class="form-group">
                                @Html.Bootstrap().TextBoxFor(m => m.TrainingBudgetPerHead).Class("form-control").ShowValidationMessage(true)
                                @Html.Bootstrap().LabelFor(m => m.TrainingBudgetPerHead)
                            </div>
                        </div>
                        <div class="col-sm-4">
                            <div class="form-group">
                                @Html.Bootstrap().DropDownListFor(m => m.GoodTrainingMonth, EnumerationHelper.ToSelectList<MonthStatus>()).HtmlAttributes(new { required = "required" }).Class("form-control").ShowValidationMessage(true)
                                @Html.Bootstrap().LabelFor(m => m.GoodTrainingMonth)
                            </div>
                        </div>
                        <div class="col-sm-6">
                            <div class="form-group">
                                @Html.Bootstrap().DropDownListFor(m => m.FirstFollowUpStatus, EnumerationHelper.ToSelectList<FollowUpStatus>()).HtmlAttributes(new { required = "required" }).Class("form-control").ShowValidationMessage(true)
                                @Html.Bootstrap().LabelFor(m => m.FirstFollowUpStatus)
                            </div>
                        </div>
                        <div class="col-sm-6">
                            <div class="form-group">
                                @Html.Bootstrap().DropDownListFor(m => m.FinalStatus, EnumerationHelper.ToSelectList<FinalStatus>()).HtmlAttributes(new { required = "required" }).Class("form-control").ShowValidationMessage(true)
                                @Html.Bootstrap().LabelFor(m => m.FinalStatus)
                            </div>
                        </div>
                        <div class="col-sm-6">
                            <div class="form-group">
                                <input type="text" name="@Html.NameFor(m=>m.TopicsInterested)" value="@Model.TopicsInterested" placeholder="                     " data-role="tagsinput" />
                                @Html.ValidationMessageFor(m => m.TopicsInterested)
                                @Html.Bootstrap().LabelFor(m => m.TopicsInterested)
                            </div>
                        </div>
                        <div class="col-sm-6">
                            <div class="form-group">
                                @Html.Bootstrap().TextBoxFor(m => m.LocationInterested).Class("form-control").ShowValidationMessage(true)
                                @Html.Bootstrap().LabelFor(m => m.LocationInterested)
                            </div>
                        </div>

                        <div class="col-sm-6">
                            <div class="form-group">
                                @Html.Bootstrap().TextAreaFor(m => m.PhoneCall.Remark).Rows(5).Class("form-control").ShowValidationMessage(true)
                                @Html.Bootstrap().LabelFor(m => m.PhoneCall.Remark).LabelText("Call Remarks")
                            </div>
                        </div>
                        <div class="col-sm-3">
                            <div class="form-group">
                                @Html.DatePickerFor(m => m.PhoneCall.CallBackDate, new { @class = "form-control" })
                                @Html.ValidationMessageFor(m => m.PhoneCall.CallBackDate)
                                @Html.Bootstrap().LabelFor(m => m.PhoneCall.CallBackDate).LabelText("Call Back Date")
                            </div>
                        </div>
                        <div class="col-sm-3">
                            <div class="form-group">
                                @Html.TextBoxFor(m => m.PhoneCall.CallBackTiming, new { @class = "form-control datetime", @placeholder="HH:mm" })
                                @Html.ValidationMessageFor(m => m.PhoneCall.CallBackTiming)
                                @Html.Bootstrap().LabelFor(m => m.PhoneCall.CallBackTiming).LabelText("Call Back Time")
                            </div>
                        </div>
                    </div>
                </div><!--end .card-body -->
                @*<div class="card-actionbar">
                        <div class="card-actionbar-row">
                            <button type="button" class="btn btn-default pull-left" id="endcall_save"><i class="md md-call-end"></i> End Call & Save</button>
                            @if (Model.Lead == null || Model.Lead.LeadStatusRecord == LeadStatus.Initial || Model.Lead.LeadStatusRecord == LeadStatus.Reject)
                            {
                                <button type="button" class="btn btn-success" id="endcall_requestncl"><i class="md md-call-end"></i> End Call & Request To NCL</button>
                            }
                        </div>
                    </div>*@
            </div><!--end .card -->
        </div><!--end .card -->
    </div>
    <div class="col-md-4">
        <div class="card card-underline  form-group">
            <div class="card-head">
                <header><b>Company Info</b></header>
            </div><!--end .card-head -->
            <div class="form">
                <div class="card-body">
                    @Html.HiddenFor(m => m.EventCompany.ID)
                    @Html.HiddenFor(m => m.EventCompany.EventID)
                    @Html.HiddenFor(m => m.EventCompany.CompanyID)
                    <div class="col-sm-12">
                        <div class="form-group">
                            @Html.Bootstrap().DropDownListFor(m => m.EventCompany.BudgetMonth, EnumerationHelper.ToSelectList<MonthStatus>()).HtmlAttributes(new { required = "required" }).Class("form-control").ShowValidationMessage(true)
                            @Html.Bootstrap().LabelFor(m => m.EventCompany.BudgetMonth)
                        </div>
                    </div>
                    <div class="col-sm-12">
                        <div class="form-group">
                            @Html.Bootstrap().TextAreaFor(m => m.EventCompany.BusinessUnit).Rows(5).Class("form-control").ShowValidationMessage(true)
                            @Html.Bootstrap().LabelFor(m => m.EventCompany.BusinessUnit)
                        </div>
                    </div>
                    <div class="col-sm-12">
                        <div class="form-group">
                            @Html.Bootstrap().TextAreaFor(m => m.EventCompany.Remarks).Rows(5).Class("form-control").ShowValidationMessage(true)
                            @Html.Bootstrap().LabelFor(m => m.EventCompany.Remarks)
                        </div>
                    </div>
                </div><!--end .card -->
            </div><!--end .form -->
        </div><!--end .card -->
    </div>
</section>

@Html.Script(
    @<script>
        $(".datetime").datetimepicker({
            format: 'HH:mm'
        });


        function precisionRound(number, precision) {
            var factor = Math.pow(10, precision);
            return Math.round(number * factor) / factor;
        }

        var tickStarted = false;
        var startTime = new Date();
        function tickTime() {
            var seconds = precisionRound((new Date() - startTime) / 1000, 0);
            var m = Math.floor(seconds / 60);
            var s = seconds - m * 60;
            m = checkTime(m);
            s = checkTime(s);
            $('#call-tick').html(m + ":" + s);
            if (tickStarted) {
                var t = setTimeout(tickTime, 500);
            } else {
                tickStarted = false;
            }
        }
        function checkTime(i) {
            if (i < 10) { i = "0" + i };  // add zero in front of numbers < 10
            return i;
        }
        function StartTick() {
            startTime = new Date();
            tickStarted = true;
            $('.phoneCallStartTime').val(moment(startTime).format("DD/MM/YYYY HH:mm:ss"));
            tickTime();
        }

    </script>
                        )
