@using PQT.Domain.Enum
@using Resources
@model PQT.Web.Models.LeadModelView

@{
    ViewBag.Title = "Call Detail";
    var eventClosed = Model.Event != null && (Model.Event.IsEventEnd || Model.Event.EndDate.Date < DateTime.Today) ? true : false;
}
<style>
    .card .Reject {
        background-color: #faebd4 !important;
    }

        .card .Reject input {
            color: #8a6d3b;
        }

    .card .Blocked ,.card .Deleted {
        background-color: #fad7d4 !important;
    }

        .card .Blocked input, .card .Deleted input {
            color: #a94442;
        }

    .card .LOI,
    .card .Live {
        background-color: #d4e9fa !important;
    }

        .card .LOI input,
        .card .Live input {
            color: #31708f;
        }

    .card .Booked {
        background-color: #d4fad6 !important;
    }

        .card .Booked input {
            color: #3c763d;
        }

    .card.RequestNCL,
    .card.RequestLOI,
    .card.RequestBooking {
        background-color: #faf9d4 !important;
    }

        .card.RequestNCL input,
        .card.RequestLOI input,
        .card.RequestBooking input {
            color: #a5a100;
        }
</style>
<section>

    <div class="row section-header" style="height: auto">
        <h2 class="text-primary col-sm-3">@ViewBag.Title</h2>

    </div>
    <div class="col-sm-12">
        <div class="row">
            <div class="col-sm-12" style="padding-right: 24px;padding-bottom: 12px">
                @if (CurrentUser.HasRoleLevel(RoleLevel.ManagerLevel))
            {
                    @Html.Bootstrap().ActionLinkButton(Resource.ButtonBackToList, "NCLForManager").Id("btnBacklist").RouteValues(new { id = Model.Lead.EventID }).PrependIcon("md md-arrow-back")
                }
                else
                {
                    @Html.Bootstrap().ActionLinkButton(Resource.ButtonBackToList, "Index").Id("btnBacklist").RouteValues(new { id = Model.Lead.EventID }).PrependIcon("md md-arrow-back")
                }

                @if (!eventClosed)
                {
                    if (CurrentUser.HasPermission("Lead", "CallingForm") && (Model.Lead.LeadStatusRecord != LeadStatus.Booked))
                    {
                        @Html.Bootstrap().ActionLinkButton("Edit", "CallingForm").RouteValues(new { id = Model.Lead.ID }).Class("btn-primary").PrependIcon("md md-edit")
                    }
                }
                @if (!eventClosed && CurrentUser.HasPermission("Lead", "RequestAction") && (Model.Lead.LeadStatusRecord == LeadStatus.Initial ||
                                                                                Model.Lead.LeadStatusRecord == LeadStatus.Reject))
                {
                    @Html.Bootstrap().ActionLinkButton("Request To NCL", "RequestAction").Id("request_ncl").Class("btn-info").PrependIcon("md md-phone-locked")
                }

                @if (!eventClosed && CurrentUser.HasPermission("Lead", "ApprovalAction") && (Model.Lead.LeadStatusRecord == LeadStatus.RequestNCL ||
                                                                                 Model.Lead.LeadStatusRecord == LeadStatus.RequestBook ||
                                                                                 Model.Lead.LeadStatusRecord == LeadStatus.RequestLOI))
                {
                    @Html.Bootstrap().ActionLinkButton("Approve " + Model.Lead.StatusDisplay, "ApprovalAction").Id("approve_action").Class("btn-success").PrependIcon("md md-done")
                }

                @if (!eventClosed && CurrentUser.HasPermission("Lead", "RejectAction") && (Model.Lead.LeadStatusRecord == LeadStatus.RequestNCL ||
                                                                               Model.Lead.LeadStatusRecord == LeadStatus.RequestBook ||
                                                                               Model.Lead.LeadStatusRecord == LeadStatus.RequestLOI))
                {
                    @Html.Bootstrap().ActionLinkButton("Reject " + Model.Lead.StatusDisplay, "RejectAction").RouteValues(new { id = Model.Lead.ID }).Class("simple-ajax-popup-align-top btn-danger").PrependIcon("md md-cancel")
                }


                @if (!eventClosed && CurrentUser.HasPermission("Lead", "RequestAction") && (Model.Lead.LeadStatusRecord == LeadStatus.Initial ||
                                                                                Model.Lead.LeadStatusRecord == LeadStatus.Reject ||
                                                                                Model.Lead.LeadStatusRecord == LeadStatus.RequestNCL ||
                                                                                Model.Lead.LeadStatusRecord == LeadStatus.Live))
                {
                    @Html.Bootstrap().ActionLinkButton("Request To LOI", "RequestAction").RouteValues(new { id = Model.Lead.ID, requestType = LeadStatus.RequestLOI }).Class("simple-ajax-popup-align-top btn-info").PrependIcon("md md-mail")
                }
                @if (!eventClosed && CurrentUser.HasPermission("Lead", "RequestAction") && (Model.Lead.LeadStatusRecord != LeadStatus.RequestBook &&
                                                                                Model.Lead.LeadStatusRecord != LeadStatus.Booked))
                {
                    @Html.Bootstrap().ActionLinkButton("Request To Book", "Create", "Booking").RouteValues(new { id = Model.Lead.ID }).Class("btn-success").PrependIcon("md md-my-library-books")
                }
                @if (!eventClosed && CurrentUser.HasPermission("Lead", "CancelRequest") && (Model.Lead.LeadStatusRecord == LeadStatus.RequestNCL ||
                                                                                Model.Lead.LeadStatusRecord == LeadStatus.RequestLOI ||
                                                                                Model.Lead.LeadStatusRecord == LeadStatus.RequestBook))
                {
                    @Html.Bootstrap().ActionLinkButton("Cancel " + Model.Lead.StatusDisplay, "CancelRequest").Id("cancel_request").Class("btn-warning").PrependIcon("md md-cancel")
                }
                @if (!eventClosed && (Model.Lead.LeadStatusRecord != LeadStatus.Booked))
            {
                if (Model.Lead.LeadStatusRecord != LeadStatus.Blocked)
                {
                    if (CurrentUser.HasPermission("Lead", "BlockLead"))
                    {
                            @Html.Bootstrap().ActionLinkButton("Block ", "BlockLead").Id("lead_block").Class("btn-warning").PrependIcon("md md-lock-outline")
                        }
                    }
                    else
                    {
                        if (CurrentUser.HasPermission("Lead", "UnblockLead"))
                        {
                            @Html.Bootstrap().ActionLinkButton("Unblock ", "UnblockLead").Id("lead_unblock").Class("btn-warning").PrependIcon("md md-lock-open")
                        }
                    }
                }
                @if (!eventClosed && (Model.Lead.LeadStatusRecord != LeadStatus.Deleted))
            {
                if (CurrentUser.HasPermission("Lead", "Delete"))
                {
                        @Html.Bootstrap().ActionLinkButton("Delete ", "Delete").Id("lead_delete").Class("btn-danger").PrependIcon("md md-delete")
                    }
                }
                @if (!eventClosed && CurrentUser.HasPermission("Lead", "CallingForm") && (Model.Lead.LeadStatusRecord != LeadStatus.Booked))
                {
                    <a class="btn btn-success" href="@Url.Action("CallingForm")/@Model.Lead.ID"><i class="md md-phone"></i> Call Back</a>
                }
            </div>
            @if (CurrentUser.HasPermission("Lead", "CallingForm") && (Model.Lead.Event.ClosingDate == null || Model.Lead.Event.ClosingDate >= DateTime.Today))
            {
                <a class="btn ink-reaction btn-floating-action btn-primary" title="Start New Call"
                   href="#offcanvas-comResource" data-toggle="offcanvas"
                   style="position: fixed; top: 130px; right: 0; display: block; z-index: 1006;"><i class="fa fa-phone"></i></a>
            }
        </div>

        <div class="card">
            <div class="card-body @Model.Lead.ClassStatus form">
                <div class="row">
                    <div class="col-sm-6">
                        <div class="form-group">
                            @Html.Bootstrap().TextBoxFor(m => m.Lead.StatusDisplay).Class("form-control").Disabled().ShowValidationMessage(true)
                            @Html.Bootstrap().LabelFor(m => m.Lead.StatusDisplay).LabelText("CALL STATUS")
                        </div>
                    </div>
                    <div class="col-sm-6">
                        <div class="form-group">
                            @Html.Bootstrap().TextBoxFor(m => m.Lead.StatusUser).Class("form-control").Disabled().ShowValidationMessage(true)
                            @Html.Bootstrap().LabelFor(m => m.Lead.StatusUser).LabelText("CHANGE BY")
                        </div>
                    </div>
                    <div class="col-sm-6">
                        <div class="form-group">
                            @Html.Bootstrap().TextBoxFor(m => m.Lead.StatusUpdateTimeStr).Class("form-control").Disabled().ShowValidationMessage(true)
                            @Html.Bootstrap().LabelFor(m => m.Lead.StatusUpdateTimeStr).LabelText("UPDATE TIME")
                        </div>
                    </div>
                    @if (!string.IsNullOrEmpty(Model.Lead.LeadStatusRecord.Attachment))
            {
                        <div class="col-sm-6">
                            <div class="form-group">
                                <div class="form-control" readonly name="@Html.NameFor(m=>m.Lead.LeadStatusRecord.Attachment)">
                                    <a href="@Model.Lead.LeadStatusRecord.AttachmentUrl" target="_blank">@Model.Lead.LeadStatusRecord.Attachment</a>
                                </div>
                                @Html.Bootstrap().LabelFor(m => m.Lead.LeadStatusRecord.Attachment).LabelText("ATTACHMENT")
                            </div>
                        </div>
                    }
                    @if (Model.Lead.LeadStatusRecord == LeadStatus.Reject)
            {
                        <div class="col-sm-6">
                            <div class="form-group">
                                @Html.Bootstrap().TextBoxFor(m => m.Lead.LeadStatusRecord.Message).Class("form-control").HtmlAttributes(new { @style = "color:#f44336" }).Disabled().ShowValidationMessage(true)
                                @Html.Bootstrap().LabelFor(m => m.Lead.LeadStatusRecord.Message).LabelText("REASON OF REJECT")
                            </div>
                        </div>
                    }
                </div>
            </div>
        </div>
        <div class="card">
            <div class="card-body form">
                <div class="row">
                    @if (CurrentUser.HasRoleLevel(RoleLevel.ManagerLevel))
            {
                        <div class="col-sm-12">
                            <div class="form-group">
                                @Html.Bootstrap().TextBoxFor(m => m.Lead.Event.PrimaryJobtitleKeywords).Class("form-control").Disabled().ShowValidationMessage(true)
                                @Html.Bootstrap().LabelFor(m => m.Lead.Event.PrimaryJobtitleKeywords)
                            </div>
                        </div>
                        <div class="col-sm-12">
                            <div class="form-group">
                                @Html.Bootstrap().TextBoxFor(m => m.Lead.Event.SecondaryJobtitleKeywords).Class("form-control").Disabled().ShowValidationMessage(true)
                                @Html.Bootstrap().LabelFor(m => m.Lead.Event.SecondaryJobtitleKeywords)
                            </div>
                        </div>
                    }
                    <div class="col-sm-2">
                        <div class="form-group">
                            @Html.Bootstrap().TextBoxFor(m => m.Lead.Event.EventCode).Class("form-control").Disabled().ShowValidationMessage(true)
                            @Html.Bootstrap().LabelFor(m => m.Lead.Event.EventCode)
                        </div>
                    </div>
                    <div class="col-sm-4">
                        <div class="form-group">
                            @Html.Bootstrap().TextBoxFor(m => m.Lead.Event.EventName).Class("form-control").Disabled().ShowValidationMessage(true)
                            @Html.Bootstrap().LabelFor(m => m.Lead.Event.EventName)
                        </div>
                    </div>
                    <div class="col-sm-6">
                        <div class="form-group">
                            @Html.Bootstrap().TextBoxFor(m => m.Lead.Event.Location).Class("form-control").Disabled().ShowValidationMessage(true)
                            @Html.Bootstrap().LabelFor(m => m.Lead.Event.Location).LabelText("Event Location")
                        </div>
                    </div>
                    <div class="col-sm-6">
                        <div class="form-group">
                            @Html.Bootstrap().TextBoxFor(m => m.Lead.CompanyName).Class("form-control").Disabled().ShowValidationMessage(true)
                            @Html.Bootstrap().LabelFor(m => m.Lead.CompanyName)
                        </div>
                        <div class="form-group">
                            @Html.Bootstrap().TextBoxFor(m => m.Lead.LineExtension).Class("form-control").Disabled().ShowValidationMessage(true)
                            @Html.Bootstrap().LabelFor(m => m.Lead.LineExtension)
                        </div>
                    </div>
                    <div class="col-sm-6">
                        <div class="form-group">
                            @Html.Bootstrap().TextBoxFor(m => m.Lead.JobTitle).Class("form-control").Disabled().ShowValidationMessage(true)
                            @Html.Bootstrap().LabelFor(m => m.Lead.JobTitle)
                        </div>
                        <div class="form-group">
                            @Html.Bootstrap().TextBoxFor(m => m.Lead.DirectLine).Class("form-control").Disabled().ShowValidationMessage(true)
                            @Html.Bootstrap().LabelFor(m => m.Lead.DirectLine)
                        </div>
                    </div>
                    <div class="col-sm-2">
                        <div class="form-group">
                            @Html.Bootstrap().TextBoxFor(m => m.Lead.Salutation).Class("form-control").Disabled().ShowValidationMessage(true)
                            @Html.Bootstrap().LabelFor(m => m.Lead.Salutation)
                        </div>
                    </div>
                    <div class="col-sm-5">
                        <div class="form-group">
                            @Html.Bootstrap().TextBoxFor(m => m.Lead.FirstName).Class("form-control").Disabled().ShowValidationMessage(true)
                            @Html.Bootstrap().LabelFor(m => m.Lead.FirstName)
                        </div>
                    </div>
                    <div class="col-sm-5">
                        <div class="form-group">
                            @Html.Bootstrap().TextBoxFor(m => m.Lead.LastName).Class("form-control").Disabled().ShowValidationMessage(true)
                            @Html.Bootstrap().LabelFor(m => m.Lead.LastName)
                        </div>
                    </div>
                    <div class="col-sm-4">
                        <div class="form-group">
                            @Html.Bootstrap().TextBoxFor(m => m.Lead.MobilePhone1).Class("form-control").Disabled().ShowValidationMessage(true)
                            @Html.Bootstrap().LabelFor(m => m.Lead.MobilePhone1)
                        </div>
                    </div>
                    <div class="col-sm-4">
                        <div class="form-group">
                            @Html.Bootstrap().TextBoxFor(m => m.Lead.MobilePhone2).Class("form-control").Disabled().ShowValidationMessage(true)
                            @Html.Bootstrap().LabelFor(m => m.Lead.MobilePhone2)
                        </div>
                    </div>
                    <div class="col-sm-4">
                        <div class="form-group">
                            @Html.Bootstrap().TextBoxFor(m => m.Lead.MobilePhone3).Class("form-control").Disabled().ShowValidationMessage(true)
                            @Html.Bootstrap().LabelFor(m => m.Lead.MobilePhone3)
                        </div>
                    </div>
                    <div class="col-sm-4">
                        <div class="form-group">
                            @Html.Bootstrap().TextBoxFor(m => m.Lead.WorkEmail).Class("form-control").Disabled().ShowValidationMessage(true)
                            @Html.Bootstrap().LabelFor(m => m.Lead.WorkEmail)
                        </div>
                    </div>
                    <div class="col-sm-4">
                        <div class="form-group">
                            @Html.Bootstrap().TextBoxFor(m => m.Lead.WorkEmail1).Class("form-control").Disabled().ShowValidationMessage(true)
                            @Html.Bootstrap().LabelFor(m => m.Lead.WorkEmail1)
                        </div>
                    </div>
                    <div class="col-sm-4">
                        <div class="form-group">
                            @Html.Bootstrap().TextBoxFor(m => m.Lead.PersonalEmail).Class("form-control").Disabled().ShowValidationMessage(true)
                            @Html.Bootstrap().LabelFor(m => m.Lead.PersonalEmail)
                        </div>
                    </div>
                    <div class="col-sm-4">
                        <div class="form-group">
                            @Html.Bootstrap().TextBoxFor(m => m.Lead.EstimatedDelegateNumber).Class("form-control").Disabled().ShowValidationMessage(true)
                            @Html.Bootstrap().LabelFor(m => m.Lead.EstimatedDelegateNumber)
                        </div>
                    </div>
                    <div class="col-sm-4">
                        <div class="form-group">
                            @Html.Bootstrap().TextBoxFor(m => m.Lead.TrainingBudgetPerHead).Class("form-control").Disabled().ShowValidationMessage(true)
                            @Html.Bootstrap().LabelFor(m => m.Lead.TrainingBudgetPerHead)
                        </div>
                    </div>
                    <div class="col-sm-4">
                        <div class="form-group">
                            @Html.Bootstrap().TextBoxFor(m => m.Lead.GoodTrainingMonthStr).Class("form-control").Disabled().ShowValidationMessage(true)
                            @Html.Bootstrap().LabelFor(m => m.Lead.GoodTrainingMonthStr).LabelText("Good Training Month")
                        </div>
                    </div>
                    <div class="col-sm-6">
                        <div class="form-group">
                            @Html.Bootstrap().TextBoxFor(m => m.Lead.TopicsInterested).Class("form-control").Disabled().ShowValidationMessage(true)
                            @Html.Bootstrap().LabelFor(m => m.Lead.TopicsInterested).LabelText("Topics Interested")
                        </div>
                    </div>
                    <div class="col-sm-6">
                        <div class="form-group">
                            @Html.Bootstrap().TextBoxFor(m => m.Lead.LocationInterested).Class("form-control").Disabled().ShowValidationMessage(true)
                            @Html.Bootstrap().LabelFor(m => m.Lead.LocationInterested).LabelText("Location Interested")
                        </div>
                    </div>
                </div>
            </div>
        </div>


        <div class="card card-underline">
            <div class="card-head">
                <header>Call Records</header>
            </div>
            <div class="card-body">
                <div class="row">
                    <table class="table no-margin">
                        <thead>
                            <tr>
                                <th>#</th>
                                <th>Call Duration</th>
                                <th>Call Remarks</th>
                                <th>Call Back Date</th>
                                <th>Call Back Timing</th>
                                <th></th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var phonecall in Model.Lead.PhoneCalls)
                            {
                                <tr id="phoneCall_@phonecall.ID">
                                    <td>@phonecall.StartTime.ToString("dd-MMM-yy HH:mm:ss")</td>
                                    <td>@((phonecall.EndTime - phonecall.StartTime))</td>
                                    <td>@Html.Raw(phonecall.RemarkHtml)</td>
                                    <td>@phonecall.CallBackDateStr</td>
                                    <td>@phonecall.CallBackTimingStr</td>
                                    <td>
                                        @*@if (Model.Lead.LeadStatusRecord != LeadStatus.Booked)
                                        {*@
                                            <a href="@Url.Action("EditCallRecord")?id=@phonecall.ID" class="simple-ajax-popup-align-top"><i class="md md-edit text-info"></i></a>
                                        @*}*@
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div><!--end .card-body -->
            <div class="card-actionbar">
                <div class="card-actionbar-row">
                    @if (CurrentUser.HasPermission("Lead", "CallingForm") && (Model.Lead.LeadStatusRecord != LeadStatus.Booked))
            {
                        <a class="btn btn-success pull-left " href="@Url.Action("CallingForm")/@Model.Lead.ID"><i class="md md-phone"></i> Call Back</a>
                    }
                </div>
            </div>
        </div>
    </div>
    <div class="offcanvas">
        <div id="offcanvas-comResource" class="offcanvas-pane width-12" style="">
            <div class="offcanvas-head">
                <header>Company Resources</header>
                <div class="offcanvas-tools" style="left:initial">
                    <a class="btn btn-icon-toggle btn-default-light pull-right" data-dismiss="offcanvas">
                        <i class="md md-close"></i>
                    </a>
                </div>
            </div>
            <div class="offcanvas-body">
                @Html.Partial("_CompanyResourceList", Model.Lead.EventID)
            </div>
        </div>
    </div>
</section>
@Html.Script(
    @<script>
        function updateCanvas() {
            var windowW = $(window).width();
            var wCavas = (windowW / 2).toFixed(0);
            if (wCavas < 480) {
                $('#offcanvas-comResource').css('width', '480px');
            } else {
                $('#offcanvas-comResource').css('width', wCavas+ 'px');
            }
        }

        updateCanvas();
        window.onresize = function (event) {
            updateCanvas();
        };


         UpdateSeenNotify(@Model.Lead.ID, @NotifyType.Lead.Value);
         $(document).on('click', '#lead_delete', function (e) {
             e.preventDefault();
             bootbox.confirm("Do you want to delete this call?", function (isOK) {
                 if (isOK) {
                     $.ajax({
                         url: '@Url.Action("Delete")?id=@Model.Lead.ID',
                         type: 'POST',
                         success: function (data) {
                             if (data == "") {
                                 location.reload();
                             } else {
                                 toastr.error(data);
                             }
                         },
                         error: function () {
                             toastr.error("Delete failed");
                         }
                     });
                 }
             });
         });
         $(document).on('click', '#lead_block', function (e) {
             e.preventDefault();
             bootbox.confirm("@Resource.ConfirmBlock", function (isOK) {
                 if (isOK) {
                     $.ajax({
                         url: '@Url.Action("BlockLead")/@Model.Lead.ID',
                         type: 'POST',
                         success: function (data) {
                             if (data == "") {
                                 location.reload();
                             } else {
                                 toastr.error(data);
                             }
                         },
                         error: function () {
                             toastr.error("Block failed");
                         }
                     });
                 }
             });
         });
         $(document).on('click', '#lead_unblock', function (e) {
             e.preventDefault();
             bootbox.confirm("@Resource.ConfirmUnblock", function (isOK) {
                 if (isOK) {
                     $.ajax({
                         url: '@Url.Action("UnblockLead")/@Model.Lead.ID',
                         type: 'POST',
                         success: function (data) {
                             if (data == "") {
                                 location.reload();
                             } else {
                                 toastr.error(data);
                             }
                         },
                         error: function () {
                             toastr.error("Unblock failed");
                         }
                     });
                 }
             });
         });

         $(document).on('click', '#request_ncl', function (e) {
             e.preventDefault();
             bootbox.confirm("@Resource.ConfirmRequestNCL", function (isOK) {
                 if (isOK) {
                     $.ajax({
                         url: '@Url.Action("RequestAction")?id=@Model.Lead.ID&requestType=@LeadStatus.RequestNCL',
                         type: 'POST',
                         success: function (data) {
                             if (data == "") {
                                 //toastr.success("Request successful");
                                 location.reload();
                             } else {
                                 toastr.error(data);
                             }
                         },
                         error: function () {
                             toastr.error("Request failed");
                         }
                     });
                 }
             });
         });
         $(document).on('click', '#cancel_request', function (e) {
             e.preventDefault();
             bootbox.confirm("@Resource.ConfirmCancelRequest", function (isOK) {
                 if (isOK) {
                     $.ajax({
                         url: '@Url.Action("CancelRequest")?id=@Model.Lead.ID',
                         type: 'POST',
                         success: function (data) {
                             if (data == "") {
                                 //toastr.success("Cancel successful");
                                 location.reload();
                             } else {
                                 toastr.error(data);
                             }
                         },
                         error: function () {
                             toastr.error("Cancel failed");
                         }
                     });
                 }
             });
         });

         $(document).on('click', '#approve_action', function (e) {
             e.preventDefault();
             bootbox.confirm("@Resource.ConfirmApprove", function (isOK) {
                 if (isOK) {
                     $.ajax({
                         url: '@Url.Action("ApprovalAction")?id=@Model.Lead.ID',
                         type: 'POST',
                         success: function (data) {
                             if (data == "") {
                                 location.reload();
                             } else {
                                 toastr.error(data);
                             }
                         },
                         error: function () {
                             toastr.error("Cancel failed");
                         }
                     });
                 }
             });
         });



         @*$(document).on('click', '.simple-ajax-popup-align-top-custom', function (e) {
             e.preventDefault();
             $(this).magnificPopup({
                 type: 'ajax',
                 closeOnBgClick:false,
                 callbacks: {
                     ajaxContentAdded: function () {
                         $('.mfp-container .date-picker,.mfp-container .datepicker').datepicker({
                             autoclose: true,
                             todayHighlight: true,
                             format: 'dd/mm/yyyy'
                         }).on('changeDate', function (ev) {
                             $(this).datepicker('hide');
                         });

                         $(".mfp-container select:not(.select-ajax)").select2({
                             placeholder: "@Resource.PleaseSelect",
                             width: '100%',
                             allowClear: true,
                         });

                         $(".mfp-container select[data-display=select2]").select2({
                             placeholder: "@Resource.PleaseSelect",
                             width: '100%',
                             allowClear: true,
                         });

                         $("form").removeData("validator");
                         $("form").removeData("unobtrusiveValidation");
                         $.validator.unobtrusive.parse("form");
                     }
                 }
             }).magnificPopup('open');
         });*@
    </script>)


@Html.Script(
    @<script>

         $(document).on('click', '#request_close', function (e) {
             e.preventDefault();
             $.magnificPopup.close();
         });

         $(document).on('click', '#request_submit', function (e) {
             e.preventDefault();
             var formdata = new FormData();
             formdata.append("id", $("#request_id").val());
             formdata.append("requestType", $("#request_Type").val());
             var getfile = $('#request-attachment')[0];
             if (getfile) {
                 for (var i = 0; i < getfile.files.length; i++) {
                     if (getfile.files[i].name) {
                         formdata.append("AttachmentFile", getfile.files[i]);
                     }
                 }
             }
             $.ajax({
                 url: '@Url.Action("RequestAction")',
                 data: formdata,
                 contentType: false,
                 processData: false,
                 async: false,
                 type: 'POST',
                 success: function (data) {
                     if (data == "") {
                         toastr.success("Submit successful");
                         location.reload();
                     } else {
                         toastr.error(data);
                     }
                 },
                 error: function () {
                     toastr.error("Submit failed");
                 }
             });
         });

    </script>)

@Html.Script(
    @<script>

         function onFailRejectAction() {
             toastr.error('@Resource.SaveError');
         }
         function onSuccessRejectAction(data) {
             if (data == "") {
                 toastr.success("Reject successful");
                 $.magnificPopup.close();
                 location.reload();
             } else {
                 toastr.error(data);
             }
         }
    </script>)


@Html.Script(
    @<script>

         function onFailEdit() {
             toastr.error('@Resource.SaveError');
         }
         function onSuccessEdit(data) {
             if (data.Code == 0) {
                 if (data.Message)
                     toastr.error(data.Message);
                 else
                     toastr.error('@Resource.SaveFailed');
             } else if (data.Code == 1) {
                 toastr.success('@Resource.UpdateSuccessful');
                 $.magnificPopup.close();
                 location.reload();
             }
         }
    </script>)
@Html.Script(
    @<script>

         //$("#btnBacklist").on("click",
         //    function(e) {
         //        e.preventDefault();
         //        if (document.referrer != "" && (document.referrer.toLowerCase().indexOf("/booking/") < 0
         //            || document.referrer.toLowerCase().indexOf("/lead/startcallform/") < 0
         //            || document.referrer.toLowerCase().indexOf("/lead/callingform/") < 0)) {
         //            history.back();
         //        } else {
         //            location.href = $(this).href;
         //        }
         //    });


         function onEditCallRecordFail() {
             $(".error").removeClass('hide');
             $(".success").addClass('hide');
             $(".texterror").text("@Resource.Error");
         }
         function onEditCallRecordSuccess(data) {
             $(".error").addClass('hide');
             $(".success").addClass('hide');

             if (data.Code == 1) {
                 $(".success").removeClass('hide');
                 $("textsuccess").data('@Resource.SaveSuccessful');
                 updateItem(data.Model);
                 $.magnificPopup.close();
             } else {
                 $(".texterror").text('@Resource.SaveError');
                 $(".error").removeClass('hide');
             }
         }

         function updateItem(data) {
             var tr = $("#phoneCall_" + data.ID);
             if (tr) {
                 $(tr).find('td:eq(2)').html(data.RemarkHtml);
                 $(tr).find('td:eq(3)').html(data.CallBackDateStr);
                 $(tr).find('td:eq(4)').html(data.CallBackTimingStr);
             }
         }

         $(document).on('click', '#crtable tbody tr', function () {
             location.href = '@Url.Action("StartCallForm",new{id=Model.Lead.EventID})?resourceId=' + $(this).data("id");
         });
    </script>)